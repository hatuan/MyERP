#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ClassGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace MyERPModel	
{
	[Table("dmct")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class Dmct : IDataErrorInfo, INotifyPropertyChanging, INotifyPropertyChanged
	{
		private string _ma_Ct;
		[Column("ma_ct", IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "text")]
		[Storage("_ma_Ct")]
		[Required()]
		[Key()]
		public virtual string Ma_Ct
		{
			get
			{
				return this._ma_Ct;
			}
			set
			{
				if(this._ma_Ct != value)
				{
					this.OnPropertyChanging("Ma_Ct");
					this._ma_Ct = value;
					this.OnPropertyChanged("Ma_Ct");
				}
			}
		}
		
		private long _user_Id2;
		[Column("user_id2", Length = 0, Scale = 0, SqlType = "int8")]
		[Storage("_user_Id2")]
		[Required()]
		public virtual long User_Id2
		{
			get
			{
				return this._user_Id2;
			}
			set
			{
				if(this._user_Id2 != value)
				{
					this.OnPropertyChanging("User_Id2");
					this._user_Id2 = value;
					this.OnPropertyChanged("User_Id2");
				}
			}
		}
		
		private long _user_Id0;
		[Column("user_id0", Length = 0, Scale = 0, SqlType = "int8")]
		[Storage("_user_Id0")]
		[Required()]
		public virtual long User_Id0
		{
			get
			{
				return this._user_Id0;
			}
			set
			{
				if(this._user_Id0 != value)
				{
					this.OnPropertyChanging("User_Id0");
					this._user_Id0 = value;
					this.OnPropertyChanged("User_Id0");
				}
			}
		}
		
		private string _ten_Ct2;
		[Column("ten_ct2", Length = 0, Scale = 0, SqlType = "text")]
		[Storage("_ten_Ct2")]
		[Required()]
		public virtual string Ten_Ct2
		{
			get
			{
				return this._ten_Ct2;
			}
			set
			{
				if(this._ten_Ct2 != value)
				{
					this.OnPropertyChanging("Ten_Ct2");
					this._ten_Ct2 = value;
					this.OnPropertyChanged("Ten_Ct2");
				}
			}
		}
		
		private string _ten_Ct;
		[Column("ten_ct", Length = 0, Scale = 0, SqlType = "text")]
		[Storage("_ten_Ct")]
		[Required()]
		public virtual string Ten_Ct
		{
			get
			{
				return this._ten_Ct;
			}
			set
			{
				if(this._ten_Ct != value)
				{
					this.OnPropertyChanging("Ten_Ct");
					this._ten_Ct = value;
					this.OnPropertyChanged("Ten_Ct");
				}
			}
		}
		
		private short _stt_Ctntxt;
		[Column("stt_ctntxt", Length = 0, Scale = 0, SqlType = "int2")]
		[Storage("_stt_Ctntxt")]
		[Required()]
		public virtual short Stt_Ctntxt
		{
			get
			{
				return this._stt_Ctntxt;
			}
			set
			{
				if(this._stt_Ctntxt != value)
				{
					this.OnPropertyChanging("Stt_Ctntxt");
					this._stt_Ctntxt = value;
					this.OnPropertyChanged("Stt_Ctntxt");
				}
			}
		}
		
		private short _stt_Ct_Nkc;
		[Column("stt_ct_nkc", Length = 0, Scale = 0, SqlType = "int2")]
		[Storage("_stt_Ct_Nkc")]
		[Required()]
		public virtual short Stt_Ct_Nkc
		{
			get
			{
				return this._stt_Ct_Nkc;
			}
			set
			{
				if(this._stt_Ct_Nkc != value)
				{
					this.OnPropertyChanging("Stt_Ct_Nkc");
					this._stt_Ct_Nkc = value;
					this.OnPropertyChanged("Stt_Ct_Nkc");
				}
			}
		}
		
		private long _so_Ct;
		[Column("so_ct", Length = 0, Scale = 0, SqlType = "int8")]
		[Storage("_so_Ct")]
		[Required()]
		public virtual long So_Ct
		{
			get
			{
				return this._so_Ct;
			}
			set
			{
				if(this._so_Ct != value)
				{
					this.OnPropertyChanging("So_Ct");
					this._so_Ct = value;
					this.OnPropertyChanged("So_Ct");
				}
			}
		}
		
		private string _ma_Phan_He;
		[Column("ma_phan_he", Length = 0, Scale = 0, SqlType = "text")]
		[Storage("_ma_Phan_He")]
		[Required()]
		public virtual string Ma_Phan_He
		{
			get
			{
				return this._ma_Phan_He;
			}
			set
			{
				if(this._ma_Phan_He != value)
				{
					this.OnPropertyChanging("Ma_Phan_He");
					this._ma_Phan_He = value;
					this.OnPropertyChanged("Ma_Phan_He");
				}
			}
		}
		
		private string _ma_Nt;
		[Column("ma_nt", Length = 0, Scale = 0, SqlType = "text")]
		[Storage("_ma_Nt")]
		[Required()]
		public virtual string Ma_Nt
		{
			get
			{
				return this._ma_Nt;
			}
			set
			{
				if(this._ma_Nt != value)
				{
					this.OnPropertyChanging("Ma_Nt");
					this._ma_Nt = value;
					this.OnPropertyChanged("Ma_Nt");
				}
			}
		}
		
		private string _ma_Ct_Me;
		[Column("ma_ct_me", Length = 0, Scale = 0, SqlType = "text")]
		[Storage("_ma_Ct_Me")]
		[Required()]
		public virtual string Ma_Ct_Me
		{
			get
			{
				return this._ma_Ct_Me;
			}
			set
			{
				if(this._ma_Ct_Me != value)
				{
					this.OnPropertyChanging("Ma_Ct_Me");
					this._ma_Ct_Me = value;
					this.OnPropertyChanged("Ma_Ct_Me");
				}
			}
		}
		
		private string _ma_Ct_In;
		[Column("ma_ct_in", Length = 0, Scale = 0, SqlType = "text")]
		[Storage("_ma_Ct_In")]
		[Required()]
		public virtual string Ma_Ct_In
		{
			get
			{
				return this._ma_Ct_In;
			}
			set
			{
				if(this._ma_Ct_In != value)
				{
					this.OnPropertyChanging("Ma_Ct_In");
					this._ma_Ct_In = value;
					this.OnPropertyChanged("Ma_Ct_In");
				}
			}
		}
		
		private short _m_Trung_So;
		[Column("m_trung_so", Length = 0, Scale = 0, SqlType = "int2")]
		[Storage("_m_Trung_So")]
		[Required()]
		public virtual short M_Trung_So
		{
			get
			{
				return this._m_Trung_So;
			}
			set
			{
				if(this._m_Trung_So != value)
				{
					this.OnPropertyChanging("M_Trung_So");
					this._m_Trung_So = value;
					this.OnPropertyChanged("M_Trung_So");
				}
			}
		}
		
		private string _m_Status;
		[Column("m_status", Length = 0, Scale = 0, SqlType = "text")]
		[Storage("_m_Status")]
		[Required()]
		public virtual string M_Status
		{
			get
			{
				return this._m_Status;
			}
			set
			{
				if(this._m_Status != value)
				{
					this.OnPropertyChanging("M_Status");
					this._m_Status = value;
					this.OnPropertyChanged("M_Status");
				}
			}
		}
		
		private short _m_Ngay_Ct;
		[Column("m_ngay_ct", Length = 0, Scale = 0, SqlType = "int2")]
		[Storage("_m_Ngay_Ct")]
		[Required()]
		public virtual short M_Ngay_Ct
		{
			get
			{
				return this._m_Ngay_Ct;
			}
			set
			{
				if(this._m_Ngay_Ct != value)
				{
					this.OnPropertyChanging("M_Ngay_Ct");
					this._m_Ngay_Ct = value;
					this.OnPropertyChanged("M_Ngay_Ct");
				}
			}
		}
		
		private string _m_Ma_Nk;
		[Column("m_ma_nk", Length = 0, Scale = 0, SqlType = "text")]
		[Storage("_m_Ma_Nk")]
		[Required()]
		public virtual string M_Ma_Nk
		{
			get
			{
				return this._m_Ma_Nk;
			}
			set
			{
				if(this._m_Ma_Nk != value)
				{
					this.OnPropertyChanging("M_Ma_Nk");
					this._m_Ma_Nk = value;
					this.OnPropertyChanged("M_Ma_Nk");
				}
			}
		}
		
		private string _m_Ma_Gd;
		[Column("m_ma_gd", Length = 0, Scale = 0, SqlType = "text")]
		[Storage("_m_Ma_Gd")]
		[Required()]
		public virtual string M_Ma_Gd
		{
			get
			{
				return this._m_Ma_Gd;
			}
			set
			{
				if(this._m_Ma_Gd != value)
				{
					this.OnPropertyChanging("M_Ma_Gd");
					this._m_Ma_Gd = value;
					this.OnPropertyChanged("M_Ma_Gd");
				}
			}
		}
		
		private short _m_Loc_Nsd;
		[Column("m_loc_nsd", Length = 0, Scale = 0, SqlType = "int2")]
		[Storage("_m_Loc_Nsd")]
		[Required()]
		public virtual short M_Loc_Nsd
		{
			get
			{
				return this._m_Loc_Nsd;
			}
			set
			{
				if(this._m_Loc_Nsd != value)
				{
					this.OnPropertyChanging("M_Loc_Nsd");
					this._m_Loc_Nsd = value;
					this.OnPropertyChanged("M_Loc_Nsd");
				}
			}
		}
		
		private DateTime _date2;
		[Column("date2", Length = 0, Scale = 0, SqlType = "timestamp")]
		[Storage("_date2")]
		[Required()]
		public virtual DateTime Date2
		{
			get
			{
				return this._date2;
			}
			set
			{
				if(this._date2 != value)
				{
					this.OnPropertyChanging("Date2");
					this._date2 = value;
					this.OnPropertyChanged("Date2");
				}
			}
		}
		
		private DateTime _date0;
		[Column("date0", Length = 0, Scale = 0, SqlType = "timestamp")]
		[Storage("_date0")]
		[Required()]
		public virtual DateTime Date0
		{
			get
			{
				return this._date0;
			}
			set
			{
				if(this._date0 != value)
				{
					this.OnPropertyChanging("Date0");
					this._date0 = value;
					this.OnPropertyChanged("Date0");
				}
			}
		}
		
		private short _ct_Nxt;
		[Column("ct_nxt", Length = 0, Scale = 0, SqlType = "int2")]
		[Storage("_ct_Nxt")]
		[Required()]
		public virtual short Ct_Nxt
		{
			get
			{
				return this._ct_Nxt;
			}
			set
			{
				if(this._ct_Nxt != value)
				{
					this.OnPropertyChanging("Ct_Nxt");
					this._ct_Nxt = value;
					this.OnPropertyChanged("Ct_Nxt");
				}
			}
		}
		
		#region IDataErrorInfo members
		
		[Transient()]
		private string error = string.Empty;
		[Transient()]
		public string Error
		{
			get
			{
				return this.error;
			}
		}
		
		[Transient()]
		public string this[string propertyName]
		{
			get
			{
				this.ValidatePropertyInternal(propertyName, ref this.error);
		
				return this.error;
			}
		}
		
		protected virtual void ValidatePropertyInternal(string propertyName, ref string error)
		{
		    this.ValidateProperty(propertyName, ref error);
		}
		
		// Please implement this method in a partial class in order to provide the error message depending on each of the properties.
		partial void ValidateProperty(string propertyName, ref string error);
		
		#endregion
		
		#region INotifyPropertyChanging members
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanging(string propertyName)
		{
			if(this.PropertyChanging != null)
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		#endregion
		
		#region INotifyPropertyChanged members
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void OnPropertyChanged(string propertyName)
		{
			if(this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		#endregion
		
	}
}
#pragma warning restore 1591
