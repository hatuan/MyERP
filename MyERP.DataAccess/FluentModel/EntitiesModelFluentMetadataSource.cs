#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the FluentMappingGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using MyERP.DataAccess;
using Telerik.OpenAccess.Metadata.Relational;

namespace MyERP.DataAccess
{

	public partial class EntitiesModelFluentMetadataSource : FluentMetadataSource
	{
        /// <summary>
        /// http://docs.telerik.com/data-access/developers-guide/code-only-mapping/mapping-clr-types-properties-and-associations/mapping-associations/fluent-mapping-mapping-clr-mapping-associations-fk-constraint
        /// </summary>
        /// <returns></returns>
        protected override MetadataContainer CreateModel()
        {
            MetadataContainer container = base.CreateModel();
            container.DefaultMapping.NullForeignKey = true;
            return container;
        }

        protected override IList<MappingConfiguration> PrepareMapping()
		{
			List<MappingConfiguration> mappingConfigurations = new List<MappingConfiguration>();
			
			MappingConfiguration<Account> accountConfiguration = this.GetAccountMappingConfiguration();
			mappingConfigurations.Add(accountConfiguration);
			
			MappingConfiguration<User> userConfiguration = this.GetUserMappingConfiguration();
			mappingConfigurations.Add(userConfiguration);
			
			MappingConfiguration<Currency> currencyConfiguration = this.GetCurrencyMappingConfiguration();
			mappingConfigurations.Add(currencyConfiguration);
			
			MappingConfiguration<BusinessPartner> businesspartnerConfiguration = this.GetBusinessPartnerMappingConfiguration();
			mappingConfigurations.Add(businesspartnerConfiguration);
			
			MappingConfiguration<BusinessPartnerGroup> businesspartnergroupConfiguration = this.GetBusinessPartnerGroupMappingConfiguration();
			mappingConfigurations.Add(businesspartnergroupConfiguration);
			
			MappingConfiguration<PaymentTerm> paymenttermConfiguration = this.GetPaymentTermMappingConfiguration();
			mappingConfigurations.Add(paymenttermConfiguration);
			
			MappingConfiguration<Job> jobConfiguration = this.GetJobMappingConfiguration();
			mappingConfigurations.Add(jobConfiguration);
			
			MappingConfiguration<JobGroup> jobgroupConfiguration = this.GetJobGroupMappingConfiguration();
			mappingConfigurations.Add(jobgroupConfiguration);
			
			MappingConfiguration<GeneralJournalDocument> generaljournaldocumentConfiguration = this.GetGeneralJournalDocumentMappingConfiguration();
			mappingConfigurations.Add(generaljournaldocumentConfiguration);
			
			MappingConfiguration<GeneralJournalLine> generaljournallineConfiguration = this.GetGeneralJournalLineMappingConfiguration();
			mappingConfigurations.Add(generaljournallineConfiguration);
			
			MappingConfiguration<Organization> organizationConfiguration = this.GetOrganizationMappingConfiguration();
			mappingConfigurations.Add(organizationConfiguration);
			
			MappingConfiguration<Module> moduleConfiguration = this.GetModuleMappingConfiguration();
			mappingConfigurations.Add(moduleConfiguration);
			
			MappingConfiguration<Session> sessionConfiguration = this.GetSessionMappingConfiguration();
			mappingConfigurations.Add(sessionConfiguration);
			
			MappingConfiguration<Client> clientConfiguration = this.GetClientMappingConfiguration();
			mappingConfigurations.Add(clientConfiguration);
			
			MappingConfiguration<NumberSequence> numbersequenceConfiguration = this.GetNumberSequenceMappingConfiguration();
			mappingConfigurations.Add(numbersequenceConfiguration);
			
			MappingConfiguration<GeneralJournalSetup> generaljournalsetupConfiguration = this.GetGeneralJournalSetupMappingConfiguration();
			mappingConfigurations.Add(generaljournalsetupConfiguration);
			
			MappingConfiguration<CurrencyConvertRate> currencyconvertrateConfiguration = this.GetCurrencyConvertRateMappingConfiguration();
			mappingConfigurations.Add(currencyconvertrateConfiguration);
			
			MappingConfiguration<Role> roleConfiguration = this.GetRoleMappingConfiguration();
			mappingConfigurations.Add(roleConfiguration);
			
			MappingConfiguration<UserInRole> userinroleConfiguration = this.GetUserInRoleMappingConfiguration();
			mappingConfigurations.Add(userinroleConfiguration);
			
			return mappingConfigurations;
		}
		
		protected override void SetContainerSettings(MetadataContainer container)
		{
			container.Name = "EntitiesModel";
			container.DefaultNamespace = "MyERP.DataAccess";
			container.NameGenerator.RemoveLeadingUnderscores = false;
			container.NameGenerator.SourceStrategy = Telerik.OpenAccess.Metadata.NamingSourceStrategy.Property;
			container.NameGenerator.RemoveCamelCase = false;
		}
		public MappingConfiguration<Account> GetAccountMappingConfiguration()
		{
			MappingConfiguration<Account> configuration = this.GetAccountClassConfiguration();
			this.PrepareAccountPropertyConfigurations(configuration);
			this.PrepareAccountAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Account> GetAccountClassConfiguration()
		{
			MappingConfiguration<Account> configuration = new MappingConfiguration<Account>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Version).ToTable("account");
	
			return configuration;
		}
	
		public void PrepareAccountPropertyConfigurations(MappingConfiguration<Account> configuration)
		{
			configuration.HasProperty(x => x.Code).HasFieldName("_code").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("code").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("name").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.CurrencyId).HasFieldName("_currencyId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("currency_id").IsNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Detail).HasFieldName("_detail").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("detail").IsNotNullable().HasColumnType("bool").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ParentAccountId).HasFieldName("_parentAccountId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("parent_account_id").IsNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Level).HasFieldName("_level").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("level").IsNotNullable().HasColumnType("int2").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ArAp).HasFieldName("_arAp").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ar_ap").IsNotNullable().HasColumnType("bool").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.RecModified).HasFieldName("_recModified").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_created_at").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.RecCreatedById).HasFieldName("_recCreatedById").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_created_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.RecCreated).HasFieldName("_recCreated").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_at").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.RecModifiedById).HasFieldName("_recModifiedById").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Status).HasFieldName("_status").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("status").IsNotNullable().HasColumnType("int2").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Version).HasFieldName("_version").IsVersion().WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("version").IsNotNullable().HasColumnType("int8").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Id).IsIdentity(KeyGenerator.Guid).HasFieldName("_id").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ClientId).HasFieldName("_clientId").ToColumn("client_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.OrganizationId).HasFieldName("_organizationId").ToColumn("organization_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
		}
	
		public void PrepareAccountAssociationConfigurations(MappingConfiguration<Account> configuration)
		{
			configuration.HasAssociation(x => x.Currency).HasFieldName("_currency").ToColumn("currency_id").WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.ParentAccount).HasFieldName("_parentAccount").WithOpposite(x => x.ChildAccounts).ToColumn("parent_account_id").WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecModifiedByUser).HasFieldName("_user2").ToColumn("rec_modified_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecCreatedByUser).HasFieldName("_user0").ToColumn("rec_created_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Client).HasFieldName("_client").ToColumn("client_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Organization).HasFieldName("_organization").ToColumn("organization_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.ChildAccounts).HasFieldName("_childAccounts").WithOpposite(x => x.ParentAccount).ToColumn("parent_account_id").WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<User> GetUserMappingConfiguration()
		{
			MappingConfiguration<User> configuration = this.GetUserClassConfiguration();
			this.PrepareUserPropertyConfigurations(configuration);
			this.PrepareUserAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<User> GetUserClassConfiguration()
		{
			MappingConfiguration<User> configuration = new MappingConfiguration<User>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("user");
	
			return configuration;
		}
	
		public void PrepareUserPropertyConfigurations(MappingConfiguration<User> configuration)
		{
			configuration.HasProperty(x => x.Id).IsIdentity(KeyGenerator.Guid).HasFieldName("_id").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("name").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.Password).HasFieldName("_password").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("password").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.Comment).HasFieldName("_comment").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("comment").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.FullName).HasFieldName("_fullName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("full_name").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.PasswordAnswer).HasFieldName("_passwordAnswer").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("password_answer").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.PasswordQuestion).HasFieldName("_passwordQuestion").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("password_question").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.Email).HasFieldName("_email").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("email").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.CreatedDate).HasFieldName("_createdDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("created_date").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.IsActivated).HasFieldName("_isActivated").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("is_activated").IsNotNullable().HasColumnType("bool").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.IsLockedOut).HasFieldName("_isLockedOut").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("is_locked_out").IsNotNullable().HasColumnType("bool").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.LastLockedOutDate).HasFieldName("_lastLockedOutDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("last_locked_out_date").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.LastLockedOutReason).HasFieldName("_lastLockedOutReason").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("last_locked_out_reason").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.LastLoginDate).HasFieldName("_lastLoginDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("last_login_date").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.LastLoginIp).HasFieldName("_lastLoginIp").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("last_login_ip").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.LastModifiedDate).HasFieldName("_lastModifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("last_modified_date").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.ClientId).HasFieldName("_clientId").ToColumn("client_id").IsNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.OrganizationId).HasFieldName("_organizationId").ToColumn("organization_id").IsNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.CultureUIId).HasFieldName("_cultureUIId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("culture_ui_id").IsNotNullable().HasColumnType("varchar").HasLength(0);
		}
	
		public void PrepareUserAssociationConfigurations(MappingConfiguration<User> configuration)
		{
			configuration.HasAssociation(x => x.Client).HasFieldName("_client").ToColumn("client_id").WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Organization).HasFieldName("_organization").ToColumn("organization_id").WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RolesInUser).HasFieldName("_userInRole").WithOpposite(x => x.User).ToColumn("user_id").WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<Currency> GetCurrencyMappingConfiguration()
		{
			MappingConfiguration<Currency> configuration = this.GetCurrencyClassConfiguration();
			this.PrepareCurrencyPropertyConfigurations(configuration);
			this.PrepareCurrencyAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Currency> GetCurrencyClassConfiguration()
		{
			MappingConfiguration<Currency> configuration = new MappingConfiguration<Currency>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Version).ToTable("currency");
	
			return configuration;
		}
	
		public void PrepareCurrencyPropertyConfigurations(MappingConfiguration<Currency> configuration)
		{
			configuration.HasProperty(x => x.Id).IsIdentity(KeyGenerator.Guid).HasFieldName("_id").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("name").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.RecCreated).HasFieldName("_recCreated").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_created_at").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.RecCreatedById).HasFieldName("_recCreatedById").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_created_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.RecModified).HasFieldName("_recModified").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_at").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.RecModifiedById).HasFieldName("_recModifiedById").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Status).HasFieldName("_status").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("status").IsNotNullable().HasColumnType("int2").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Version).HasFieldName("_version").IsVersion().WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("version").IsNotNullable().HasColumnType("int8").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Code).HasFieldName("_code").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("code").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.ClientId).HasFieldName("_clientId").ToColumn("client_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.OrganizationId).HasFieldName("_organizationId").ToColumn("organization_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
		}
	
		public void PrepareCurrencyAssociationConfigurations(MappingConfiguration<Currency> configuration)
		{
			configuration.HasAssociation(x => x.RecModifiedByUser).HasFieldName("_user2").ToColumn("rec_modified_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecCreatedByUser).HasFieldName("_user0").ToColumn("rec_created_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Client).HasFieldName("_client").ToColumn("client_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Organization).HasFieldName("_organization").ToColumn("organization_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<BusinessPartner> GetBusinessPartnerMappingConfiguration()
		{
			MappingConfiguration<BusinessPartner> configuration = this.GetBusinessPartnerClassConfiguration();
			this.PrepareBusinessPartnerPropertyConfigurations(configuration);
			this.PrepareBusinessPartnerAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<BusinessPartner> GetBusinessPartnerClassConfiguration()
		{
			MappingConfiguration<BusinessPartner> configuration = new MappingConfiguration<BusinessPartner>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Version).ToTable("business_partner");
	
			return configuration;
		}
	
		public void PrepareBusinessPartnerPropertyConfigurations(MappingConfiguration<BusinessPartner> configuration)
		{
			configuration.HasProperty(x => x.Code).HasFieldName("_code").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("code").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("name").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.VatCode).HasFieldName("_vatCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("vat_code").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.Address).HasFieldName("_address").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("address").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.Telephone).HasFieldName("_telephone").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("telephone").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.Fax).HasFieldName("_fax").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("fax").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.Mail).HasFieldName("_mail").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("e_mail").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.HomePage).HasFieldName("_homePage").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("home_page").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.ContactName).HasFieldName("_contactName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("contact_name").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.Comment).HasFieldName("_comment").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("comment").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.EmployeeAccountId).HasFieldName("_employeeAccountId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("employee_account_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.BusinessPartnerGroupId1).HasFieldName("_businessPartnerGroupId1").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("business_partner_group_id1").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.BusinessPartnerGroupId2).HasFieldName("_businessPartnerGroupId2").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("business_partner_group_id2").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.BusinessPartnerGroupId3).HasFieldName("_businessPartnerGroupId3").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("business_partner_group_id3").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CreditLimit).HasFieldName("_creditLimit").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("credit_limit").IsNotNullable().HasColumnType("numeric").HasPrecision(38).HasScale(20);
			configuration.HasProperty(x => x.AmountLimit).HasFieldName("_amountLimit").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("amount_limit").IsNotNullable().HasColumnType("numeric").HasPrecision(38).HasScale(20);
			configuration.HasProperty(x => x.RecCreated).HasFieldName("_recCreated").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_created_at").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.RecCreatedBy).HasFieldName("_recCreatedBy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_created_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.RecModified).HasFieldName("_recModified").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_at").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.RecModifiedBy).HasFieldName("_recModifiedBy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.PaymentTermId).HasFieldName("_paymentTermId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("payment_term_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.IsCustomer).HasFieldName("_isCustomer").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("is_customer").IsNotNullable().HasColumnType("bool").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.IsVendor).HasFieldName("_isVendor").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("is_vendor").IsNotNullable().HasColumnType("bool").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.IsEmployee).HasFieldName("_isEmployee").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("is_employee").IsNotNullable().HasColumnType("bool").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CustomerAccountId).HasFieldName("_customerAccountId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("customer_account_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.VendorAccountId).HasFieldName("_vendorAccountId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("vendor_account_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Id).IsIdentity(KeyGenerator.Guid).HasFieldName("_id").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Version).HasFieldName("_version").IsVersion().WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("version").IsNotNullable().HasColumnType("int8").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Status).HasFieldName("_status").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("status").IsNotNullable().HasColumnType("int2").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ClientId).HasFieldName("_clientId").ToColumn("client_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.OrganizationId).HasFieldName("_organizationId").ToColumn("organization_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
		}
	
		public void PrepareBusinessPartnerAssociationConfigurations(MappingConfiguration<BusinessPartner> configuration)
		{
			configuration.HasAssociation(x => x.EmployeeAccount).HasFieldName("_employeeAccount").ToColumn("employee_account_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.VendorAccount).HasFieldName("_vendorAccount").ToColumn("vendor_account_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.CustomerAccount).HasFieldName("_account1").ToColumn("customer_account_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.PaymentTerm).HasFieldName("_paymentTerm").ToColumn("payment_term_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Client).HasFieldName("_client").ToColumn("client_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Organization).HasFieldName("_organization").ToColumn("organization_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecCreatedByUser).HasFieldName("_user0").ToColumn("rec_created_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecModifiedByUser).HasFieldName("_user2").ToColumn("rec_modified_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.BusinessPartnerGroup1).HasFieldName("_businessPartnerGroup1").WithOpposite(x => x.BusinessPartner1s).ToColumn("business_partner_group_id1").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.BusinessPartnerGroup3).HasFieldName("_businessPartnerGroup3").WithOpposite(x => x.BusinessPartner3s).ToColumn("business_partner_group_id3").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.BusinessPartnerGroup2).HasFieldName("_businessPartnerGroup2").WithOpposite(x => x.BusinessPartner2s).ToColumn("business_partner_group_id2").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<BusinessPartnerGroup> GetBusinessPartnerGroupMappingConfiguration()
		{
			MappingConfiguration<BusinessPartnerGroup> configuration = this.GetBusinessPartnerGroupClassConfiguration();
			this.PrepareBusinessPartnerGroupPropertyConfigurations(configuration);
			this.PrepareBusinessPartnerGroupAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<BusinessPartnerGroup> GetBusinessPartnerGroupClassConfiguration()
		{
			MappingConfiguration<BusinessPartnerGroup> configuration = new MappingConfiguration<BusinessPartnerGroup>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Version).ToTable("business_partner_group");
	
			return configuration;
		}
	
		public void PrepareBusinessPartnerGroupPropertyConfigurations(MappingConfiguration<BusinessPartnerGroup> configuration)
		{
			configuration.HasProperty(x => x.Level).HasFieldName("_level").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("level").IsNotNullable().HasColumnType("int2").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Code).HasFieldName("_code").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("code").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("name").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.RecCreated).HasFieldName("_recCreated").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_created_at").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.RecCreatedBy).HasFieldName("_recCreatedBy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_created_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.RecModified).HasFieldName("_recModified").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_at").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.RecModifiedBy).HasFieldName("_recModifiedBy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Status).HasFieldName("_status").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("status").IsNotNullable().HasColumnType("int2").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Id).IsIdentity(KeyGenerator.Guid).HasFieldName("_id").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Version).HasFieldName("_version").IsVersion().WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("version").IsNotNullable().HasColumnType("int8").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ClientId).HasFieldName("_clientId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("client_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.OrganizationId).HasFieldName("_organizationId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("organization_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
		}
	
		public void PrepareBusinessPartnerGroupAssociationConfigurations(MappingConfiguration<BusinessPartnerGroup> configuration)
		{
			configuration.HasAssociation(x => x.Client).HasFieldName("_client").ToColumn("client_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Organization).HasFieldName("_organization").ToColumn("organization_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.BusinessPartner1s).HasFieldName("_businessPartner1s").WithOpposite(x => x.BusinessPartnerGroup1).ToColumn("business_partner_group_id1").WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.BusinessPartner3s).HasFieldName("_businessPartner3s").WithOpposite(x => x.BusinessPartnerGroup3).ToColumn("business_partner_group_id3").WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.BusinessPartner2s).HasFieldName("_businessPartner2s").WithOpposite(x => x.BusinessPartnerGroup2).ToColumn("business_partner_group_id2").WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<PaymentTerm> GetPaymentTermMappingConfiguration()
		{
			MappingConfiguration<PaymentTerm> configuration = this.GetPaymentTermClassConfiguration();
			this.PreparePaymentTermPropertyConfigurations(configuration);
			this.PreparePaymentTermAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<PaymentTerm> GetPaymentTermClassConfiguration()
		{
			MappingConfiguration<PaymentTerm> configuration = new MappingConfiguration<PaymentTerm>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Version).ToTable("payment_term");
	
			return configuration;
		}
	
		public void PreparePaymentTermPropertyConfigurations(MappingConfiguration<PaymentTerm> configuration)
		{
			configuration.HasProperty(x => x.Code).HasFieldName("_code").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("code").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("name").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.Han_Tt).HasFieldName("_han_tt").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("han_tt").IsNotNullable().HasColumnType("int2").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Han_Tt_Gg).HasFieldName("_han_tt_gg").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("han_tt_gg").IsNotNullable().HasColumnType("int2").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Pt_Gg).HasFieldName("_pt_gg").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("pt_gg").IsNotNullable().HasColumnType("numeric").HasPrecision(38).HasScale(20);
			configuration.HasProperty(x => x.Date0).HasFieldName("_date0").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("date0").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.UserId0).HasFieldName("_userId0").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("user_id0").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Date2).HasFieldName("_date2").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("date2").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.UserId2).HasFieldName("_userId2").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("user_id2").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Status).HasFieldName("_status").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("status").IsNotNullable().HasColumnType("int2").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Id).IsIdentity(KeyGenerator.Guid).HasFieldName("_id").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Version).HasFieldName("_version").IsVersion().WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("version").IsNotNullable().HasColumnType("int8").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ClientId).HasFieldName("_clientId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("client_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.OrganizationId).HasFieldName("_organizationId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("organization_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
		}
	
		public void PreparePaymentTermAssociationConfigurations(MappingConfiguration<PaymentTerm> configuration)
		{
			configuration.HasAssociation(x => x.Client).HasFieldName("_client").ToColumn("client_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Organization).HasFieldName("_organization").ToColumn("organization_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<Job> GetJobMappingConfiguration()
		{
			MappingConfiguration<Job> configuration = this.GetJobClassConfiguration();
			this.PrepareJobPropertyConfigurations(configuration);
			this.PrepareJobAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Job> GetJobClassConfiguration()
		{
			MappingConfiguration<Job> configuration = new MappingConfiguration<Job>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Version).ToTable("job");
	
			return configuration;
		}
	
		public void PrepareJobPropertyConfigurations(MappingConfiguration<Job> configuration)
		{
			configuration.HasProperty(x => x.Code).HasFieldName("_ma_vv").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("code").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("name").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.BusinessPartnerId).HasFieldName("_businessPartnerId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("business_partner_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.JobGroupId1).HasFieldName("_jobGroupId1").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("job_group_id1").IsNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.JobGroupId2).HasFieldName("_jobGroupId2").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("job_group_id2").IsNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.JobGroupId3).HasFieldName("_jobGroupId3").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("job_group_id3").IsNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.JobStart).HasFieldName("_jobStart").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("job_start").IsNullable().HasColumnType("date");
			configuration.HasProperty(x => x.JobEnd).HasFieldName("_jobEnd").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("job_end").IsNullable().HasColumnType("date");
			configuration.HasProperty(x => x.CurrencyId).HasFieldName("_currencyId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("currency_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Amount).HasFieldName("_amount").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("amount").IsNotNullable().HasColumnType("numeric").HasPrecision(38).HasScale(20);
			configuration.HasProperty(x => x.AmountLcy).HasFieldName("_amountLcy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("amount_lcy").IsNotNullable().HasColumnType("numeric").HasPrecision(38).HasScale(20);
			configuration.HasProperty(x => x.Comment).HasFieldName("_comment").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("comment").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.RecCreated).HasFieldName("_recCreated").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_created_at").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.RecCreatedBy).HasFieldName("_recCreatedBy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_created_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.RecModified).HasFieldName("_recModified").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_at").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.RecModifiedBy).HasFieldName("_recModifiedBy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Status).HasFieldName("_status").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("status").IsNotNullable().HasColumnType("int2").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.AccountId).HasFieldName("_accountId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("account_id").IsNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ClientId).HasFieldName("_clientId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("client_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.OrganizationId).HasFieldName("_organizationId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("organization_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Id).IsIdentity(KeyGenerator.Guid).HasFieldName("_id").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Version).HasFieldName("_version").IsVersion().WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("version").IsNotNullable().HasColumnType("int8").HasPrecision(0).HasScale(0);
		}
	
		public void PrepareJobAssociationConfigurations(MappingConfiguration<Job> configuration)
		{
			configuration.HasAssociation(x => x.Client).HasFieldName("_client").ToColumn("client_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Organization).HasFieldName("_organization").ToColumn("organization_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecCreatedByUser).HasFieldName("_userinfo").ToColumn("rec_created_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecModifiedByUser).HasFieldName("_userinfo1").ToColumn("rec_modified_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.BusinessPartner).HasFieldName("_dmkh").ToColumn("business_partner_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Account).HasFieldName("_dmtk").ToColumn("account_id").WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.JobGroup1).HasFieldName("_jobGroup").WithOpposite(x => x.Job1s).ToColumn("job_group_id1").WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.JobGroup2).HasFieldName("_jobGroup1").WithOpposite(x => x.Job2s).ToColumn("job_group_id2").WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.JobGroup3).HasFieldName("_jobGroup2").WithOpposite(x => x.Job3s).ToColumn("job_group_id3").WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<JobGroup> GetJobGroupMappingConfiguration()
		{
			MappingConfiguration<JobGroup> configuration = this.GetJobGroupClassConfiguration();
			this.PrepareJobGroupPropertyConfigurations(configuration);
			this.PrepareJobGroupAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<JobGroup> GetJobGroupClassConfiguration()
		{
			MappingConfiguration<JobGroup> configuration = new MappingConfiguration<JobGroup>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Version).ToTable("job_group");
	
			return configuration;
		}
	
		public void PrepareJobGroupPropertyConfigurations(MappingConfiguration<JobGroup> configuration)
		{
			configuration.HasProperty(x => x.Level).HasFieldName("_level").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("level").IsNotNullable().HasColumnType("int2").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Code).HasFieldName("_code").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("code").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("name").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.RecCreated).HasFieldName("_recCreated").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_created_at").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.RecCreateBy).HasFieldName("_recCreateBy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_created_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Status).HasFieldName("_status").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("status").IsNotNullable().HasColumnType("int2").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.RecModified).HasFieldName("_recModified").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_at").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.RecModifiedBy).HasFieldName("_recModifiedBy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ClientId).HasFieldName("_clientId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("client_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.OrganizationId).HasFieldName("_organizationId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("organization_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Id).IsIdentity(KeyGenerator.Guid).HasFieldName("_id").ToColumn("id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Version).HasFieldName("_version").IsVersion().WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("version").IsNotNullable().HasColumnType("int8").HasPrecision(0).HasScale(0);
		}
	
		public void PrepareJobGroupAssociationConfigurations(MappingConfiguration<JobGroup> configuration)
		{
			configuration.HasAssociation(x => x.Client).HasFieldName("_client").ToColumn("client_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Organization).HasFieldName("_organization").ToColumn("organization_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecCreatedByUser).HasFieldName("_userinfo").ToColumn("rec_created_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecModifiedByUser).HasFieldName("_userinfo1").ToColumn("rec_modified_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Job1s).HasFieldName("_job").WithOpposite(x => x.JobGroup1).ToColumn("job_group_id1").WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Job2s).HasFieldName("_job1").WithOpposite(x => x.JobGroup2).ToColumn("job_group_id2").WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Job3s).HasFieldName("_job2").WithOpposite(x => x.JobGroup3).ToColumn("job_group_id3").WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<GeneralJournalDocument> GetGeneralJournalDocumentMappingConfiguration()
		{
			MappingConfiguration<GeneralJournalDocument> configuration = this.GetGeneralJournalDocumentClassConfiguration();
			this.PrepareGeneralJournalDocumentPropertyConfigurations(configuration);
			this.PrepareGeneralJournalDocumentAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<GeneralJournalDocument> GetGeneralJournalDocumentClassConfiguration()
		{
			MappingConfiguration<GeneralJournalDocument> configuration = new MappingConfiguration<GeneralJournalDocument>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Version).ToTable("general_journal_document");
	
			return configuration;
		}
	
		public void PrepareGeneralJournalDocumentPropertyConfigurations(MappingConfiguration<GeneralJournalDocument> configuration)
		{
			configuration.HasProperty(x => x.Id).IsIdentity(KeyGenerator.Guid).HasFieldName("_id").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ClientId).HasFieldName("_clientId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("client_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.OrganizationId).HasFieldName("_organizationId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("organization_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Version).HasFieldName("_version").IsVersion().WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("version").IsNotNullable().HasColumnType("int8").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.TotalCreditAmountLcy).HasFieldName("_totalCreditAmountLcy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("total_credit_amount_lcy").IsNotNullable().HasColumnType("numeric").HasPrecision(38).HasScale(20);
			configuration.HasProperty(x => x.NumberSequenceId).HasFieldName("_numberSequenceId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("number_sequence_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.DocumentCreated).HasFieldName("_documentCreated").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("document_created_date").IsNotNullable().HasColumnType("date");
			configuration.HasProperty(x => x.DocumentNo).HasFieldName("_documentNo").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("document_no").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.DocumentPosted).HasFieldName("_documentPosted").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("document_posted_date").IsNotNullable().HasColumnType("date");
			configuration.HasProperty(x => x.DocumentType).HasFieldName("_documentType").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("document_type").IsNotNullable().HasColumnType("int4");
			configuration.HasProperty(x => x.RecCreated).HasFieldName("_recCreated").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_created_at").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.RecCreatedBy).HasFieldName("_recCreatedBy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_created_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.RecModified).HasFieldName("_recModified").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_at").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.RecModifiedBy).HasFieldName("_recModifiedBy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Status).HasFieldName("_status").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("status").IsNotNullable().HasColumnType("int4").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.TotalCreditAmount).HasFieldName("_totalCreditAmount").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("total_credit_amount").IsNotNullable().HasColumnType("numeric").HasPrecision(38).HasScale(20);
			configuration.HasProperty(x => x.TotalDebitAmount).HasFieldName("_totalDebitAmount").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("total_debit_amount").IsNotNullable().HasColumnType("numeric").HasPrecision(38).HasScale(20);
			configuration.HasProperty(x => x.TotalDebitAmountLcy).HasFieldName("_totalDebitAmountLcy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("total_debit_amount_lcy").IsNotNullable().HasColumnType("numeric").HasPrecision(38).HasScale(20);
			configuration.HasProperty(x => x.TransactionType).HasFieldName("_transactionType").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("transaction_type").IsNotNullable().HasColumnType("int4");
			configuration.HasProperty(x => x.ExchangeRateAmount).HasFieldName("_exchangeRateAmount").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("exchange_rate_amount").IsNotNullable().HasColumnType("numeric").HasPrecision(38).HasScale(20);
			configuration.HasProperty(x => x.CurrencyId).HasFieldName("_currencyId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("currency_id").IsNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Description).HasFieldName("_description").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("description").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.RelationalExchRateAmount).HasFieldName("_relationalExchRateAmount").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("relational_exch_rate_amount").IsNotNullable().HasColumnType("numeric").HasPrecision(0).HasScale(0);
		}
	
		public void PrepareGeneralJournalDocumentAssociationConfigurations(MappingConfiguration<GeneralJournalDocument> configuration)
		{
			configuration.HasAssociation(x => x.Client).HasFieldName("_client").ToColumn("client_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Organization).HasFieldName("_organization").ToColumn("organization_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecCreatedByUser).HasFieldName("_recCreatedByUser").ToColumn("rec_created_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecModifiedByUser).HasFieldName("_recModifiedByUser").ToColumn("rec_modified_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Currency).HasFieldName("_currency").ToColumn("currency_id").WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.NumberSequence).HasFieldName("_numberSequence").ToColumn("number_sequence_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.GeneralJournalLines).HasFieldName("_generalJournalLines").WithOpposite(x => x.GeneralJournalDocument).ToColumn("general_journal_document_id").WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<GeneralJournalLine> GetGeneralJournalLineMappingConfiguration()
		{
			MappingConfiguration<GeneralJournalLine> configuration = this.GetGeneralJournalLineClassConfiguration();
			this.PrepareGeneralJournalLinePropertyConfigurations(configuration);
			this.PrepareGeneralJournalLineAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<GeneralJournalLine> GetGeneralJournalLineClassConfiguration()
		{
			MappingConfiguration<GeneralJournalLine> configuration = new MappingConfiguration<GeneralJournalLine>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Version).ToTable("general_journal_line");
	
			return configuration;
		}
	
		public void PrepareGeneralJournalLinePropertyConfigurations(MappingConfiguration<GeneralJournalLine> configuration)
		{
			configuration.HasProperty(x => x.Id).IsIdentity(KeyGenerator.Guid).HasFieldName("_id").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CorAccountId).HasFieldName("_corAccountId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("cor_account_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.AccountId).HasFieldName("_accountId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("account_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Description).HasFieldName("_description").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("description").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.DebitAmount).HasFieldName("_debitAmount").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("debit_amount").IsNotNullable().HasColumnType("numeric").HasPrecision(38).HasScale(20);
			configuration.HasProperty(x => x.CreditAmountLcy).HasFieldName("_creditAmountLcy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("credit_amount_lcy").IsNotNullable().HasColumnType("numeric").HasPrecision(38).HasScale(20);
			configuration.HasProperty(x => x.DebitAmountLcy).HasFieldName("_debitAmountLcy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("debit_amount_lcy").IsNotNullable().HasColumnType("numeric").HasPrecision(38).HasScale(20);
			configuration.HasProperty(x => x.CreditAmount).HasFieldName("_creditAmount").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("credit_amount").IsNotNullable().HasColumnType("numeric").HasPrecision(38).HasScale(20);
			configuration.HasProperty(x => x.BusinessPartnerId).HasFieldName("_businessPartnerId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("business_partner_id").IsNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.JobId).HasFieldName("_jobId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("job_id").IsNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.LineNo).HasFieldName("_lineNo").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("line_no").IsNotNullable().HasColumnType("int8").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ClientId).HasFieldName("_clientId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("client_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.OrganizationId).HasFieldName("_organizationId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("organization_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Version).HasFieldName("_version").IsVersion().WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("version").IsNotNullable().HasColumnType("int8").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.GeneralJournalDocumentId).HasFieldName("_generalJournalDocumentId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("general_journal_document_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CurrencyExchangeRate).HasFieldName("_currencyExchangeRate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("currency_exchange_rate").IsNullable().HasColumnType("numeric").HasPrecision(38).HasScale(20);
			configuration.HasProperty(x => x.CurrencyId).HasFieldName("_currencyId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("currency_id").IsNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.DocumentCreated).HasFieldName("_documentCreated").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("document_created_date").IsNotNullable().HasColumnType("date");
			configuration.HasProperty(x => x.DocumentNo).HasFieldName("_documentNo").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("document_no").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.DocumentPosted).HasFieldName("_documentPosted").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("document_posted_date").IsNotNullable().HasColumnType("date");
			configuration.HasProperty(x => x.DocumentType).HasFieldName("_documentType").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("document_type").IsNotNullable().HasColumnType("int4");
			configuration.HasProperty(x => x.RecCreated).HasFieldName("_recCreated").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_created_at").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.RecCreatedBy).HasFieldName("_recCreatedBy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_created_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.RecModified).HasFieldName("_recModified").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_at").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.RecModifiedBy).HasFieldName("_recModifiedBy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.TransactionType).HasFieldName("_transactionType").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("transaction_type").IsNotNullable().HasColumnType("int4");
			configuration.HasProperty(x => x.FixAssetId).HasFieldName("_fixAssetId").ToColumn("fix_asset_id").IsNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
		}
	
		public void PrepareGeneralJournalLineAssociationConfigurations(MappingConfiguration<GeneralJournalLine> configuration)
		{
			configuration.HasAssociation(x => x.Client).HasFieldName("_client").ToColumn("client_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Organization).HasFieldName("_organization").ToColumn("organization_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.BusinessPartner).HasFieldName("_businessPartner").ToColumn("business_partner_id").WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Job).HasFieldName("_job").ToColumn("job_id").WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecModifiedByUser).HasFieldName("_recModifiedByUser").ToColumn("rec_modified_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecCreatedByUser).HasFieldName("_recCreatedByUser").ToColumn("rec_created_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Account).HasFieldName("_account").ToColumn("account_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.CorAccount).HasFieldName("_corAccount").ToColumn("cor_account_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.GeneralJournalDocument).HasFieldName("_transactionDocument").WithOpposite(x => x.GeneralJournalLines).ToColumn("general_journal_document_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Currency).HasFieldName("_currency").ToColumn("currency_id").WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<Organization> GetOrganizationMappingConfiguration()
		{
			MappingConfiguration<Organization> configuration = this.GetOrganizationClassConfiguration();
			this.PrepareOrganizationPropertyConfigurations(configuration);
			this.PrepareOrganizationAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Organization> GetOrganizationClassConfiguration()
		{
			MappingConfiguration<Organization> configuration = new MappingConfiguration<Organization>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Version).ToTable("organization");
	
			return configuration;
		}
	
		public void PrepareOrganizationPropertyConfigurations(MappingConfiguration<Organization> configuration)
		{
			configuration.HasProperty(x => x.Code).HasFieldName("_code").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("code").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("name").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.RecCreated).HasFieldName("_recCreated").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_created_at").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.RecCreatedById).HasFieldName("_recCreatedById").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_created_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.RecModified).HasFieldName("_recModified").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_at").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.RecModifiedById).HasFieldName("_recModifiedById").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Status).HasFieldName("_status").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("status").IsNotNullable().HasColumnType("int2").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Id).IsIdentity(KeyGenerator.Guid).HasFieldName("_id").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Version).HasFieldName("_version").IsVersion().WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("version").IsNotNullable().HasColumnType("int8").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ClientId).HasFieldName("_clientId").ToColumn("client_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
		}
	
		public void PrepareOrganizationAssociationConfigurations(MappingConfiguration<Organization> configuration)
		{
			configuration.HasAssociation(x => x.RecCreatedByUser).HasFieldName("_recCreatedByUser").ToColumn("rec_created_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecModifiedByUser).HasFieldName("_recModifiedByUser").ToColumn("rec_modified_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Client).HasFieldName("_client").WithOpposite(x => x.Organizations).ToColumn("client_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<Module> GetModuleMappingConfiguration()
		{
			MappingConfiguration<Module> configuration = this.GetModuleClassConfiguration();
			this.PrepareModulePropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Module> GetModuleClassConfiguration()
		{
			MappingConfiguration<Module> configuration = new MappingConfiguration<Module>();
			configuration.MapType(x => new { }).ToTable("module");
	
			return configuration;
		}
	
		public void PrepareModulePropertyConfigurations(MappingConfiguration<Module> configuration)
		{
			configuration.HasProperty(x => x.Id).IsIdentity().HasFieldName("_id").ToColumn("id").IsNotNullable().HasColumnType("int8").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Description).HasFieldName("_description").ToColumn("description").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.Group).HasFieldName("_group").ToColumn("group").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("name").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.ClientId).HasFieldName("_clientId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("client_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
		}
		public MappingConfiguration<Session> GetSessionMappingConfiguration()
		{
			MappingConfiguration<Session> configuration = this.GetSessionClassConfiguration();
			this.PrepareSessionPropertyConfigurations(configuration);
			this.PrepareSessionAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Session> GetSessionClassConfiguration()
		{
			MappingConfiguration<Session> configuration = new MappingConfiguration<Session>();
			configuration.MapType(x => new { }).ToTable("session");
	
			return configuration;
		}
	
		public void PrepareSessionPropertyConfigurations(MappingConfiguration<Session> configuration)
		{
			configuration.HasProperty(x => x.Id).IsIdentity(KeyGenerator.Guid).HasFieldName("_id").ToColumn("id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.UserId).HasFieldName("_userId").ToColumn("user_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.Expire).HasFieldName("_expire").ToColumn("expire").IsNullable().HasColumnType("bool").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.BooleanConverter");
			configuration.HasProperty(x => x.WorkingDate).HasFieldName("_workingDate").ToColumn("working_date").IsNotNullable().HasColumnType("date").WithConverter("OpenAccessRuntime.Data.PostgresTimestampTZConverter");
			configuration.HasProperty(x => x.OrganizationId).HasFieldName("_organizationId").ToColumn("organization_id").IsNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.LastTime).HasFieldName("_lastTime").ToColumn("last_time").IsNotNullable().HasColumnType("timestamp").WithConverter("OpenAccessRuntime.Data.PostgresTimestampTZConverter");
			configuration.HasProperty(x => x.WarehouseId).HasFieldName("_warehouseId").ToColumn("warehouse_id").IsNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.ClientId).HasFieldName("_clientId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("client_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
		}
	
		public void PrepareSessionAssociationConfigurations(MappingConfiguration<Session> configuration)
		{
			configuration.HasAssociation(x => x.Client).HasFieldName("_client").ToColumn("client_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Organization).HasFieldName("_organization").ToColumn("organization_id").WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<Client> GetClientMappingConfiguration()
		{
			MappingConfiguration<Client> configuration = this.GetClientClassConfiguration();
			this.PrepareClientPropertyConfigurations(configuration);
			this.PrepareClientAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Client> GetClientClassConfiguration()
		{
			MappingConfiguration<Client> configuration = new MappingConfiguration<Client>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Version).ToTable("client");
	
			return configuration;
		}
	
		public void PrepareClientPropertyConfigurations(MappingConfiguration<Client> configuration)
		{
			configuration.HasProperty(x => x.ClientId).IsIdentity(KeyGenerator.Guid).HasFieldName("_clientId").ToColumn("id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.Name).HasFieldName("_name").ToColumn("name").IsNotNullable().HasColumnType("varchar").HasLength(0).WithConverter("OpenAccessRuntime.Data.VariableLengthStringConverter");
			configuration.HasProperty(x => x.Version).HasFieldName("_version").IsVersion().ToColumn("version").IsNotNullable().HasColumnType("int8").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.BigIntConverter");
			configuration.HasProperty(x => x.IsActivated).HasFieldName("_isActivated").ToColumn("is_activated").IsNotNullable().HasColumnType("bool").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.BooleanConverter");
			configuration.HasProperty(x => x.RecCreatedById).HasFieldName("_recCreatedById").ToColumn("rec_created_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.RecCreated).HasFieldName("_recCreated").ToColumn("rec_created_at").IsNotNullable().HasColumnType("timestamp").WithConverter("OpenAccessRuntime.Data.PostgresTimestampTZConverter");
			configuration.HasProperty(x => x.CultureId).HasFieldName("_cultureId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("culture_id").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.AmountDecimalPlaces).HasFieldName("_amountDecimalPlaces").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("amount_decimal_places").IsNotNullable().HasColumnType("int2").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.AmountRoundingPrecision).HasFieldName("_amountRoundingPrecision").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("amount_rounding_precision").IsNotNullable().HasColumnType("numeric").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.UnitAmountDecimalPlaces).HasFieldName("_unitAmountDecimalPlaces").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("unit-amount_decimal_places").IsNotNullable().HasColumnType("int2").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.UnitAmountRoundingPrecision).HasFieldName("_unitAmountRoundingPrecision").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("unit-amount_rounding_precision").IsNotNullable().HasColumnType("numeric").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.CurrencyLCYId).HasFieldName("_currencyLCYId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("currency_lcy_id").IsNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.RecModified).HasFieldName("_recModified").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_at").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.RecModifiedById).HasFieldName("_recModifiedById").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
		}
	
		public void PrepareClientAssociationConfigurations(MappingConfiguration<Client> configuration)
		{
			configuration.HasAssociation(x => x.RecCreatedByUser).HasFieldName("_user").ToColumn("rec_created_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecModifiedByUser).HasFieldName("_user1").ToColumn("rec_modified_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.CurrencyLCY).HasFieldName("_currencyLCY").ToColumn("currency_lcy_id").WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Organizations).HasFieldName("_organization").WithOpposite(x => x.Client).ToColumn("client_id").WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<NumberSequence> GetNumberSequenceMappingConfiguration()
		{
			MappingConfiguration<NumberSequence> configuration = this.GetNumberSequenceClassConfiguration();
			this.PrepareNumberSequencePropertyConfigurations(configuration);
			this.PrepareNumberSequenceAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<NumberSequence> GetNumberSequenceClassConfiguration()
		{
			MappingConfiguration<NumberSequence> configuration = new MappingConfiguration<NumberSequence>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Version).ToTable("number_sequence");
	
			return configuration;
		}
	
		public void PrepareNumberSequencePropertyConfigurations(MappingConfiguration<NumberSequence> configuration)
		{
			configuration.HasProperty(x => x.Id).IsIdentity(KeyGenerator.Guid).HasFieldName("_id").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Version).HasFieldName("_version").IsVersion().WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("version").IsNotNullable().HasColumnType("int8").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Code).HasFieldName("_code").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("code").IsNotNullable().HasColumnType("varchar").HasLength(0).WithConverter("OpenAccessRuntime.Data.VariableLengthStringConverter");
			configuration.HasProperty(x => x.CurrentNo).HasFieldName("_currentNo").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("current_no").IsNotNullable().HasColumnType("int4").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.EndingNo).HasFieldName("_endingNo").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ending_no").IsNotNullable().HasColumnType("int4").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.FormatNo).HasFieldName("_formatNo").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("format_no").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.IsDefault).HasFieldName("_isDefault").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("is_default").IsNotNullable().HasColumnType("bool").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Manual).HasFieldName("_manual").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("manual").IsNotNullable().HasColumnType("bool").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("name").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.NoSeqName).HasFieldName("_noSeqName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("no_seq_name").IsNotNullable().HasColumnType("varchar").HasLength(0);
			configuration.HasProperty(x => x.OrganizationId).HasFieldName("_organizationId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("organization_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.ClientId).HasFieldName("_clientId").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("client_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.StartingNo).HasFieldName("_startingNo").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("starting_no").IsNotNullable().HasColumnType("int4").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Status).HasFieldName("_status").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("status").IsNotNullable().HasColumnType("int2").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.RecModifiedBy).HasFieldName("_recModifiedBy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.RecCreated).HasFieldName("_recCreated").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_created_at").IsNotNullable().HasColumnType("timestamp");
			configuration.HasProperty(x => x.RecCreatedBy).HasFieldName("_recCreatedBy").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_created_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.RecModified).HasFieldName("_recModified").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rec_modified_at").IsNotNullable().HasColumnType("timestamp");
		}
	
		public void PrepareNumberSequenceAssociationConfigurations(MappingConfiguration<NumberSequence> configuration)
		{
			configuration.HasAssociation(x => x.Client).HasFieldName("_client").ToColumn("client_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Organization).HasFieldName("_organization").ToColumn("organization_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecCreatedByUser).HasFieldName("_user1").ToColumn("rec_created_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecModifiedByUser).HasFieldName("_user").ToColumn("rec_modified_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<GeneralJournalSetup> GetGeneralJournalSetupMappingConfiguration()
		{
			MappingConfiguration<GeneralJournalSetup> configuration = this.GetGeneralJournalSetupClassConfiguration();
			this.PrepareGeneralJournalSetupPropertyConfigurations(configuration);
			this.PrepareGeneralJournalSetupAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<GeneralJournalSetup> GetGeneralJournalSetupClassConfiguration()
		{
			MappingConfiguration<GeneralJournalSetup> configuration = new MappingConfiguration<GeneralJournalSetup>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Version).ToTable("general_journal_setup");
	
			return configuration;
		}
	
		public void PrepareGeneralJournalSetupPropertyConfigurations(MappingConfiguration<GeneralJournalSetup> configuration)
		{
			configuration.HasProperty(x => x.Id).IsIdentity(KeyGenerator.Guid).HasFieldName("_id").ToColumn("id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.OrganizationId).HasFieldName("_organizationId").ToColumn("organization_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.ClientId).HasFieldName("_clientId").ToColumn("client_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.LocalCurrencyId).HasFieldName("_localCurrencyId").ToColumn("local_currency_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.LcyExchangeRateUnit).HasFieldName("_lcyExchangeRateUnit").ToColumn("lcy_exchange_rate_unit").IsNotNullable().HasColumnType("int4").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.IntConverter");
			configuration.HasProperty(x => x.GeneralJournalNumberSequenceId).HasFieldName("_generalJournalNumberSequenceId").ToColumn("general_journal_number_sequence_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.RecCreated).HasFieldName("_recCreated").ToColumn("rec_created_at").IsNotNullable().HasColumnType("timestamp").WithConverter("OpenAccessRuntime.Data.PostgresTimestampTZConverter");
			configuration.HasProperty(x => x.RecModified).HasFieldName("_recModified").ToColumn("rec_modified_at").IsNotNullable().HasColumnType("timestamp").WithConverter("OpenAccessRuntime.Data.PostgresTimestampTZConverter");
			configuration.HasProperty(x => x.RecCreatedBy).HasFieldName("_recCreatedBy").ToColumn("rec_created_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.RecModifiedBy).HasFieldName("_recModifiedBy").ToColumn("rec_modified_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.Version).HasFieldName("_version").IsVersion().ToColumn("version").IsNotNullable().HasColumnType("int8").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.BigIntConverter");
		}
	
		public void PrepareGeneralJournalSetupAssociationConfigurations(MappingConfiguration<GeneralJournalSetup> configuration)
		{
			configuration.HasAssociation(x => x.RecCreatedByUser).HasFieldName("_recCreatedByUser").ToColumn("rec_created_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecModifiedByUser).HasFieldName("_recModifiedByUser").ToColumn("rec_modified_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Organization).HasFieldName("_organization").ToColumn("organization_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.LocalCurrency).HasFieldName("_localCurrency").ToColumn("local_currency_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.GeneralJournalNumberSequence).HasFieldName("_generalJournalNumberSequence").ToColumn("general_journal_number_sequence_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Client).HasFieldName("_client").ToColumn("client_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<CurrencyConvertRate> GetCurrencyConvertRateMappingConfiguration()
		{
			MappingConfiguration<CurrencyConvertRate> configuration = this.GetCurrencyConvertRateClassConfiguration();
			this.PrepareCurrencyConvertRatePropertyConfigurations(configuration);
			this.PrepareCurrencyConvertRateAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<CurrencyConvertRate> GetCurrencyConvertRateClassConfiguration()
		{
			MappingConfiguration<CurrencyConvertRate> configuration = new MappingConfiguration<CurrencyConvertRate>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Version).ToTable("currency_convert_rate");
	
			return configuration;
		}
	
		public void PrepareCurrencyConvertRatePropertyConfigurations(MappingConfiguration<CurrencyConvertRate> configuration)
		{
			configuration.HasProperty(x => x.Id).IsIdentity(KeyGenerator.Guid).HasFieldName("_id").ToColumn("id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.RecCreated).HasFieldName("_recCreated").ToColumn("rec_created_at").IsNotNullable().HasColumnType("timestamp").WithConverter("OpenAccessRuntime.Data.PostgresTimestampTZConverter");
			configuration.HasProperty(x => x.RecCreatedBy).HasFieldName("_recCreatedBy").ToColumn("rec_created_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.RecModified).HasFieldName("_recModified").ToColumn("rec_modified_at").IsNotNullable().HasColumnType("timestamp").WithConverter("OpenAccessRuntime.Data.PostgresTimestampTZConverter");
			configuration.HasProperty(x => x.RecModifiedBy).HasFieldName("_recModifiedBy").ToColumn("rec_modified_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.ClientId).HasFieldName("_clientId").ToColumn("client_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.OrganizationId).HasFieldName("_organizationId").ToColumn("organization_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.Version).HasFieldName("_version").IsVersion().ToColumn("version").IsNotNullable().HasColumnType("int8").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.BigIntConverter");
			configuration.HasProperty(x => x.CurrencyId).HasFieldName("_currencyId").ToColumn("currency_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.CurrencyRelationalId).HasFieldName("_currencyRelationalId").ToColumn("currency_relational_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.ValidFrom).HasFieldName("_validFrom").ToColumn("valid_from").IsNotNullable().HasColumnType("date").WithConverter("OpenAccessRuntime.Data.PostgresTimestampTZConverter");
			configuration.HasProperty(x => x.Status).HasFieldName("_status").ToColumn("status").IsNotNullable().HasColumnType("int2").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.TinyInt2UByteConverter");
			configuration.HasProperty(x => x.ExchangeRateAmount).HasFieldName("_exchangeRateAmount").ToColumn("exchange_rate_amount").IsNotNullable().HasColumnType("int8").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.BigIntConverter+ToUInt32");
			configuration.HasProperty(x => x.RelationalExchRateAmount).HasFieldName("_relationalExchRateAmount").ToColumn("relational_exch_rate_amount").IsNotNullable().HasColumnType("int8").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.BigIntConverter+ToUInt32");
		}
	
		public void PrepareCurrencyConvertRateAssociationConfigurations(MappingConfiguration<CurrencyConvertRate> configuration)
		{
			configuration.HasAssociation(x => x.Client).HasFieldName("_client").ToColumn("client_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecCreatedByUser).HasFieldName("_user").ToColumn("rec_created_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecModifiedByUser).HasFieldName("_user1").ToColumn("rec_modified_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Organization).HasFieldName("_organization").ToColumn("organization_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Currency).HasFieldName("_currency").ToColumn("currency_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.CurrencyRelational).HasFieldName("_currencyRelational").ToColumn("currency_relational_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<Role> GetRoleMappingConfiguration()
		{
			MappingConfiguration<Role> configuration = this.GetRoleClassConfiguration();
			this.PrepareRolePropertyConfigurations(configuration);
			this.PrepareRoleAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Role> GetRoleClassConfiguration()
		{
			MappingConfiguration<Role> configuration = new MappingConfiguration<Role>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Version).ToTable("role");
	
			return configuration;
		}
	
		public void PrepareRolePropertyConfigurations(MappingConfiguration<Role> configuration)
		{
			configuration.HasProperty(x => x.Id).IsIdentity(KeyGenerator.Guid).HasFieldName("_id").ToColumn("id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.Name).HasFieldName("_name").ToColumn("name").IsNotNullable().HasColumnType("varchar").HasLength(0).WithConverter("OpenAccessRuntime.Data.VariableLengthStringConverter");
			configuration.HasProperty(x => x.ClientId).HasFieldName("_clientId").ToColumn("client_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.OrganizationId).HasFieldName("_organizationId").ToColumn("organization_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.Description).HasFieldName("_description").ToColumn("description").IsNotNullable().HasColumnType("varchar").HasLength(0).WithConverter("OpenAccessRuntime.Data.VariableLengthStringConverter");
			configuration.HasProperty(x => x.Version).HasFieldName("_version").IsVersion().ToColumn("version").IsNotNullable().HasColumnType("int8").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.BigIntConverter");
			configuration.HasProperty(x => x.Status).HasFieldName("_status").ToColumn("status").IsNotNullable().HasColumnType("int2").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.SmallInt2Int16Converter");
			configuration.HasProperty(x => x.RecCreated).HasFieldName("_recCreated").ToColumn("rec_created_at").IsNotNullable().HasColumnType("timestamp").WithConverter("OpenAccessRuntime.Data.PostgresTimestampTZConverter");
			configuration.HasProperty(x => x.RecCreatedBy).HasFieldName("_recCreatedBy").ToColumn("rec_created_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.RecModified).HasFieldName("_recModified").ToColumn("rec_modified_at").IsNotNullable().HasColumnType("timestamp").WithConverter("OpenAccessRuntime.Data.PostgresTimestampTZConverter");
			configuration.HasProperty(x => x.RecModifiedBy).HasFieldName("_recModifiedBy").ToColumn("rec_modified_by").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
		}
	
		public void PrepareRoleAssociationConfigurations(MappingConfiguration<Role> configuration)
		{
			configuration.HasAssociation(x => x.Client).HasFieldName("_client").ToColumn("client_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.Organization).HasFieldName("_organization").ToColumn("organization_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecCreateByUser).HasFieldName("_user").ToColumn("rec_created_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.RecModifiedByUser).HasFieldName("_user1").ToColumn("rec_modified_by").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.UsersInRole).HasFieldName("_userInRole").WithOpposite(x => x.Role).ToColumn("role_id").WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
		public MappingConfiguration<UserInRole> GetUserInRoleMappingConfiguration()
		{
			MappingConfiguration<UserInRole> configuration = this.GetUserInRoleClassConfiguration();
			this.PrepareUserInRolePropertyConfigurations(configuration);
			this.PrepareUserInRoleAssociationConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<UserInRole> GetUserInRoleClassConfiguration()
		{
			MappingConfiguration<UserInRole> configuration = new MappingConfiguration<UserInRole>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Version).ToTable("user_in_role");
	
			return configuration;
		}
	
		public void PrepareUserInRolePropertyConfigurations(MappingConfiguration<UserInRole> configuration)
		{
			configuration.HasProperty(x => x.Id).IsIdentity(KeyGenerator.Guid).HasFieldName("_id").ToColumn("id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.RoleId).HasFieldName("_roleId").ToColumn("role_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
			configuration.HasProperty(x => x.Version).HasFieldName("_version").IsVersion().ToColumn("version").IsNotNullable().HasColumnType("int8").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.BigIntConverter");
			configuration.HasProperty(x => x.UserId).HasFieldName("_userId").ToColumn("user_id").IsNotNullable().HasColumnType("uuid").HasPrecision(0).HasScale(0).WithConverter("OpenAccessRuntime.Data.GuidConverter");
		}
	
		public void PrepareUserInRoleAssociationConfigurations(MappingConfiguration<UserInRole> configuration)
		{
			configuration.HasAssociation(x => x.Role).HasFieldName("_role").WithOpposite(x => x.UsersInRole).ToColumn("role_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
			configuration.HasAssociation(x => x.User).HasFieldName("_user").WithOpposite(x => x.RolesInUser).ToColumn("user_id").IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
		}
		
	}
}
#pragma warning restore 1591
