<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Business_Partner" xml:space="preserve">
    <value>Business Partner</value>
  </data>
  <data name="Business_Partner_Group" xml:space="preserve">
    <value>Business Partner Group</value>
  </data>
  <data name="Confirm_new_password" xml:space="preserve">
    <value>Confirm new password</value>
  </data>
  <data name="Confirm_password" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="Currency_Rate" xml:space="preserve">
    <value>Currency Rate</value>
  </data>
  <data name="Current_password" xml:space="preserve">
    <value>Current password</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Financial" xml:space="preserve">
    <value>Financial</value>
  </data>
  <data name="Full_Name" xml:space="preserve">
    <value>Full_Name</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="Item_Group" xml:space="preserve">
    <value>Item Group</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Master_Setup" xml:space="preserve">
    <value>Master Setup</value>
  </data>
  <data name="Modules" xml:space="preserve">
    <value>Modules</value>
  </data>
  <data name="New_password" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="No_Sequence" xml:space="preserve">
    <value>No Sequence</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="Organization" xml:space="preserve">
    <value>Organization</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Password_Answer" xml:space="preserve">
    <value>Password Answer</value>
  </data>
  <data name="Password_Question" xml:space="preserve">
    <value>Password Question</value>
  </data>
  <data name="Please_Select" xml:space="preserve">
    <value>--Please Select--</value>
  </data>
  <data name="Point_Of_Sale" xml:space="preserve">
    <value>Point Of Sale - POS</value>
  </data>
  <data name="Preference" xml:space="preserve">
    <value>Preference</value>
  </data>
  <data name="Purchase" xml:space="preserve">
    <value>Purchase</value>
  </data>
  <data name="Remember_me" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="Reports" xml:space="preserve">
    <value>Reports</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="Sales" xml:space="preserve">
    <value>Sales</value>
  </data>
  <data name="Sales_Price" xml:space="preserve">
    <value>Sales Price</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="System" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="The_0_must_be_at_least_2_characters_long" xml:space="preserve">
    <value>The {0} must be at least {2} characters long</value>
  </data>
  <data name="The_password_and_confirmation_password_do_not_match" xml:space="preserve">
    <value>The password and confirmation password do not match</value>
  </data>
  <data name="UOM" xml:space="preserve">
    <value>UOM</value>
  </data>
  <data name="Users_Manager" xml:space="preserve">
    <value>Users Manager</value>
  </data>
  <data name="User_Name" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="Warehouse" xml:space="preserve">
    <value>Warehouse</value>
  </data>
  <data name="Working_Date" xml:space="preserve">
    <value>Working Date</value>
  </data>
  <data name="Your_password_is_required" xml:space="preserve">
    <value>Your password is required.</value>
  </data>
  <data name="Your_username_is_required" xml:space="preserve">
    <value>Your username is required.</value>
  </data>
  <data name="Created_At" xml:space="preserve">
    <value>Created At</value>
  </data>
  <data name="Created_By" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="Modified_At" xml:space="preserve">
    <value>Modified At</value>
  </data>
  <data name="Modified_By" xml:space="preserve">
    <value>Modified By</value>
  </data>
  <data name="Organization_Description" xml:space="preserve">
    <value>Organization Description</value>
  </data>
  <data name="Purchase_Invoice" xml:space="preserve">
    <value>Purchase Invoice</value>
  </data>
  <data name="Purchase_Order" xml:space="preserve">
    <value>Purchase Order</value>
  </data>
  <data name="Purchase_Receive" xml:space="preserve">
    <value>Purchase Receive</value>
  </data>
  <data name="Root_Organization" xml:space="preserve">
    <value>Root Organization</value>
  </data>
  <data name="Sales_Invoice" xml:space="preserve">
    <value>Sales Invoice</value>
  </data>
  <data name="Sales_Order" xml:space="preserve">
    <value>Sales Order</value>
  </data>
  <data name="Sales_POS" xml:space="preserve">
    <value>Sales POS</value>
  </data>
  <data name="Sales_Shipment" xml:space="preserve">
    <value>Sales Shipment</value>
  </data>
  <data name="Sequence_Options" xml:space="preserve">
    <value>Sequence Options</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="Code_already_exists_Please_specify_another_one" xml:space="preserve">
    <value>Code already exists. Please specify another one.</value>
  </data>
  <data name="Currency_has_been_changed_or_deleted_Please_check" xml:space="preserve">
    <value>Currency has been changed or deleted! Please check</value>
  </data>
  <data name="Currency_List" xml:space="preserve">
    <value>Currency List</value>
  </data>
  <data name="Currency_Maintenance" xml:space="preserve">
    <value>Currency Maintenance</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Invalid_Code_only_allow_a_z_A_Z_0_9_character" xml:space="preserve">
    <value>Invalid Code - only allow a-z A-Z 0-9 character</value>
  </data>
  <data name="User_dont_have_Client_or_Organization_Please_set" xml:space="preserve">
    <value>User don't have Client or Organization. Please set</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
</root>