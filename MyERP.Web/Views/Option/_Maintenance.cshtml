@model MyERP.Web.Models.OptionEditViewModel

@(Html.X().FormPanel()
      .ID("FormOptionMaintenance")
      .Frame(true)
      .Width(600)
      .Border(false)
      .BodyPadding(5)
      .AutoScroll(true)
      .Bin(bins =>
      {
          bins.Add(Html.X().Store()
              .ID("LookupNoSequenceStore")
              .AutoDestroy(false)
              .Model(Html.X().Model()
                  .IDProperty("Id")
                  .Fields(
                      new ModelField("Id", ModelFieldType.Int),
                      new ModelField("OrganizationCode", ModelFieldType.String),
                      new ModelField("Code", ModelFieldType.String),
                      new ModelField("Description", ModelFieldType.String)
                  )
              )
              .Data(ViewData["NoSequences"])
              );
          bins.Add(Html.X().Store().AutoLoad(false).AutoDestroy(false)
              .ID("LookupBusinessPartnerStore")
              .Proxy(Html.X().AjaxProxy()
                  .Url(Url.Action("LookupData", "Index", new { area = "BusinessPartner" }))
                  .Reader(Html.X().JsonReader().RootProperty("data").TotalProperty("total")))
              .Model(Html.X().Model()
                  .IDProperty("Id")
                  .Fields(
                      new ModelField("Id", ModelFieldType.Int),
                      new ModelField("OrganizationCode", ModelFieldType.String),
                      new ModelField("Code", ModelFieldType.String),
                      new ModelField("Description", ModelFieldType.String)
                  )
              )
              .Parameters(p =>
              {
                  p.Add(new StoreParameter("id", "this.id", ParameterMode.Raw));
              })
              .Data(ViewData["BusinessPartner"])
              );
      })
      .DefaultButton("btnSave")
      .Items(items =>
      {
          items.Add(Html.X().Panel()
              .Content(
                  @<text>
                      <h1>@Resources.Resources.Options</h1>
                   </text>)
          );
          items.Add(Html.X().AntiForgeryField());
          items.Add(Html.X().HiddenFor(m => m.Status));
          items.Add(Html.X().HiddenFor(m => m.Id).ID("Id"));
          items.Add(Html.X().HiddenFor(m => m.Version).ID("Version"));
          items.Add(Html.X().FieldSet()
              .Title(@Resources.Resources.Options)
              .Width(800)
              .Layout(LayoutType.Column)
              .Defaults(Html.X().Parameter().Name("margin").Value("0 5 0 0").Mode(ParameterMode.Value))
              .Items(
                  Html.X().ComboBoxFor(m => m.OneTimeBusinessPartnerId).ID("OneTimeBusinessPartnerId").LabelAlign(LabelAlign.Top)
                      .DisplayField("Code")
                      .ValueField("Id")
                      .FieldStyle("text-transform: uppercase;")
                      .TypeAhead(true)
                      .MinChars(0)
                      .PageSize(10)
                      .SelectOnTab(true)
                      .ForceSelection(true)
                      .ValidateOnBlur(true)
                      .ValidateOnChange(true)
                      .ListConfig(Html.X().BoundList()
                          .LoadingText("Searching...")
                          .ItemTpl(Html.X().XTemplate()
                              .Html(@<text>
                                    <div class="search-item">
                                        <h3>{Code}</h3>
                                        {Description}
                                    </div>
                                 </text>))
                          .MinWidth(400))
                      .StoreID("LookupBusinessPartnerStore")
                      .Listeners(ls =>
                      {
                          ls.BeforeQuery.Handler = @"var _id = #{OneTimeBusinessPartnerId}.getValue();
                                            this.getStore().id = _id;
                                            this.getStore().load();";
                      }))
              );
          items.Add(Html.X().FieldSet()
              .Title(@Resources.Resources.Sequence_Options)
              .Width(800)
              .Layout(LayoutType.Column)
              .Defaults(Html.X().Parameter().Name("margin").Value("0 5 0 0").Mode(ParameterMode.Value))
              .Items(
                  Html.X().ComboBoxFor(m => m.GeneralLedgerSequenceId).ID("GeneralLedgerSequence").Editable(false).LabelAlign(LabelAlign.Top)
                      .DisplayField("Code")
                      .ValueField("Id")
                      .FieldStyle("text-transform: uppercase;")
                      .ListConfig(Html.X().BoundList()
                          .LoadingText("Searching...")
                          .ItemTpl(Html.X().XTemplate()
                              .Html(@<text>
                                        <div class="search-item">
                                            <h3>{Code}</h3>
                                            {Description}
                                        </div>
                                     </text>))
                          .MinWidth(400))
                      .StoreID("LookupNoSequenceStore"),
                  Html.X().ComboBoxFor(m => m.CashReceiptSequenceId).ID("CashReceiptSequence").Editable(false).LabelAlign(LabelAlign.Top)
                      .DisplayField("Code")
                      .ValueField("Id")
                      .FieldStyle("text-transform: uppercase;")
                      .ListConfig(Html.X().BoundList()
                          .LoadingText("Searching...")
                          .ItemTpl(Html.X().XTemplate()
                              .Html(@<text>
                                        <div class="search-item">
                                            <h3>{Code}</h3>
                                            {Description}
                                        </div>
                                     </text>))
                          .MinWidth(400))
                      .StoreID("LookupNoSequenceStore"),
                  Html.X().ComboBoxFor(m => m.CashPaymentSequenceId).ID("CashPaymentSequence").Editable(false).LabelAlign(LabelAlign.Top)
                      .DisplayField("Code")
                      .ValueField("Id")
                      .FieldStyle("text-transform: uppercase;")
                      .ListConfig(Html.X().BoundList()
                          .LoadingText("Searching...")
                          .ItemTpl(Html.X().XTemplate()
                              .Html(@<text>
                                        <div class="search-item">
                                            <h3>{Code}</h3>
                                            {Description}
                                        </div>
                                     </text>))
                          .MinWidth(400))
                      .StoreID("LookupNoSequenceStore"),         
                  Html.X().ComboBoxFor(m => m.BankReceiptSequenceId).ID("BankReceiptSequence").Editable(false).LabelAlign(LabelAlign.Top)
                      .DisplayField("Code")
                      .ValueField("Id")
                      .FieldStyle("text-transform: uppercase;")
                      .ListConfig(Html.X().BoundList()
                          .LoadingText("Searching...")
                          .ItemTpl(Html.X().XTemplate()
                              .Html(@<text>
                                        <div class="search-item">
                                            <h3>{Code}</h3>
                                            {Description}
                                        </div>
                                     </text>))
                          .MinWidth(400))
                      .StoreID("LookupNoSequenceStore"),
                  Html.X().ComboBoxFor(m => m.BankCheckqueSequenceId).ID("BankCheckqueSequence").Editable(false).LabelAlign(LabelAlign.Top)
                      .DisplayField("Code")
                      .ValueField("Id")
                      .FieldStyle("text-transform: uppercase;")
                      .ListConfig(Html.X().BoundList()
                          .LoadingText("Searching...")
                          .ItemTpl(Html.X().XTemplate()
                              .Html(@<text>
                                        <div class="search-item">
                                            <h3>{Code}</h3>
                                            {Description}
                                        </div>
                                     </text>))
                          .MinWidth(400))
                      .StoreID("LookupNoSequenceStore"),
                  Html.X().ComboBoxFor(m => m.SalesOrderSequenceId).ID("SalesOrderSequence").Editable(false).LabelAlign(LabelAlign.Top)
                      .DisplayField("Code")
                      .ValueField("Id")
                      .FieldStyle("text-transform: uppercase;")
                      .ListConfig(Html.X().BoundList()
                          .LoadingText("Searching...")
                          .ItemTpl(Html.X().XTemplate()
                              .Html(@<text>
                                    <div class="search-item">
                                        <h3>{Code}</h3>
                                        {Description}
                                    </div>
                                 </text>))
                          .MinWidth(400))
                      .StoreID("LookupNoSequenceStore"),
                  Html.X().ComboBoxFor(m => m.SalesShipmentSeqId).ID("SalesShipmentSeq").Editable(false).LabelAlign(LabelAlign.Top)
                      .DisplayField("Code")
                      .ValueField("Id")
                      .FieldStyle("text-transform: uppercase;")
                      .ListConfig(Html.X().BoundList()
                          .LoadingText("Searching...")
                          .ItemTpl(Html.X().XTemplate()
                              .Html(@<text>
                                        <div class="search-item">
                                            <h3>{Code}</h3>
                                            {Description}
                                        </div>
                                     </text>)
                          )
                          .MinWidth(400))
                      .StoreID("LookupNoSequenceStore"),
                  Html.X().ComboBoxFor(m => m.SalesInvoiceSeqId).ID("SalesInvoiceSeq").Editable(false).LabelAlign(LabelAlign.Top)
                      .DisplayField("Code")
                      .ValueField("Id")
                      .FieldStyle("text-transform: uppercase;")
                      .ListConfig(Html.X().BoundList()
                          .LoadingText("Searching...")
                          .ItemTpl(Html.X().XTemplate()
                              .Html(@<text>
                                        <div class="search-item">
                                            <h3>{Code}</h3>
                                            {Description}
                                        </div>
                                     </text>)
                          )
                          .MinWidth(400))
                      .StoreID("LookupNoSequenceStore"),
                  Html.X().ComboBoxFor(m => m.SalesPosSequenceId).ID("SalesPosSequence").Editable(false).LabelAlign(LabelAlign.Top).DisplayField("Code")
                      .ValueField("Id")
                      .FieldStyle("text-transform: uppercase;")
                      .ListConfig(Html.X().BoundList()
                          .LoadingText("Searching...")
                          .ItemTpl(Html.X().XTemplate()
                              .Html(@<text>
                                        <div class="search-item">
                                            <h3>{Code}</h3>
                                            {Description}
                                        </div>
                                     </text>)
                          )
                          .MinWidth(400))
                      .StoreID("LookupNoSequenceStore"),
                  Html.X().ComboBoxFor(m => m.PurchOrderSequenceId).ID("PurchOrderSequence").Editable(false).LabelAlign(LabelAlign.Top).DisplayField("Code")
                      .ValueField("Id")
                      .FieldStyle("text-transform: uppercase;")
                      .ListConfig(Html.X().BoundList()
                          .LoadingText("Searching...")
                          .ItemTpl(Html.X().XTemplate()
                              .Html(@<text>
                                        <div class="search-item">
                                            <h3>{Code}</h3>
                                            {Description}
                                        </div>
                                     </text>)
                          )
                          .MinWidth(400))
                      .StoreID("LookupNoSequenceStore"),
                  Html.X().ComboBoxFor(m => m.PurchReceiveSeqId).ID("PurchReceiveSeq").Editable(false).LabelAlign(LabelAlign.Top).DisplayField("Code")
                      .ValueField("Id")
                      .FieldStyle("text-transform: uppercase;")
                      .ListConfig(Html.X().BoundList()
                          .LoadingText("Searching...")
                          .ItemTpl(Html.X().XTemplate()
                              .Html(@<text>
                                        <div class="search-item">
                                            <h3>{Code}</h3>
                                            {Description}
                                        </div>
                                     </text>)
                          )
                          .MinWidth(400))
                      .StoreID("LookupNoSequenceStore"),
                  Html.X().ComboBoxFor(m => m.PurchInvoiceSeqId).ID("PurchInvoiceSeq").Editable(false).LabelAlign(LabelAlign.Top).DisplayField("Code")
                      .ValueField("Id")
                      .FieldStyle("text-transform: uppercase;")
                      .ListConfig(Html.X().BoundList()
                          .LoadingText("Searching...")
                          .ItemTpl(Html.X().XTemplate()
                              .Html(@<text>
                                        <div class="search-item">
                                            <h3>{Code}</h3>
                                            {Description}
                                        </div>
                                     </text>)
                          )
                          .MinWidth(400))
                      .StoreID("LookupNoSequenceStore")
              ));
      })
      .Buttons(
          Html.X().Button()
              .ID("btnSave")
              .Text(@Resources.Resources.Save)
              .Icon(Icon.Disk)
              .DirectEvents(de =>
              {
                  de.Click.Url = Url.Action("_Maintenance");
                  de.Click.Method = HttpMethod.POST;
                  de.Click.Before = "return this.up('form').isValid();";
                  de.Click.Success = "Ext.Msg.notify('Success', 'Save Success'); #{Version}.setValue(result.result.Version);";
                  de.Click.Failure = "Ext.Msg.notify('Error', result.errorMessage);";
                  de.Click.ShowWarningOnFailure = true;
                  de.Click.EventMask.ShowMask = true;
                  de.Click.FormID = "FormLocationMaintenance";
              }),
          Html.X().Button()
              .ID("btnCancel")
              .Text(@Resources.Resources.Cancel)
              .Icon(Icon.Cancel))
)

