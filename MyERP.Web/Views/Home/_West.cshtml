@using System.Linq;
@{
    Theme theme = Ext.Net.Theme.Crisp;

    if (this.Session["Ext.Net.Theme"] != null)
    {
        theme = (Theme)this.Session["Ext.Net.Theme"];
    }

    List<CheckMenuItem> themeItems = new List<CheckMenuItem>()
    {
        new CheckMenuItem
        {
            ID = "CheckMenuItemThemeAria",
            Text = "Aria",
            Group = "theme"
        },
        new CheckMenuItem
        {
            ID = "CheckMenuItemThemeDefault",
            Text = "Blue",
            Group = "theme"
        },
        new CheckMenuItem
        {
            ID = "CheckMenuItemThemeCrisp",
            Text = "Crisp",
            Group = "theme"
        },
        new CheckMenuItem
        {
            ID = "CheckMenuItemThemeCrispTouch",
            Text = "Crisp Touch",
            Group = "theme"
        },
        new CheckMenuItem
        {
            ID = "CheckMenuItemThemeGray",
            Text = "Gray",
            Group = "theme"
        },
        new CheckMenuItem
        {
            ID = "CheckMenuItemThemeNeptune",
            Text = "Neptune",
            Group = "theme"
        },
        new CheckMenuItem
        {
            ID = "CheckMenuItemThemeNeptuneTouch",
            Text = "Neptune Touch",
            Group = "theme"
        },
        new CheckMenuItem
        {
            ID = "CheckMenuItemThemeTriton",
            Text = "Triton",
            Group = "theme"
        }
    };

    string menuItemId = "CheckMenuItemTheme" + theme.ToString();

    themeItems.First<CheckMenuItem>(item => item.ID == menuItemId).Checked = true;

    ResourceManager.RegisterControlResources<TagLabel>();
}
@(Html.X().Panel()
        .Region(Region.West)
        .Layout(LayoutType.Fit)
        .Width(310)
        .Header(false)
        .Border(false)
        .Items(
            new TreePanel
            {
                ID = "exampleTree",
                AutoScroll = true,
                Lines = false,
                UseArrows = true,
                CollapseFirst = false,
                RootVisible = false,
                HideHeaders = true,
                Animate = false,

                TopBar =
                {
                    new Toolbar
                    {
                        Cls = "left-header",

                        Items =
                        {
                            new TextField
                            {
                                ID = "SearchField",
                                EnableKeyEvents = true,
                                Flex = 1,
                                EmptyText = "Filter ...",
                                RemoveClearTrigger = true,
                                Triggers =
                                {
                                    new FieldTrigger
                                    {
                                        Hidden = true,
                                        Icon = TriggerIcon.Clear
                                    }
                                },
                                Listeners =
                                {
                                    KeyUp =
                                    {
                                        Buffer = 500,
                                        Fn = "keyUp"
                                    },
                                    TriggerClick =
                                    {
                                        Fn = "clearFilter"
                                    },
                                    SpecialKey =
                                    {
                                        Fn = "filterSpecialKey",
                                        Delay = 1
                                    }
                                }
                            },

                            new Button
                            {
                                ID = "OptionsButton",
                                IconCls = "fa fa-cog",
                                ArrowVisible = false,
                                ToolTip = "Options",
                                Menu =
                                {
                                    new Menu
                                    {
                                        MinWidth = 200,
                                        Items =
                                        {
                                            new MenuItem
                                            {
                                                Text = "Expand All",
                                                IconCls = "icon-expand-all",
                                                Handler = "this.up('treepanel').expandAll(false);"
                                            },
                                            new MenuItem
                                            {
                                                Text = "Collapse All",
                                                IconCls = "icon-collapse-all",
                                                Handler = "this.up('treepanel').collapseAll(false);"
                                            },
                                        }
                                    }
                                }
                            }
                        }
                    }
                },

                Store =
                {
                    new TreeStore
                    {
                        Root =
                        {
                            new Node
                            {
                                NodeID = "Root",
                                Expanded = true
                            }
                        },

                        Proxy =
                        {
                            new AjaxProxy
                            {
                                API =
                                {
                                    Read = Url.Action("GetMenuNodes")
                                },

                                ActionMethods =
                                {
                                    Read = HttpMethod.GET
                                }
                            }
                        },

                        Fields =
                        {
                            new ModelField("tags"),
                            new ModelField("flags")
                        }
                    }
                },

                ColumnModel =
                {
                    Columns =
                    {
                        new TreeColumn()
                        {
                            DataIndex = "text",
                            Flex = 1,
                            Renderer =
                            {
                                Fn = "treeRenderer"
                            }
                        }
                    }
                },

                Listeners =
                {
                    ItemClick =
                    {
                        Handler = "onTreeItemClick(record, e);"
                    },

                    AfterRender =
                    {
                        Fn = "onTreeAfterRender"
                    }
                }
            })
)