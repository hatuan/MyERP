@model MyERP.Web.Models.ItemEditViewModel

@(Html.X().Store().ID("LookupUOMStore").AutoLoad(false)

      .Proxy(Html.X().AjaxProxy()
          .Url(Url.Action("LookupData", "Index", new { area = "UOM" }))
          .Reader(Html.X().JsonReader().RootProperty("data").TotalProperty("total"))
      )
      .Model(Html.X().Model()
          .IDProperty("Id")
          .Fields(
              new ModelField("Id", ModelFieldType.Int),
              new ModelField("OrganizationCode", ModelFieldType.String),
              new ModelField("Code", ModelFieldType.String),
              new ModelField("Description", ModelFieldType.String)
          )
      )
      .Parameters(p =>
      {
          p.Add(new StoreParameter("Id", "App.BaseUomId.getValue()", ParameterMode.Raw));
      }
      )
      .Data(ViewData["BaseUomItems"])
)

@(Html.X().Store().ID("LookupItemGroup1Store").AutoLoad(false)
          .Proxy(Html.X().AjaxProxy()
              .Url(Url.Action("LookupData", "ItemGroup", new { area = "Item" }))
              .Reader(Html.X().JsonReader().RootProperty("data"))
          )
          .Model(Html.X().Model()
              .IDProperty("Id")
              .Fields(
                  new ModelField("Id", ModelFieldType.Int),
                  new ModelField("OrganizationCode", ModelFieldType.String),
                  new ModelField("Code", ModelFieldType.String),
                  new ModelField("Description", ModelFieldType.String)
              )
          )
          .Parameters(p =>
              {
                  p.Add(new StoreParameter("level", "1", ParameterMode.Value));
                  p.Add(new StoreParameter("Id", "App.ItemGroup1.getValue()", ParameterMode.Raw));
              }
          )
      .Data(ViewData["ItemGroup1Items"])
)

@(Html.X().Store().ID("LookupItemGroup2Store").AutoLoad(false)
          .Proxy(Html.X().AjaxProxy()
              .Url(Url.Action("LookupData", "ItemGroup", new { area = "Item" }))
              .Reader(Html.X().JsonReader().RootProperty("data"))
          )
          .Model(Html.X().Model()
              .IDProperty("Id")
              .Fields(
                  new ModelField("Id", ModelFieldType.Int),
                  new ModelField("OrganizationCode", ModelFieldType.String),
                  new ModelField("Code", ModelFieldType.String),
                  new ModelField("Description", ModelFieldType.String)
              )
          )
          .Parameters(p =>
              {
                  p.Add(new StoreParameter("level", "2", ParameterMode.Value));
                  p.Add(new StoreParameter("Id", "App.ItemGroup2.getValue()", ParameterMode.Raw));
              }
          )
      .Data(ViewData["ItemGroup2Items"])
)

@(Html.X().Store().ID("LookupItemGroup3Store").AutoLoad(false)
          .Proxy(Html.X().AjaxProxy()
              .Url(Url.Action("LookupData", "ItemGroup", new { area = "Item" }))
              .Reader(Html.X().JsonReader().RootProperty("data"))
          )
          .Model(Html.X().Model()
              .IDProperty("Id")
              .Fields(
                  new ModelField("Id", ModelFieldType.Int),
                  new ModelField("OrganizationCode", ModelFieldType.String),
                  new ModelField("Code", ModelFieldType.String),
                  new ModelField("Description", ModelFieldType.String)
              )
          )
          .Parameters(p =>
              {
                  p.Add(new StoreParameter("level", "3", ParameterMode.Value));
                  p.Add(new StoreParameter("Id", "App.ItemGroup3.getValue()", ParameterMode.Raw));
              }
          )
      .Data(ViewData["ItemGroup3Items"])
)

@(Html.X().Window()
      .ID("WindowItemMaintenance")
      .Title("Item Maintenance")
      .Height(700)
      .Width(800)
      .Modal(true)
      .Layout(LayoutType.Fit)
      .Items(
          Html.X().FormPanel()
              .ID("FormItemMaintenance")
              .Border(false)
              .BodyPadding(5)
              .DefaultButton("btnSave")
              .Scrollable(ScrollableOption.Vertical)
              .Items(
                  Html.X().Container()
                      .Layout(LayoutType.Form)
                      .Items(
                          Html.X().AntiForgeryField(),
                          Html.X().HiddenFor(m => m.Id).ID("Id"),
                          Html.X().HiddenFor(m => m.Version).ID("Version"),
                          Html.X().TextFieldFor(m => m.Code).AllowBlank(false).FieldStyle("text-transform: uppercase;").Width(150).AutoFocus(true).EnforceMaxLength(true).ID("Code"),
                          Html.X().TextFieldFor(m => m.Description).AllowBlank(false).EnforceMaxLength(true).ID("Description")
                          ),
                  Html.X().TabPanel()
                      .ActiveTabIndex(0)
                      .Items(
                          Html.X().Panel()
                              .Title("Information")
                              .Layout(LayoutType.Form)
                              .Items(
                                  Html.X().Container()
                                      .Items(
                                          Html.X().ComboBoxFor(m => m.BaseUomId).AllowBlank(false).ID("BaseUomId")
                                              .DisplayField("Code")
                                              .ValueField("Id")
                                              .LabelWidth(100)
                                              .FieldStyle("text-transform: uppercase;")
                                              .TypeAhead(true)
                                              .MinChars(0)
                                              .PageSize(10)
                                              .SelectOnTab(true)
                                              .ForceSelection(true)
                                              .ValidateOnBlur(true)
                                              .ValidateOnChange(true)
                                              .ListConfig(Html.X().BoundList()
                                                  .LoadingText("Searching...")
                                                  .ItemTpl(Html.X().XTemplate()
                                                      .Html(@<text>
                                                                <div class="search-item">
                                                                    <h3>{Code}</h3>
                                                                    {Description}
                                                                </div>
                                                             </text>)
                                                  )
                                                  .MinWidth(400)
                                              )
                                              .StoreID("LookupUOMStore")
                                              .Listeners(ls =>
                                              {
                                                  ls.BeforeQuery.Handler = "App.BaseUomId.getStore().load()";
                                              }),
                                          Html.X().ComboBoxFor(m => m.VatId).AllowBlank(false).ID("VatId")
                                              .DisplayField("Code")
                                              .ValueField("Id")
                                              .LabelWidth(100)
                                              .FieldStyle("text-transform: uppercase;")
                                              .TypeAhead(true)
                                              .MinChars(0)
                                              .PageSize(10)
                                              .SelectOnTab(true)
                                              .ForceSelection(true)
                                              .ValidateOnBlur(true)
                                              .ValidateOnChange(true)
                                              .ListConfig(Html.X().BoundList()
                                                  .LoadingText("Searching...")
                                                  .ItemTpl(Html.X().XTemplate()
                                                      .Html(@<text>
                                                                <div class="search-item">
                                                                    <h3>{Code}</h3>
                                                                    {Description}
                                                                </div>
                                                             </text>)
                                                  )
                                                  .MinWidth(400)
                                              )),
                                  Html.X().Container()
                                      .Items(
                                          Html.X().TextFieldFor(m => m.UnitCost).ID("UnitCost")
                                              .LabelWidth(100)
                                              .MaskRe(@"/[0-9\,\.]")
                                              .AllowBlank(true)
                                              .Listeners(ls =>
                                              {
                                                  ls.Focus.Handler = @"this.setRawValue(this.getRawValue().replace(/\./g,''))";
                                                  ls.Blur.Handler = @"var v = this.getRawValue().replace(/\./g,'').replace(',', '.');
                                                                    this.setRawValue(Ext.util.Format.number(v, '0.000,00/i'));";
                                              })
                                          ,
                                          Html.X().TextFieldFor(m => m.UnitPrice).ID("UnitPrice")
                                              .LabelWidth(100)
                                              .MaskRe(@"/[0-9\,\.]")
                                              .AllowBlank(true)
                                              .Listeners(ls =>
                                              {
                                                  ls.Focus.Handler = @"this.setRawValue(this.getRawValue().replace(/\./g,''))";
                                                  ls.Blur.Handler = @"var v = this.getRawValue().replace(/\./g,'').replace(',', '.');
                                                                    this.setRawValue(Ext.util.Format.number(v, '0.000,00/i'));";
                                              })
                                      ),
                                  Html.X().Container()
                                      .Items(
                                          Html.X().ComboBoxFor(m => m.ItemGroupId1).ID("ItemGroup1")
                                              .AllowBlank(true)
                                              .DisplayField("Code")
                                              .ValueField("Id")
                                              .FieldStyle("text-transform: uppercase;")
                                              .TypeAhead(true)
                                              .MinChars(0)
                                              .PageSize(10)
                                              .SelectOnTab(true)
                                              .ForceSelection(true)
                                              .ValidateOnBlur(true)
                                              .ValidateOnChange(true)
                                              .ListConfig(Html.X().BoundList()
                                                  .LoadingText("Searching...")
                                                  .ItemTpl(Html.X().XTemplate()
                                                      .Html(@<text>
                                                                <div class="search-item">
                                                                    <h3>{Code}</h3>
                                                                    {Description}
                                                                </div>
                                                             </text>)
                                                  )
                                                  .MinWidth(400)
                                              )
                                              .StoreID("LookupItemGroup1Store")
                                              .Listeners(ls =>
                                              {
                                                  ls.BeforeQuery.Handler = "App.ItemGroup1.getStore().load()";
                                              })
                                              .Flex(1),
                                          Html.X().ComboBoxFor(m => m.ItemGroupId2).ID("ItemGroup2")
                                              .AllowBlank(true)
                                              .DisplayField("Code")
                                              .ValueField("Id")
                                              .FieldStyle("text-transform: uppercase;")
                                              .TypeAhead(true)
                                              .MinChars(0)
                                              .PageSize(10)
                                              .SelectOnTab(true)
                                              .ForceSelection(true)
                                              .ValidateOnBlur(true)
                                              .ValidateOnChange(true)
                                              .ListConfig(Html.X().BoundList()
                                                  .LoadingText("Searching...")
                                                  .ItemTpl(Html.X().XTemplate()
                                                      .Html(@<text>
                                                                <div class="search-item">
                                                                    <h3>{Code}</h3>
                                                                    {Description}
                                                                </div>
                                                             </text>)
                                                  )
                                                  .MinWidth(400)
                                              )
                                              .StoreID("LookupItemGroup2Store")
                                              .Listeners(ls =>
                                              {
                                                  ls.BeforeQuery.Handler = "App.ItemGroup2.getStore().load()";
                                              })
                                              .Flex(1),
                                          Html.X().ComboBoxFor(m => m.ItemGroupId3).ID("ItemGroup3")
                                              .AllowBlank(true)
                                              .DisplayField("Code")
                                              .ValueField("Id")
                                              .FieldStyle("text-transform: uppercase;")
                                              .TypeAhead(true)
                                              .MinChars(0)
                                              .PageSize(10)
                                              .SelectOnTab(true)
                                              .ForceSelection(true)
                                              .ValidateOnBlur(true)
                                              .ValidateOnChange(true)
                                              .ListConfig(Html.X().BoundList()
                                                  .LoadingText("Searching...")
                                                  .ItemTpl(Html.X().XTemplate()
                                                      .Html(@<text>
                                                                <div class="search-item">
                                                                    <h3>{Code}</h3>
                                                                    {Description}
                                                                </div>
                                                             </text>)
                                                  )
                                                  .MinWidth(400)
                                              )
                                              .StoreID("LookupItemGroup3Store")
                                              .Listeners(ls =>
                                              {
                                                  ls.BeforeQuery.Handler = "App.ItemGroup3.getStore().load()";
                                              })
                                              .Flex(1).Margin(0)
                                      ),
                                  Html.X().Container()
                                      .Items(
                                          Html.X().ComboBoxFor(m => m.Status).ID("Status").Editable(false).ItemsFromEnum(typeof(MyERP.DataAccess.Enum.DefaultStatusType))
                                      )
                              ),
                          Html.X().Panel()
                              .Title("Account")
                              .Layout(LayoutType.Form)
                              .Items(
                                  Html.X().Container()
                                      .Items(
                                          Html.X().ComboBoxFor(m => m.InventoryAccountId).ID("InventoryAccountId")
                                              .DisplayField("Code")
                                              .ValueField("Id")
                                              .FieldStyle("text-transform: uppercase;")
                                              .TypeAhead(true)
                                              .MinChars(0)
                                              .PageSize(10)
                                              .SelectOnTab(true)
                                              .ForceSelection(true)
                                              .ValidateOnBlur(true)
                                              .ValidateOnChange(true)
                                              .ListConfig(Html.X().BoundList()
                                                  .LoadingText("Searching...")
                                                  .ItemTpl(Html.X().XTemplate()
                                                      .Html(@<text>
                                                                <div class="search-item">
                                                                    <h3>{Code}</h3>
                                                                    {Description}
                                                                </div>
                                                             </text>)
                                                  )
                                                  .MinWidth(400)
                                              ),
                                          Html.X().ComboBoxFor(m => m.ConsignmentAccountId).ID("ConsignmentAccountId")
                                              .DisplayField("Code")
                                              .ValueField("Id")
                                              .FieldStyle("text-transform: uppercase;")
                                              .TypeAhead(true)
                                              .MinChars(0)
                                              .PageSize(10)
                                              .SelectOnTab(true)
                                              .ForceSelection(true)
                                              .ValidateOnBlur(true)
                                              .ValidateOnChange(true)
                                              .ListConfig(Html.X().BoundList()
                                                  .LoadingText("Searching...")
                                                  .ItemTpl(Html.X().XTemplate()
                                                      .Html(@<text>
                                                                <div class="search-item">
                                                                    <h3>{Code}</h3>
                                                                    {Description}
                                                                </div>
                                                             </text>)
                                                  )
                                                  .MinWidth(400)
                                              ),
                                          Html.X().ComboBoxFor(m => m.SalesAccountId).ID("SalesAccountId")
                                              .DisplayField("Code")
                                              .ValueField("Id")
                                              .FieldStyle("text-transform: uppercase;")
                                              .TypeAhead(true)
                                              .MinChars(0)
                                              .PageSize(10)
                                              .SelectOnTab(true)
                                              .ForceSelection(true)
                                              .ValidateOnBlur(true)
                                              .ValidateOnChange(true)
                                              .ListConfig(Html.X().BoundList()
                                                  .LoadingText("Searching...")
                                                  .ItemTpl(Html.X().XTemplate()
                                                      .Html(@<text>
                                                                <div class="search-item">
                                                                    <h3>{Code}</h3>
                                                                    {Description}
                                                                </div>
                                                             </text>)
                                                  )
                                                  .MinWidth(400)
                                              ),
                                          Html.X().ComboBoxFor(m => m.SalesInternalAccountId).ID("SalesInternalAccountId")
                                              .DisplayField("Code")
                                              .ValueField("Id")
                                              .FieldStyle("text-transform: uppercase;")
                                              .TypeAhead(true)
                                              .MinChars(0)
                                              .PageSize(10)
                                              .SelectOnTab(true)
                                              .ForceSelection(true)
                                              .ValidateOnBlur(true)
                                              .ValidateOnChange(true)
                                              .ListConfig(Html.X().BoundList()
                                                  .LoadingText("Searching...")
                                                  .ItemTpl(Html.X().XTemplate()
                                                      .Html(@<text>
                                                                <div class="search-item">
                                                                    <h3>{Code}</h3>
                                                                    {Description}
                                                                </div>
                                                             </text>)
                                                  )
                                                  .MinWidth(400)
                                              ),
                                          Html.X().ComboBoxFor(m => m.SalesReturnAccountId).ID("SalesReturnAccountId")
                                              .DisplayField("Code")
                                              .ValueField("Id")
                                              .FieldStyle("text-transform: uppercase;")
                                              .TypeAhead(true)
                                              .MinChars(0)
                                              .PageSize(10)
                                              .SelectOnTab(true)
                                              .ForceSelection(true)
                                              .ValidateOnBlur(true)
                                              .ValidateOnChange(true)
                                              .ListConfig(Html.X().BoundList()
                                                  .LoadingText("Searching...")
                                                  .ItemTpl(Html.X().XTemplate()
                                                      .Html(@<text>
                                                                <div class="search-item">
                                                                    <h3>{Code}</h3>
                                                                    {Description}
                                                                </div>
                                                             </text>)
                                                  )
                                                  .MinWidth(400)
                                              ),
                                          Html.X().ComboBoxFor(m => m.SalesDiscountAccountId).ID("SalesDiscountAccountId")
                                              .DisplayField("Code")
                                              .ValueField("Id")
                                              .FieldStyle("text-transform: uppercase;")
                                              .TypeAhead(true)
                                              .MinChars(0)
                                              .PageSize(10)
                                              .SelectOnTab(true)
                                              .ForceSelection(true)
                                              .ValidateOnBlur(true)
                                              .ValidateOnChange(true)
                                              .ListConfig(Html.X().BoundList()
                                                  .LoadingText("Searching...")
                                                  .ItemTpl(Html.X().XTemplate()
                                                      .Html(@<text>
                                                                <div class="search-item">
                                                                    <h3>{Code}</h3>
                                                                    {Description}
                                                                </div>
                                                             </text>)
                                                  )
                                                  .MinWidth(400)
                                              ),
                                          Html.X().ComboBoxFor(m => m.COGSAccountId).ID("COGSAccountId")
                                              .DisplayField("Code")
                                              .ValueField("Id")
                                              .FieldStyle("text-transform: uppercase;")
                                              .TypeAhead(true)
                                              .MinChars(0)
                                              .PageSize(10)
                                              .SelectOnTab(true)
                                              .ForceSelection(true)
                                              .ValidateOnBlur(true)
                                              .ValidateOnChange(true)
                                              .ListConfig(Html.X().BoundList()
                                                  .LoadingText("Searching...")
                                                  .ItemTpl(Html.X().XTemplate()
                                                      .Html(@<text>
                                                                <div class="search-item">
                                                                    <h3>{Code}</h3>
                                                                    {Description}
                                                                </div>
                                                             </text>)
                                                  )
                                                  .MinWidth(400)
                                              ),
                                          Html.X().ComboBoxFor(m => m.COGSDiffAccountId).ID("COGSDiffAccountId")
                                              .DisplayField("Code")
                                              .ValueField("Id")
                                              .FieldStyle("text-transform: uppercase;")
                                              .TypeAhead(true)
                                              .MinChars(0)
                                              .PageSize(10)
                                              .SelectOnTab(true)
                                              .ForceSelection(true)
                                              .ValidateOnBlur(true)
                                              .ValidateOnChange(true)
                                              .ListConfig(Html.X().BoundList()
                                                  .LoadingText("Searching...")
                                                  .ItemTpl(Html.X().XTemplate()
                                                      .Html(@<text>
                                                                <div class="search-item">
                                                                    <h3>{Code}</h3>
                                                                    {Description}
                                                                </div>
                                                             </text>)
                                                  )
                                                  .MinWidth(400)
                                              ),
                                          Html.X().ComboBoxFor(m => m.WIPAccountId).ID("WIPAccountId")
                                              .DisplayField("Code")
                                              .ValueField("Id")
                                              .FieldStyle("text-transform: uppercase;")
                                              .TypeAhead(true)
                                              .MinChars(0)
                                              .PageSize(10)
                                              .SelectOnTab(true)
                                              .ForceSelection(true)
                                              .ValidateOnBlur(true)
                                              .ValidateOnChange(true)
                                              .ListConfig(Html.X().BoundList()
                                                  .LoadingText("Searching...")
                                                  .ItemTpl(Html.X().XTemplate()
                                                      .Html(@<text>
                                                                <div class="search-item">
                                                                    <h3>{Code}</h3>
                                                                    {Description}
                                                                </div>
                                                             </text>)
                                                  )
                                                  .MinWidth(400)
                                             )
                                    )
                        )
                    )
              )
              .Buttons(
                  Html.X().Button()
                      .ID("btnSave")
                      .Text("Save")
                      .Icon(Icon.Disk)
                      .DirectEvents(de =>
                      {
                          de.Click.Url = Url.Action("_Maintenance");
                          de.Click.Method = HttpMethod.POST;
                          de.Click.Before = "return this.up('form').isValid();";
                          de.Click.Success = "this.up('window').close();";
                          de.Click.Failure = "Ext.Msg.notify('Error', result.errorMessage);";
                          de.Click.ShowWarningOnFailure = true;
                          de.Click.EventMask.ShowMask = true;
                          de.Click.FormID = "FormItemMaintenance";
                      }),
                  Html.X().Button()
                      .ID("btnCancel")
                      .Text("Cancel")
                      .Icon(Icon.Cancel)
                      .Listeners(ls =>
                      {
                          ls.Click.Handler = "this.up('window').close();";
                      })
              )
      ))
