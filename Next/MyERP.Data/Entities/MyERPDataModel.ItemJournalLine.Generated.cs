//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 04/21/2021 10:23:24 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace MyERP.DataAccess
{
    public partial class ItemJournalLine : INotifyPropertyChanging, INotifyPropertyChanged
    {

        public ItemJournalLine()
        {
            OnCreated();
        }

        #region Properties

        [Key]
        [Required()]
        public virtual long Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    this.OnIdChanging(value);
                    OnPropertyChanging("Id");
                    _Id = value;
                    this.OnIdChanged();
                    OnPropertyChanged("Id");
                }
            }
        }
        private long _Id;

        [Required()]
        public virtual long ItemJournalHeaderId
        {
            get
            {
                return _ItemJournalHeaderId;
            }
            set
            {
                if (_ItemJournalHeaderId != value)
                {
                    this.OnItemJournalHeaderIdChanging(value);
                    OnPropertyChanging("ItemJournalHeaderId");
                    _ItemJournalHeaderId = value;
                    this.OnItemJournalHeaderIdChanged();
                    OnPropertyChanged("ItemJournalHeaderId");
                }
            }
        }
        private long _ItemJournalHeaderId;

        #endregion

        #region Navigation Properties

        public virtual ItemJournalHeader ItemJournalHeader
        {
            get
            {
                return _ItemJournalHeader;
            }
            set
            {
                if (_ItemJournalHeader != value)
                {
                    this.OnItemJournalHeaderChanging(value);
                    OnPropertyChanging("ItemJournalHeader");
                    _ItemJournalHeader = value;
                    this.OnItemJournalHeaderChanged();
                    OnPropertyChanged("ItemJournalHeader");
                }
            }
        }
        private ItemJournalHeader _ItemJournalHeader;

        #endregion

        #region Extensibility Method Definitions

        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnItemJournalHeaderIdChanging(long value);
        partial void OnItemJournalHeaderIdChanged();
        partial void OnItemJournalHeaderChanging(ItemJournalHeader value);
        partial void OnItemJournalHeaderChanged();

        #endregion

        #region INotifyPropertyChanging Members

        public event PropertyChangingEventHandler PropertyChanging;

        protected void OnPropertyChanging(string propertyName) {

          if (PropertyChanging != null)
            PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
