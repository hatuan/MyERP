//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 04/21/2021 10:23:24 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace MyERP.DataAccess
{
    public partial class EInvFormType : INotifyPropertyChanging, INotifyPropertyChanged
    {

        public EInvFormType()
        {
            OnCreated();
        }

        #region Properties

        [Key]
        [Required()]
        public virtual long Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    this.OnIdChanging(value);
                    OnPropertyChanging("Id");
                    _Id = value;
                    this.OnIdChanged();
                    OnPropertyChanged("Id");
                }
            }
        }
        private long _Id;

        [StringLength(100)]
        [Required()]
        public virtual string InvoiceName
        {
            get
            {
                return _InvoiceName;
            }
            set
            {
                if (_InvoiceName != value)
                {
                    this.OnInvoiceNameChanging(value);
                    OnPropertyChanging("InvoiceName");
                    _InvoiceName = value;
                    this.OnInvoiceNameChanged();
                    OnPropertyChanged("InvoiceName");
                }
            }
        }
        private string _InvoiceName;

        [StringLength(6)]
        [Required()]
        public virtual string InvoiceType
        {
            get
            {
                return _InvoiceType;
            }
            set
            {
                if (_InvoiceType != value)
                {
                    this.OnInvoiceTypeChanging(value);
                    OnPropertyChanging("InvoiceType");
                    _InvoiceType = value;
                    this.OnInvoiceTypeChanged();
                    OnPropertyChanged("InvoiceType");
                }
            }
        }
        private string _InvoiceType;

        [StringLength(3)]
        [Required()]
        public virtual string InvoiceTypeNo
        {
            get
            {
                return _InvoiceTypeNo;
            }
            set
            {
                if (_InvoiceTypeNo != value)
                {
                    this.OnInvoiceTypeNoChanging(value);
                    OnPropertyChanging("InvoiceTypeNo");
                    _InvoiceTypeNo = value;
                    this.OnInvoiceTypeNoChanged();
                    OnPropertyChanged("InvoiceTypeNo");
                }
            }
        }
        private string _InvoiceTypeNo;

        [StringLength(11)]
        [Required()]
        public virtual string TemplateCode
        {
            get
            {
                return _TemplateCode;
            }
            set
            {
                if (_TemplateCode != value)
                {
                    this.OnTemplateCodeChanging(value);
                    OnPropertyChanging("TemplateCode");
                    _TemplateCode = value;
                    this.OnTemplateCodeChanged();
                    OnPropertyChanged("TemplateCode");
                }
            }
        }
        private string _TemplateCode;

        [StringLength(32)]
        [Required()]
        public virtual string InvoiceForm
        {
            get
            {
                return _InvoiceForm;
            }
            set
            {
                if (_InvoiceForm != value)
                {
                    this.OnInvoiceFormChanging(value);
                    OnPropertyChanging("InvoiceForm");
                    _InvoiceForm = value;
                    this.OnInvoiceFormChanged();
                    OnPropertyChanged("InvoiceForm");
                }
            }
        }
        private string _InvoiceForm;

        [StringLength(6)]
        [Required()]
        public virtual string InvoiceSeries
        {
            get
            {
                return _InvoiceSeries;
            }
            set
            {
                if (_InvoiceSeries != value)
                {
                    this.OnInvoiceSeriesChanging(value);
                    OnPropertyChanging("InvoiceSeries");
                    _InvoiceSeries = value;
                    this.OnInvoiceSeriesChanged();
                    OnPropertyChanged("InvoiceSeries");
                }
            }
        }
        private string _InvoiceSeries;

        [StringLength(32)]
        [Required()]
        public virtual string FormFileName
        {
            get
            {
                return _FormFileName;
            }
            set
            {
                if (_FormFileName != value)
                {
                    this.OnFormFileNameChanging(value);
                    OnPropertyChanging("FormFileName");
                    _FormFileName = value;
                    this.OnFormFileNameChanged();
                    OnPropertyChanged("FormFileName");
                }
            }
        }
        private string _FormFileName;

        [Required()]
        public virtual string FormFile
        {
            get
            {
                return _FormFile;
            }
            set
            {
                if (_FormFile != value)
                {
                    this.OnFormFileChanging(value);
                    OnPropertyChanging("FormFile");
                    _FormFile = value;
                    this.OnFormFileChanged();
                    OnPropertyChanged("FormFile");
                }
            }
        }
        private string _FormFile;

        [StringLength(255)]
        [Required()]
        public virtual string SellerLegalName
        {
            get
            {
                return _SellerLegalName;
            }
            set
            {
                if (_SellerLegalName != value)
                {
                    this.OnSellerLegalNameChanging(value);
                    OnPropertyChanging("SellerLegalName");
                    _SellerLegalName = value;
                    this.OnSellerLegalNameChanged();
                    OnPropertyChanged("SellerLegalName");
                }
            }
        }
        private string _SellerLegalName;

        [StringLength(14)]
        [Required()]
        public virtual string SellerTaxCode
        {
            get
            {
                return _SellerTaxCode;
            }
            set
            {
                if (_SellerTaxCode != value)
                {
                    this.OnSellerTaxCodeChanging(value);
                    OnPropertyChanging("SellerTaxCode");
                    _SellerTaxCode = value;
                    this.OnSellerTaxCodeChanged();
                    OnPropertyChanged("SellerTaxCode");
                }
            }
        }
        private string _SellerTaxCode;

        [StringLength(255)]
        [Required()]
        public virtual string SellerAddressLine
        {
            get
            {
                return _SellerAddressLine;
            }
            set
            {
                if (_SellerAddressLine != value)
                {
                    this.OnSellerAddressLineChanging(value);
                    OnPropertyChanging("SellerAddressLine");
                    _SellerAddressLine = value;
                    this.OnSellerAddressLineChanged();
                    OnPropertyChanged("SellerAddressLine");
                }
            }
        }
        private string _SellerAddressLine;

        [StringLength(10)]
        public virtual string SellerPostalCode
        {
            get
            {
                return _SellerPostalCode;
            }
            set
            {
                if (_SellerPostalCode != value)
                {
                    this.OnSellerPostalCodeChanging(value);
                    OnPropertyChanging("SellerPostalCode");
                    _SellerPostalCode = value;
                    this.OnSellerPostalCodeChanged();
                    OnPropertyChanged("SellerPostalCode");
                }
            }
        }
        private string _SellerPostalCode;

        [StringLength(50)]
        public virtual string SellerDistrictName
        {
            get
            {
                return _SellerDistrictName;
            }
            set
            {
                if (_SellerDistrictName != value)
                {
                    this.OnSellerDistrictNameChanging(value);
                    OnPropertyChanging("SellerDistrictName");
                    _SellerDistrictName = value;
                    this.OnSellerDistrictNameChanged();
                    OnPropertyChanged("SellerDistrictName");
                }
            }
        }
        private string _SellerDistrictName;

        [StringLength(50)]
        public virtual string SellerCityName
        {
            get
            {
                return _SellerCityName;
            }
            set
            {
                if (_SellerCityName != value)
                {
                    this.OnSellerCityNameChanging(value);
                    OnPropertyChanging("SellerCityName");
                    _SellerCityName = value;
                    this.OnSellerCityNameChanged();
                    OnPropertyChanged("SellerCityName");
                }
            }
        }
        private string _SellerCityName;

        [StringLength(2)]
        public virtual string SellerCountryCode
        {
            get
            {
                return _SellerCountryCode;
            }
            set
            {
                if (_SellerCountryCode != value)
                {
                    this.OnSellerCountryCodeChanging(value);
                    OnPropertyChanging("SellerCountryCode");
                    _SellerCountryCode = value;
                    this.OnSellerCountryCodeChanged();
                    OnPropertyChanged("SellerCountryCode");
                }
            }
        }
        private string _SellerCountryCode;

        [StringLength(20)]
        public virtual string SellerPhoneNumber
        {
            get
            {
                return _SellerPhoneNumber;
            }
            set
            {
                if (_SellerPhoneNumber != value)
                {
                    this.OnSellerPhoneNumberChanging(value);
                    OnPropertyChanging("SellerPhoneNumber");
                    _SellerPhoneNumber = value;
                    this.OnSellerPhoneNumberChanged();
                    OnPropertyChanged("SellerPhoneNumber");
                }
            }
        }
        private string _SellerPhoneNumber;

        [StringLength(20)]
        public virtual string SellerFaxNumber
        {
            get
            {
                return _SellerFaxNumber;
            }
            set
            {
                if (_SellerFaxNumber != value)
                {
                    this.OnSellerFaxNumberChanging(value);
                    OnPropertyChanging("SellerFaxNumber");
                    _SellerFaxNumber = value;
                    this.OnSellerFaxNumberChanged();
                    OnPropertyChanged("SellerFaxNumber");
                }
            }
        }
        private string _SellerFaxNumber;

        [StringLength(50)]
        public virtual string SellerEmail
        {
            get
            {
                return _SellerEmail;
            }
            set
            {
                if (_SellerEmail != value)
                {
                    this.OnSellerEmailChanging(value);
                    OnPropertyChanging("SellerEmail");
                    _SellerEmail = value;
                    this.OnSellerEmailChanged();
                    OnPropertyChanged("SellerEmail");
                }
            }
        }
        private string _SellerEmail;

        [StringLength(100)]
        public virtual string SellerBankName
        {
            get
            {
                return _SellerBankName;
            }
            set
            {
                if (_SellerBankName != value)
                {
                    this.OnSellerBankNameChanging(value);
                    OnPropertyChanging("SellerBankName");
                    _SellerBankName = value;
                    this.OnSellerBankNameChanged();
                    OnPropertyChanged("SellerBankName");
                }
            }
        }
        private string _SellerBankName;

        [StringLength(20)]
        public virtual string SellerBankAccount
        {
            get
            {
                return _SellerBankAccount;
            }
            set
            {
                if (_SellerBankAccount != value)
                {
                    this.OnSellerBankAccountChanging(value);
                    OnPropertyChanging("SellerBankAccount");
                    _SellerBankAccount = value;
                    this.OnSellerBankAccountChanged();
                    OnPropertyChanged("SellerBankAccount");
                }
            }
        }
        private string _SellerBankAccount;

        [StringLength(100)]
        public virtual string SellerContactPersonName
        {
            get
            {
                return _SellerContactPersonName;
            }
            set
            {
                if (_SellerContactPersonName != value)
                {
                    this.OnSellerContactPersonNameChanging(value);
                    OnPropertyChanging("SellerContactPersonName");
                    _SellerContactPersonName = value;
                    this.OnSellerContactPersonNameChanged();
                    OnPropertyChanged("SellerContactPersonName");
                }
            }
        }
        private string _SellerContactPersonName;

        [StringLength(100)]
        public virtual string SellerSignedPersonName
        {
            get
            {
                return _SellerSignedPersonName;
            }
            set
            {
                if (_SellerSignedPersonName != value)
                {
                    this.OnSellerSignedPersonNameChanging(value);
                    OnPropertyChanging("SellerSignedPersonName");
                    _SellerSignedPersonName = value;
                    this.OnSellerSignedPersonNameChanged();
                    OnPropertyChanged("SellerSignedPersonName");
                }
            }
        }
        private string _SellerSignedPersonName;

        [StringLength(100)]
        public virtual string SellerSubmittedPersonName
        {
            get
            {
                return _SellerSubmittedPersonName;
            }
            set
            {
                if (_SellerSubmittedPersonName != value)
                {
                    this.OnSellerSubmittedPersonNameChanging(value);
                    OnPropertyChanging("SellerSubmittedPersonName");
                    _SellerSubmittedPersonName = value;
                    this.OnSellerSubmittedPersonNameChanged();
                    OnPropertyChanged("SellerSubmittedPersonName");
                }
            }
        }
        private string _SellerSubmittedPersonName;

        public virtual string Logo
        {
            get
            {
                return _Logo;
            }
            set
            {
                if (_Logo != value)
                {
                    this.OnLogoChanging(value);
                    OnPropertyChanging("Logo");
                    _Logo = value;
                    this.OnLogoChanged();
                    OnPropertyChanged("Logo");
                }
            }
        }
        private string _Logo;

        public virtual string Watermark
        {
            get
            {
                return _Watermark;
            }
            set
            {
                if (_Watermark != value)
                {
                    this.OnWatermarkChanging(value);
                    OnPropertyChanging("Watermark");
                    _Watermark = value;
                    this.OnWatermarkChanged();
                    OnPropertyChanged("Watermark");
                }
            }
        }
        private string _Watermark;

        [Required()]
        public virtual long ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                if (_ClientId != value)
                {
                    this.OnClientIdChanging(value);
                    OnPropertyChanging("ClientId");
                    _ClientId = value;
                    this.OnClientIdChanged();
                    OnPropertyChanged("ClientId");
                }
            }
        }
        private long _ClientId;

        public virtual long? OrganizationId
        {
            get
            {
                return _OrganizationId;
            }
            set
            {
                if (_OrganizationId != value)
                {
                    this.OnOrganizationIdChanging(value);
                    OnPropertyChanging("OrganizationId");
                    _OrganizationId = value;
                    this.OnOrganizationIdChanged();
                    OnPropertyChanged("OrganizationId");
                }
            }
        }
        private long? _OrganizationId;

        [Required()]
        public virtual long Version
        {
            get
            {
                return _Version;
            }
            set
            {
                if (_Version != value)
                {
                    this.OnVersionChanging(value);
                    OnPropertyChanging("Version");
                    _Version = value;
                    this.OnVersionChanged();
                    OnPropertyChanged("Version");
                }
            }
        }
        private long _Version;

        [Required()]
        public virtual MyERP.DataAccess.Enum.DefaultMasterStatusType Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    this.OnStatusChanging(value);
                    OnPropertyChanging("Status");
                    _Status = value;
                    this.OnStatusChanged();
                    OnPropertyChanged("Status");
                }
            }
        }
        private MyERP.DataAccess.Enum.DefaultMasterStatusType _Status;

        [Required()]
        public virtual global::System.DateTime RecCreatedAt
        {
            get
            {
                return _RecCreatedAt;
            }
            set
            {
                if (_RecCreatedAt != value)
                {
                    this.OnRecCreatedAtChanging(value);
                    OnPropertyChanging("RecCreatedAt");
                    _RecCreatedAt = value;
                    this.OnRecCreatedAtChanged();
                    OnPropertyChanged("RecCreatedAt");
                }
            }
        }
        private global::System.DateTime _RecCreatedAt;

        [Required()]
        public virtual long RecCreatedBy
        {
            get
            {
                return _RecCreatedBy;
            }
            set
            {
                if (_RecCreatedBy != value)
                {
                    this.OnRecCreatedByChanging(value);
                    OnPropertyChanging("RecCreatedBy");
                    _RecCreatedBy = value;
                    this.OnRecCreatedByChanged();
                    OnPropertyChanged("RecCreatedBy");
                }
            }
        }
        private long _RecCreatedBy;

        [Required()]
        public virtual global::System.DateTime RecModifiedAt
        {
            get
            {
                return _RecModifiedAt;
            }
            set
            {
                if (_RecModifiedAt != value)
                {
                    this.OnRecModifiedAtChanging(value);
                    OnPropertyChanging("RecModifiedAt");
                    _RecModifiedAt = value;
                    this.OnRecModifiedAtChanged();
                    OnPropertyChanged("RecModifiedAt");
                }
            }
        }
        private global::System.DateTime _RecModifiedAt;

        [Required()]
        public virtual long RecModifiedBy
        {
            get
            {
                return _RecModifiedBy;
            }
            set
            {
                if (_RecModifiedBy != value)
                {
                    this.OnRecModifiedByChanging(value);
                    OnPropertyChanging("RecModifiedBy");
                    _RecModifiedBy = value;
                    this.OnRecModifiedByChanged();
                    OnPropertyChanged("RecModifiedBy");
                }
            }
        }
        private long _RecModifiedBy;

        #endregion

        #region Navigation Properties

        public virtual ICollection<EInvFormRelease> EInvFormReleases { get; set; }
        public virtual Client Client
        {
            get
            {
                return _Client;
            }
            set
            {
                if (_Client != value)
                {
                    this.OnClientChanging(value);
                    OnPropertyChanging("Client");
                    _Client = value;
                    this.OnClientChanged();
                    OnPropertyChanged("Client");
                }
            }
        }
        private Client _Client;
        public virtual Organization Organization
        {
            get
            {
                return _Organization;
            }
            set
            {
                if (_Organization != value)
                {
                    this.OnOrganizationChanging(value);
                    OnPropertyChanging("Organization");
                    _Organization = value;
                    this.OnOrganizationChanged();
                    OnPropertyChanged("Organization");
                }
            }
        }
        private Organization _Organization;
        public virtual User RecCreatedByUser
        {
            get
            {
                return _RecCreatedByUser;
            }
            set
            {
                if (_RecCreatedByUser != value)
                {
                    this.OnRecCreatedByUserChanging(value);
                    OnPropertyChanging("RecCreatedByUser");
                    _RecCreatedByUser = value;
                    this.OnRecCreatedByUserChanged();
                    OnPropertyChanged("RecCreatedByUser");
                }
            }
        }
        private User _RecCreatedByUser;
        public virtual User RecModifiedByUser
        {
            get
            {
                return _RecModifiedByUser;
            }
            set
            {
                if (_RecModifiedByUser != value)
                {
                    this.OnRecModifiedByUserChanging(value);
                    OnPropertyChanging("RecModifiedByUser");
                    _RecModifiedByUser = value;
                    this.OnRecModifiedByUserChanged();
                    OnPropertyChanged("RecModifiedByUser");
                }
            }
        }
        private User _RecModifiedByUser;

        #endregion

        #region Extensibility Method Definitions

        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnInvoiceNameChanging(string value);
        partial void OnInvoiceNameChanged();
        partial void OnInvoiceTypeChanging(string value);
        partial void OnInvoiceTypeChanged();
        partial void OnInvoiceTypeNoChanging(string value);
        partial void OnInvoiceTypeNoChanged();
        partial void OnTemplateCodeChanging(string value);
        partial void OnTemplateCodeChanged();
        partial void OnInvoiceFormChanging(string value);
        partial void OnInvoiceFormChanged();
        partial void OnInvoiceSeriesChanging(string value);
        partial void OnInvoiceSeriesChanged();
        partial void OnFormFileNameChanging(string value);
        partial void OnFormFileNameChanged();
        partial void OnFormFileChanging(string value);
        partial void OnFormFileChanged();
        partial void OnSellerLegalNameChanging(string value);
        partial void OnSellerLegalNameChanged();
        partial void OnSellerTaxCodeChanging(string value);
        partial void OnSellerTaxCodeChanged();
        partial void OnSellerAddressLineChanging(string value);
        partial void OnSellerAddressLineChanged();
        partial void OnSellerPostalCodeChanging(string value);
        partial void OnSellerPostalCodeChanged();
        partial void OnSellerDistrictNameChanging(string value);
        partial void OnSellerDistrictNameChanged();
        partial void OnSellerCityNameChanging(string value);
        partial void OnSellerCityNameChanged();
        partial void OnSellerCountryCodeChanging(string value);
        partial void OnSellerCountryCodeChanged();
        partial void OnSellerPhoneNumberChanging(string value);
        partial void OnSellerPhoneNumberChanged();
        partial void OnSellerFaxNumberChanging(string value);
        partial void OnSellerFaxNumberChanged();
        partial void OnSellerEmailChanging(string value);
        partial void OnSellerEmailChanged();
        partial void OnSellerBankNameChanging(string value);
        partial void OnSellerBankNameChanged();
        partial void OnSellerBankAccountChanging(string value);
        partial void OnSellerBankAccountChanged();
        partial void OnSellerContactPersonNameChanging(string value);
        partial void OnSellerContactPersonNameChanged();
        partial void OnSellerSignedPersonNameChanging(string value);
        partial void OnSellerSignedPersonNameChanged();
        partial void OnSellerSubmittedPersonNameChanging(string value);
        partial void OnSellerSubmittedPersonNameChanged();
        partial void OnLogoChanging(string value);
        partial void OnLogoChanged();
        partial void OnWatermarkChanging(string value);
        partial void OnWatermarkChanged();
        partial void OnClientIdChanging(long value);
        partial void OnClientIdChanged();
        partial void OnOrganizationIdChanging(long? value);
        partial void OnOrganizationIdChanged();
        partial void OnVersionChanging(long value);
        partial void OnVersionChanged();
        partial void OnStatusChanging(MyERP.DataAccess.Enum.DefaultMasterStatusType value);
        partial void OnStatusChanged();
        partial void OnRecCreatedAtChanging(global::System.DateTime value);
        partial void OnRecCreatedAtChanged();
        partial void OnRecCreatedByChanging(long value);
        partial void OnRecCreatedByChanged();
        partial void OnRecModifiedAtChanging(global::System.DateTime value);
        partial void OnRecModifiedAtChanged();
        partial void OnRecModifiedByChanging(long value);
        partial void OnRecModifiedByChanged();
        partial void OnClientChanging(Client value);
        partial void OnClientChanged();
        partial void OnOrganizationChanging(Organization value);
        partial void OnOrganizationChanged();
        partial void OnRecCreatedByUserChanging(User value);
        partial void OnRecCreatedByUserChanged();
        partial void OnRecModifiedByUserChanging(User value);
        partial void OnRecModifiedByUserChanged();

        #endregion

        #region INotifyPropertyChanging Members

        public event PropertyChangingEventHandler PropertyChanging;

        protected void OnPropertyChanging(string propertyName) {

          if (PropertyChanging != null)
            PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
