//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 04/21/2021 10:23:24 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace MyERP.DataAccess
{
    public partial class GeneralJournalLine : INotifyPropertyChanging, INotifyPropertyChanged
    {

        public GeneralJournalLine()
        {
            OnCreated();
        }

        #region Properties

        [Key]
        [Required()]
        public virtual long Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    this.OnIdChanging(value);
                    OnPropertyChanging("Id");
                    _Id = value;
                    this.OnIdChanged();
                    OnPropertyChanged("Id");
                }
            }
        }
        private long _Id;

        [Required()]
        public virtual long GeneralJournalHeaderId
        {
            get
            {
                return _GeneralJournalHeaderId;
            }
            set
            {
                if (_GeneralJournalHeaderId != value)
                {
                    this.OnGeneralJournalHeaderIdChanging(value);
                    OnPropertyChanging("GeneralJournalHeaderId");
                    _GeneralJournalHeaderId = value;
                    this.OnGeneralJournalHeaderIdChanged();
                    OnPropertyChanged("GeneralJournalHeaderId");
                }
            }
        }
        private long _GeneralJournalHeaderId;

        [Required()]
        public virtual byte DocumentType
        {
            get
            {
                return _DocumentType;
            }
            set
            {
                if (_DocumentType != value)
                {
                    this.OnDocumentTypeChanging(value);
                    OnPropertyChanging("DocumentType");
                    _DocumentType = value;
                    this.OnDocumentTypeChanged();
                    OnPropertyChanged("DocumentType");
                }
            }
        }
        private byte _DocumentType;

        [StringLength(32)]
        [Required()]
        public virtual string DocumentNo
        {
            get
            {
                return _DocumentNo;
            }
            set
            {
                if (_DocumentNo != value)
                {
                    this.OnDocumentNoChanging(value);
                    OnPropertyChanging("DocumentNo");
                    _DocumentNo = value;
                    this.OnDocumentNoChanged();
                    OnPropertyChanged("DocumentNo");
                }
            }
        }
        private string _DocumentNo;

        public virtual global::System.DateTime? PostingDate
        {
            get
            {
                return _PostingDate;
            }
            set
            {
                if (_PostingDate != value)
                {
                    this.OnPostingDateChanging(value);
                    OnPropertyChanging("PostingDate");
                    _PostingDate = value;
                    this.OnPostingDateChanged();
                    OnPropertyChanged("PostingDate");
                }
            }
        }
        private global::System.DateTime? _PostingDate;

        [Required()]
        public virtual long LineNo
        {
            get
            {
                return _LineNo;
            }
            set
            {
                if (_LineNo != value)
                {
                    this.OnLineNoChanging(value);
                    OnPropertyChanging("LineNo");
                    _LineNo = value;
                    this.OnLineNoChanged();
                    OnPropertyChanged("LineNo");
                }
            }
        }
        private long _LineNo;

        [Required()]
        public virtual long AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                if (_AccountId != value)
                {
                    this.OnAccountIdChanging(value);
                    OnPropertyChanging("AccountId");
                    _AccountId = value;
                    this.OnAccountIdChanged();
                    OnPropertyChanged("AccountId");
                }
            }
        }
        private long _AccountId;

        [StringLength(256)]
        [Required()]
        public virtual string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    this.OnDescriptionChanging(value);
                    OnPropertyChanging("Description");
                    _Description = value;
                    this.OnDescriptionChanged();
                    OnPropertyChanged("Description");
                }
            }
        }
        private string _Description;

        [Required()]
        public virtual decimal DebitAmountLCY
        {
            get
            {
                return _DebitAmountLCY;
            }
            set
            {
                if (_DebitAmountLCY != value)
                {
                    this.OnDebitAmountLCYChanging(value);
                    OnPropertyChanging("DebitAmountLCY");
                    _DebitAmountLCY = value;
                    this.OnDebitAmountLCYChanged();
                    OnPropertyChanged("DebitAmountLCY");
                }
            }
        }
        private decimal _DebitAmountLCY;

        [Required()]
        public virtual decimal DebitAmount
        {
            get
            {
                return _DebitAmount;
            }
            set
            {
                if (_DebitAmount != value)
                {
                    this.OnDebitAmountChanging(value);
                    OnPropertyChanging("DebitAmount");
                    _DebitAmount = value;
                    this.OnDebitAmountChanged();
                    OnPropertyChanged("DebitAmount");
                }
            }
        }
        private decimal _DebitAmount;

        [Required()]
        public virtual decimal CreditAmountLCY
        {
            get
            {
                return _CreditAmountLCY;
            }
            set
            {
                if (_CreditAmountLCY != value)
                {
                    this.OnCreditAmountLCYChanging(value);
                    OnPropertyChanging("CreditAmountLCY");
                    _CreditAmountLCY = value;
                    this.OnCreditAmountLCYChanged();
                    OnPropertyChanged("CreditAmountLCY");
                }
            }
        }
        private decimal _CreditAmountLCY;

        [Required()]
        public virtual decimal CreditAmount
        {
            get
            {
                return _CreditAmount;
            }
            set
            {
                if (_CreditAmount != value)
                {
                    this.OnCreditAmountChanging(value);
                    OnPropertyChanging("CreditAmount");
                    _CreditAmount = value;
                    this.OnCreditAmountChanged();
                    OnPropertyChanged("CreditAmount");
                }
            }
        }
        private decimal _CreditAmount;

        public virtual long? BusinessPartnerId
        {
            get
            {
                return _BusinessPartnerId;
            }
            set
            {
                if (_BusinessPartnerId != value)
                {
                    this.OnBusinessPartnerIdChanging(value);
                    OnPropertyChanging("BusinessPartnerId");
                    _BusinessPartnerId = value;
                    this.OnBusinessPartnerIdChanged();
                    OnPropertyChanged("BusinessPartnerId");
                }
            }
        }
        private long? _BusinessPartnerId;

        public virtual long? JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                if (_JobId != value)
                {
                    this.OnJobIdChanging(value);
                    OnPropertyChanging("JobId");
                    _JobId = value;
                    this.OnJobIdChanged();
                    OnPropertyChanged("JobId");
                }
            }
        }
        private long? _JobId;

        public virtual long? FixAssetId
        {
            get
            {
                return _FixAssetId;
            }
            set
            {
                if (_FixAssetId != value)
                {
                    this.OnFixAssetIdChanging(value);
                    OnPropertyChanging("FixAssetId");
                    _FixAssetId = value;
                    this.OnFixAssetIdChanged();
                    OnPropertyChanged("FixAssetId");
                }
            }
        }
        private long? _FixAssetId;

        [Required()]
        public virtual long OrganizationId
        {
            get
            {
                return _OrganizationId;
            }
            set
            {
                if (_OrganizationId != value)
                {
                    this.OnOrganizationIdChanging(value);
                    OnPropertyChanging("OrganizationId");
                    _OrganizationId = value;
                    this.OnOrganizationIdChanged();
                    OnPropertyChanged("OrganizationId");
                }
            }
        }
        private long _OrganizationId;

        [Required()]
        public virtual long ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                if (_ClientId != value)
                {
                    this.OnClientIdChanging(value);
                    OnPropertyChanging("ClientId");
                    _ClientId = value;
                    this.OnClientIdChanged();
                    OnPropertyChanged("ClientId");
                }
            }
        }
        private long _ClientId;

        [StringLength(3)]
        [Required()]
        public virtual string PostingGroup
        {
            get
            {
                return _PostingGroup;
            }
            set
            {
                if (_PostingGroup != value)
                {
                    this.OnPostingGroupChanging(value);
                    OnPropertyChanging("PostingGroup");
                    _PostingGroup = value;
                    this.OnPostingGroupChanged();
                    OnPropertyChanged("PostingGroup");
                }
            }
        }
        private string _PostingGroup;

        #endregion

        #region Navigation Properties

        public virtual GeneralJournalHeader GeneralJournalHeader
        {
            get
            {
                return _GeneralJournalHeader;
            }
            set
            {
                if (_GeneralJournalHeader != value)
                {
                    this.OnGeneralJournalHeaderChanging(value);
                    OnPropertyChanging("GeneralJournalHeader");
                    _GeneralJournalHeader = value;
                    this.OnGeneralJournalHeaderChanged();
                    OnPropertyChanged("GeneralJournalHeader");
                }
            }
        }
        private GeneralJournalHeader _GeneralJournalHeader;
        public virtual Account Account
        {
            get
            {
                return _Account;
            }
            set
            {
                if (_Account != value)
                {
                    this.OnAccountChanging(value);
                    OnPropertyChanging("Account");
                    _Account = value;
                    this.OnAccountChanged();
                    OnPropertyChanged("Account");
                }
            }
        }
        private Account _Account;
        public virtual BusinessPartner BusinessPartner
        {
            get
            {
                return _BusinessPartner;
            }
            set
            {
                if (_BusinessPartner != value)
                {
                    this.OnBusinessPartnerChanging(value);
                    OnPropertyChanging("BusinessPartner");
                    _BusinessPartner = value;
                    this.OnBusinessPartnerChanged();
                    OnPropertyChanged("BusinessPartner");
                }
            }
        }
        private BusinessPartner _BusinessPartner;
        public virtual Job Job
        {
            get
            {
                return _Job;
            }
            set
            {
                if (_Job != value)
                {
                    this.OnJobChanging(value);
                    OnPropertyChanging("Job");
                    _Job = value;
                    this.OnJobChanged();
                    OnPropertyChanged("Job");
                }
            }
        }
        private Job _Job;

        #endregion

        #region Extensibility Method Definitions

        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnGeneralJournalHeaderIdChanging(long value);
        partial void OnGeneralJournalHeaderIdChanged();
        partial void OnDocumentTypeChanging(byte value);
        partial void OnDocumentTypeChanged();
        partial void OnDocumentNoChanging(string value);
        partial void OnDocumentNoChanged();
        partial void OnPostingDateChanging(global::System.DateTime? value);
        partial void OnPostingDateChanged();
        partial void OnLineNoChanging(long value);
        partial void OnLineNoChanged();
        partial void OnAccountIdChanging(long value);
        partial void OnAccountIdChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnDebitAmountLCYChanging(decimal value);
        partial void OnDebitAmountLCYChanged();
        partial void OnDebitAmountChanging(decimal value);
        partial void OnDebitAmountChanged();
        partial void OnCreditAmountLCYChanging(decimal value);
        partial void OnCreditAmountLCYChanged();
        partial void OnCreditAmountChanging(decimal value);
        partial void OnCreditAmountChanged();
        partial void OnBusinessPartnerIdChanging(long? value);
        partial void OnBusinessPartnerIdChanged();
        partial void OnJobIdChanging(long? value);
        partial void OnJobIdChanged();
        partial void OnFixAssetIdChanging(long? value);
        partial void OnFixAssetIdChanged();
        partial void OnOrganizationIdChanging(long value);
        partial void OnOrganizationIdChanged();
        partial void OnClientIdChanging(long value);
        partial void OnClientIdChanged();
        partial void OnPostingGroupChanging(string value);
        partial void OnPostingGroupChanged();
        partial void OnGeneralJournalHeaderChanging(GeneralJournalHeader value);
        partial void OnGeneralJournalHeaderChanged();
        partial void OnAccountChanging(Account value);
        partial void OnAccountChanged();
        partial void OnBusinessPartnerChanging(BusinessPartner value);
        partial void OnBusinessPartnerChanged();
        partial void OnJobChanging(Job value);
        partial void OnJobChanged();

        #endregion

        #region INotifyPropertyChanging Members

        public event PropertyChangingEventHandler PropertyChanging;

        protected void OnPropertyChanging(string propertyName) {

          if (PropertyChanging != null)
            PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
