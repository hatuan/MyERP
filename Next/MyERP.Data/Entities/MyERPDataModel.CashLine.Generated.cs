//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 04/21/2021 10:23:24 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace MyERP.DataAccess
{
    public partial class CashLine : INotifyPropertyChanging, INotifyPropertyChanged
    {

        public CashLine()
        {
            OnCreated();
        }

        #region Properties

        [Key]
        [Required()]
        public virtual long Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    this.OnIdChanging(value);
                    OnPropertyChanging("Id");
                    _Id = value;
                    this.OnIdChanged();
                    OnPropertyChanged("Id");
                }
            }
        }
        private long _Id;

        [Required()]
        public virtual long CashHeaderId
        {
            get
            {
                return _CashHeaderId;
            }
            set
            {
                if (_CashHeaderId != value)
                {
                    this.OnCashHeaderIdChanging(value);
                    OnPropertyChanging("CashHeaderId");
                    _CashHeaderId = value;
                    this.OnCashHeaderIdChanged();
                    OnPropertyChanged("CashHeaderId");
                }
            }
        }
        private long _CashHeaderId;

        [Required()]
        public virtual long LineNo
        {
            get
            {
                return _LineNo;
            }
            set
            {
                if (_LineNo != value)
                {
                    this.OnLineNoChanging(value);
                    OnPropertyChanging("LineNo");
                    _LineNo = value;
                    this.OnLineNoChanged();
                    OnPropertyChanged("LineNo");
                }
            }
        }
        private long _LineNo;

        [Required()]
        public virtual byte DocumentType
        {
            get
            {
                return _DocumentType;
            }
            set
            {
                if (_DocumentType != value)
                {
                    this.OnDocumentTypeChanging(value);
                    OnPropertyChanging("DocumentType");
                    _DocumentType = value;
                    this.OnDocumentTypeChanged();
                    OnPropertyChanged("DocumentType");
                }
            }
        }
        private byte _DocumentType;

        [StringLength(32)]
        [Required()]
        public virtual string DocumentNo
        {
            get
            {
                return _DocumentNo;
            }
            set
            {
                if (_DocumentNo != value)
                {
                    this.OnDocumentNoChanging(value);
                    OnPropertyChanging("DocumentNo");
                    _DocumentNo = value;
                    this.OnDocumentNoChanged();
                    OnPropertyChanged("DocumentNo");
                }
            }
        }
        private string _DocumentNo;

        [Required()]
        public virtual global::System.DateTime PostingDate
        {
            get
            {
                return _PostingDate;
            }
            set
            {
                if (_PostingDate != value)
                {
                    this.OnPostingDateChanging(value);
                    OnPropertyChanging("PostingDate");
                    _PostingDate = value;
                    this.OnPostingDateChanged();
                    OnPropertyChanged("PostingDate");
                }
            }
        }
        private global::System.DateTime _PostingDate;

        public virtual long? BusinessPartnerId
        {
            get
            {
                return _BusinessPartnerId;
            }
            set
            {
                if (_BusinessPartnerId != value)
                {
                    this.OnBusinessPartnerIdChanging(value);
                    OnPropertyChanging("BusinessPartnerId");
                    _BusinessPartnerId = value;
                    this.OnBusinessPartnerIdChanged();
                    OnPropertyChanged("BusinessPartnerId");
                }
            }
        }
        private long? _BusinessPartnerId;

        /// <summary>
        /// corresponding account
        /// </summary>
        /// <remark>
        /// corresponding account
        /// </remark>
        [Required()]
        public virtual long CorrespAccountId
        {
            get
            {
                return _CorrespAccountId;
            }
            set
            {
                if (_CorrespAccountId != value)
                {
                    this.OnCorrespAccountIdChanging(value);
                    OnPropertyChanging("CorrespAccountId");
                    _CorrespAccountId = value;
                    this.OnCorrespAccountIdChanged();
                    OnPropertyChanged("CorrespAccountId");
                }
            }
        }
        private long _CorrespAccountId;

        [StringLength(256)]
        public virtual string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    this.OnDescriptionChanging(value);
                    OnPropertyChanging("Description");
                    _Description = value;
                    this.OnDescriptionChanged();
                    OnPropertyChanged("Description");
                }
            }
        }
        private string _Description;

        [Required()]
        public virtual decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                if (_Amount != value)
                {
                    this.OnAmountChanging(value);
                    OnPropertyChanging("Amount");
                    _Amount = value;
                    this.OnAmountChanged();
                    OnPropertyChanged("Amount");
                }
            }
        }
        private decimal _Amount;

        [Required()]
        public virtual decimal AmountLCY
        {
            get
            {
                return _AmountLCY;
            }
            set
            {
                if (_AmountLCY != value)
                {
                    this.OnAmountLCYChanging(value);
                    OnPropertyChanging("AmountLCY");
                    _AmountLCY = value;
                    this.OnAmountLCYChanged();
                    OnPropertyChanged("AmountLCY");
                }
            }
        }
        private decimal _AmountLCY;

        public virtual long? JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                if (_JobId != value)
                {
                    this.OnJobIdChanging(value);
                    OnPropertyChanging("JobId");
                    _JobId = value;
                    this.OnJobIdChanged();
                    OnPropertyChanged("JobId");
                }
            }
        }
        private long? _JobId;

        public virtual long? AccountsPayableLedgerId
        {
            get
            {
                return _AccountsPayableLedgerId;
            }
            set
            {
                if (_AccountsPayableLedgerId != value)
                {
                    this.OnAccountsPayableLedgerIdChanging(value);
                    OnPropertyChanging("AccountsPayableLedgerId");
                    _AccountsPayableLedgerId = value;
                    this.OnAccountsPayableLedgerIdChanged();
                    OnPropertyChanged("AccountsPayableLedgerId");
                }
            }
        }
        private long? _AccountsPayableLedgerId;

        public virtual long? AccountsReceivableLedgerId
        {
            get
            {
                return _AccountsReceivableLedgerId;
            }
            set
            {
                if (_AccountsReceivableLedgerId != value)
                {
                    this.OnAccountsReceivableLedgerIdChanging(value);
                    OnPropertyChanging("AccountsReceivableLedgerId");
                    _AccountsReceivableLedgerId = value;
                    this.OnAccountsReceivableLedgerIdChanged();
                    OnPropertyChanged("AccountsReceivableLedgerId");
                }
            }
        }
        private long? _AccountsReceivableLedgerId;

        public virtual decimal? AccountsRPAmountConv
        {
            get
            {
                return _AccountsRPAmountConv;
            }
            set
            {
                if (_AccountsRPAmountConv != value)
                {
                    this.OnAccountsRPAmountConvChanging(value);
                    OnPropertyChanging("AccountsRPAmountConv");
                    _AccountsRPAmountConv = value;
                    this.OnAccountsRPAmountConvChanged();
                    OnPropertyChanged("AccountsRPAmountConv");
                }
            }
        }
        private decimal? _AccountsRPAmountConv;

        [Required()]
        public virtual long OrganizationId
        {
            get
            {
                return _OrganizationId;
            }
            set
            {
                if (_OrganizationId != value)
                {
                    this.OnOrganizationIdChanging(value);
                    OnPropertyChanging("OrganizationId");
                    _OrganizationId = value;
                    this.OnOrganizationIdChanged();
                    OnPropertyChanged("OrganizationId");
                }
            }
        }
        private long _OrganizationId;

        [Required()]
        public virtual long ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                if (_ClientId != value)
                {
                    this.OnClientIdChanging(value);
                    OnPropertyChanging("ClientId");
                    _ClientId = value;
                    this.OnClientIdChanged();
                    OnPropertyChanged("ClientId");
                }
            }
        }
        private long _ClientId;

        #endregion

        #region Navigation Properties

        public virtual CashHeader CashHeader
        {
            get
            {
                return _CashHeader;
            }
            set
            {
                if (_CashHeader != value)
                {
                    this.OnCashHeaderChanging(value);
                    OnPropertyChanging("CashHeader");
                    _CashHeader = value;
                    this.OnCashHeaderChanged();
                    OnPropertyChanged("CashHeader");
                }
            }
        }
        private CashHeader _CashHeader;
        public virtual BusinessPartner BusinessPartner
        {
            get
            {
                return _BusinessPartner;
            }
            set
            {
                if (_BusinessPartner != value)
                {
                    this.OnBusinessPartnerChanging(value);
                    OnPropertyChanging("BusinessPartner");
                    _BusinessPartner = value;
                    this.OnBusinessPartnerChanged();
                    OnPropertyChanged("BusinessPartner");
                }
            }
        }
        private BusinessPartner _BusinessPartner;
        public virtual Account CorrespAccount
        {
            get
            {
                return _CorrespAccount;
            }
            set
            {
                if (_CorrespAccount != value)
                {
                    this.OnCorrespAccountChanging(value);
                    OnPropertyChanging("CorrespAccount");
                    _CorrespAccount = value;
                    this.OnCorrespAccountChanged();
                    OnPropertyChanged("CorrespAccount");
                }
            }
        }
        private Account _CorrespAccount;
        public virtual AccountsReceivableLedger AccountsReceivableLedger
        {
            get
            {
                return _AccountsReceivableLedger;
            }
            set
            {
                if (_AccountsReceivableLedger != value)
                {
                    this.OnAccountsReceivableLedgerChanging(value);
                    OnPropertyChanging("AccountsReceivableLedger");
                    _AccountsReceivableLedger = value;
                    this.OnAccountsReceivableLedgerChanged();
                    OnPropertyChanged("AccountsReceivableLedger");
                }
            }
        }
        private AccountsReceivableLedger _AccountsReceivableLedger;
        public virtual AccountsPayableLedger AccountsPayableLedger
        {
            get
            {
                return _AccountsPayableLedger;
            }
            set
            {
                if (_AccountsPayableLedger != value)
                {
                    this.OnAccountsPayableLedgerChanging(value);
                    OnPropertyChanging("AccountsPayableLedger");
                    _AccountsPayableLedger = value;
                    this.OnAccountsPayableLedgerChanged();
                    OnPropertyChanged("AccountsPayableLedger");
                }
            }
        }
        private AccountsPayableLedger _AccountsPayableLedger;
        public virtual Client Client
        {
            get
            {
                return _Client;
            }
            set
            {
                if (_Client != value)
                {
                    this.OnClientChanging(value);
                    OnPropertyChanging("Client");
                    _Client = value;
                    this.OnClientChanged();
                    OnPropertyChanged("Client");
                }
            }
        }
        private Client _Client;
        public virtual Organization Organization
        {
            get
            {
                return _Organization;
            }
            set
            {
                if (_Organization != value)
                {
                    this.OnOrganizationChanging(value);
                    OnPropertyChanging("Organization");
                    _Organization = value;
                    this.OnOrganizationChanged();
                    OnPropertyChanged("Organization");
                }
            }
        }
        private Organization _Organization;
        public virtual Job Job
        {
            get
            {
                return _Job;
            }
            set
            {
                if (_Job != value)
                {
                    this.OnJobChanging(value);
                    OnPropertyChanging("Job");
                    _Job = value;
                    this.OnJobChanged();
                    OnPropertyChanged("Job");
                }
            }
        }
        private Job _Job;

        #endregion

        #region Extensibility Method Definitions

        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnCashHeaderIdChanging(long value);
        partial void OnCashHeaderIdChanged();
        partial void OnLineNoChanging(long value);
        partial void OnLineNoChanged();
        partial void OnDocumentTypeChanging(byte value);
        partial void OnDocumentTypeChanged();
        partial void OnDocumentNoChanging(string value);
        partial void OnDocumentNoChanged();
        partial void OnPostingDateChanging(global::System.DateTime value);
        partial void OnPostingDateChanged();
        partial void OnBusinessPartnerIdChanging(long? value);
        partial void OnBusinessPartnerIdChanged();
        partial void OnCorrespAccountIdChanging(long value);
        partial void OnCorrespAccountIdChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnAmountChanging(decimal value);
        partial void OnAmountChanged();
        partial void OnAmountLCYChanging(decimal value);
        partial void OnAmountLCYChanged();
        partial void OnJobIdChanging(long? value);
        partial void OnJobIdChanged();
        partial void OnAccountsPayableLedgerIdChanging(long? value);
        partial void OnAccountsPayableLedgerIdChanged();
        partial void OnAccountsReceivableLedgerIdChanging(long? value);
        partial void OnAccountsReceivableLedgerIdChanged();
        partial void OnAccountsRPAmountConvChanging(decimal? value);
        partial void OnAccountsRPAmountConvChanged();
        partial void OnOrganizationIdChanging(long value);
        partial void OnOrganizationIdChanged();
        partial void OnClientIdChanging(long value);
        partial void OnClientIdChanged();
        partial void OnCashHeaderChanging(CashHeader value);
        partial void OnCashHeaderChanged();
        partial void OnBusinessPartnerChanging(BusinessPartner value);
        partial void OnBusinessPartnerChanged();
        partial void OnCorrespAccountChanging(Account value);
        partial void OnCorrespAccountChanged();
        partial void OnAccountsReceivableLedgerChanging(AccountsReceivableLedger value);
        partial void OnAccountsReceivableLedgerChanged();
        partial void OnAccountsPayableLedgerChanging(AccountsPayableLedger value);
        partial void OnAccountsPayableLedgerChanged();
        partial void OnClientChanging(Client value);
        partial void OnClientChanged();
        partial void OnOrganizationChanging(Organization value);
        partial void OnOrganizationChanged();
        partial void OnJobChanging(Job value);
        partial void OnJobChanged();

        #endregion

        #region INotifyPropertyChanging Members

        public event PropertyChangingEventHandler PropertyChanging;

        protected void OnPropertyChanging(string propertyName) {

          if (PropertyChanging != null)
            PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
