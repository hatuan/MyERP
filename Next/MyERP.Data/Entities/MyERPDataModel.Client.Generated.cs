//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 04/21/2021 10:23:24 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace MyERP.DataAccess
{
    public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
    {

        public Client()
        {
            OnCreated();
        }

        #region Properties

        [Key]
        [Required()]
        public virtual long Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    this.OnIdChanging(value);
                    OnPropertyChanging("Id");
                    _Id = value;
                    this.OnIdChanged();
                    OnPropertyChanged("Id");
                }
            }
        }
        private long _Id;

        /// <summary>
        /// Use to lookup ClientId when access from outsite like api ...
        /// </summary>
        [StringLength(36)]
        [Required()]
        public virtual string UUID
        {
            get
            {
                return _UUID;
            }
            set
            {
                if (_UUID != value)
                {
                    this.OnUUIDChanging(value);
                    OnPropertyChanging("UUID");
                    _UUID = value;
                    this.OnUUIDChanged();
                    OnPropertyChanged("UUID");
                }
            }
        }
        private string _UUID;

        [StringLength(256)]
        public virtual string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    this.OnDescriptionChanging(value);
                    OnPropertyChanging("Description");
                    _Description = value;
                    this.OnDescriptionChanged();
                    OnPropertyChanged("Description");
                }
            }
        }
        private string _Description;

        [Required()]
        public virtual bool IsActivated
        {
            get
            {
                return _IsActivated;
            }
            set
            {
                if (_IsActivated != value)
                {
                    this.OnIsActivatedChanging(value);
                    OnPropertyChanging("IsActivated");
                    _IsActivated = value;
                    this.OnIsActivatedChanged();
                    OnPropertyChanged("IsActivated");
                }
            }
        }
        private bool _IsActivated;

        [StringLength(8)]
        public virtual string CultureId
        {
            get
            {
                return _CultureId;
            }
            set
            {
                if (_CultureId != value)
                {
                    this.OnCultureIdChanging(value);
                    OnPropertyChanging("CultureId");
                    _CultureId = value;
                    this.OnCultureIdChanged();
                    OnPropertyChanged("CultureId");
                }
            }
        }
        private string _CultureId;

        [Required()]
        public virtual short AmountDecimalPlaces
        {
            get
            {
                return _AmountDecimalPlaces;
            }
            set
            {
                if (_AmountDecimalPlaces != value)
                {
                    this.OnAmountDecimalPlacesChanging(value);
                    OnPropertyChanging("AmountDecimalPlaces");
                    _AmountDecimalPlaces = value;
                    this.OnAmountDecimalPlacesChanged();
                    OnPropertyChanged("AmountDecimalPlaces");
                }
            }
        }
        private short _AmountDecimalPlaces;

        [Required()]
        public virtual decimal AmountRoundingPrecision
        {
            get
            {
                return _AmountRoundingPrecision;
            }
            set
            {
                if (_AmountRoundingPrecision != value)
                {
                    this.OnAmountRoundingPrecisionChanging(value);
                    OnPropertyChanging("AmountRoundingPrecision");
                    _AmountRoundingPrecision = value;
                    this.OnAmountRoundingPrecisionChanged();
                    OnPropertyChanged("AmountRoundingPrecision");
                }
            }
        }
        private decimal _AmountRoundingPrecision;

        [Required()]
        public virtual short UnitAmountDecimalPlaces
        {
            get
            {
                return _UnitAmountDecimalPlaces;
            }
            set
            {
                if (_UnitAmountDecimalPlaces != value)
                {
                    this.OnUnitAmountDecimalPlacesChanging(value);
                    OnPropertyChanging("UnitAmountDecimalPlaces");
                    _UnitAmountDecimalPlaces = value;
                    this.OnUnitAmountDecimalPlacesChanged();
                    OnPropertyChanged("UnitAmountDecimalPlaces");
                }
            }
        }
        private short _UnitAmountDecimalPlaces;

        [Required()]
        public virtual decimal UnitAmountRoundingPrecision
        {
            get
            {
                return _UnitAmountRoundingPrecision;
            }
            set
            {
                if (_UnitAmountRoundingPrecision != value)
                {
                    this.OnUnitAmountRoundingPrecisionChanging(value);
                    OnPropertyChanging("UnitAmountRoundingPrecision");
                    _UnitAmountRoundingPrecision = value;
                    this.OnUnitAmountRoundingPrecisionChanged();
                    OnPropertyChanged("UnitAmountRoundingPrecision");
                }
            }
        }
        private decimal _UnitAmountRoundingPrecision;

        public virtual long? CurrencyLcyId
        {
            get
            {
                return _CurrencyLcyId;
            }
            set
            {
                if (_CurrencyLcyId != value)
                {
                    this.OnCurrencyLcyIdChanging(value);
                    OnPropertyChanging("CurrencyLcyId");
                    _CurrencyLcyId = value;
                    this.OnCurrencyLcyIdChanged();
                    OnPropertyChanged("CurrencyLcyId");
                }
            }
        }
        private long? _CurrencyLcyId;

        [StringLength(14)]
        public virtual string TaxCode
        {
            get
            {
                return _TaxCode;
            }
            set
            {
                if (_TaxCode != value)
                {
                    this.OnTaxCodeChanging(value);
                    OnPropertyChanging("TaxCode");
                    _TaxCode = value;
                    this.OnTaxCodeChanged();
                    OnPropertyChanged("TaxCode");
                }
            }
        }
        private string _TaxCode;

        [StringLength(256)]
        public virtual string Address
        {
            get
            {
                return _Address;
            }
            set
            {
                if (_Address != value)
                {
                    this.OnAddressChanging(value);
                    OnPropertyChanging("Address");
                    _Address = value;
                    this.OnAddressChanged();
                    OnPropertyChanged("Address");
                }
            }
        }
        private string _Address;

        [StringLength(256)]
        public virtual string AddressTransition
        {
            get
            {
                return _AddressTransition;
            }
            set
            {
                if (_AddressTransition != value)
                {
                    this.OnAddressTransitionChanging(value);
                    OnPropertyChanging("AddressTransition");
                    _AddressTransition = value;
                    this.OnAddressTransitionChanged();
                    OnPropertyChanged("AddressTransition");
                }
            }
        }
        private string _AddressTransition;

        [StringLength(32)]
        public virtual string Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                if (_Telephone != value)
                {
                    this.OnTelephoneChanging(value);
                    OnPropertyChanging("Telephone");
                    _Telephone = value;
                    this.OnTelephoneChanged();
                    OnPropertyChanged("Telephone");
                }
            }
        }
        private string _Telephone;

        [StringLength(32)]
        [Required()]
        public virtual string Email
        {
            get
            {
                return _Email;
            }
            set
            {
                if (_Email != value)
                {
                    this.OnEmailChanging(value);
                    OnPropertyChanging("Email");
                    _Email = value;
                    this.OnEmailChanged();
                    OnPropertyChanged("Email");
                }
            }
        }
        private string _Email;

        [StringLength(32)]
        public virtual string Website
        {
            get
            {
                return _Website;
            }
            set
            {
                if (_Website != value)
                {
                    this.OnWebsiteChanging(value);
                    OnPropertyChanging("Website");
                    _Website = value;
                    this.OnWebsiteChanged();
                    OnPropertyChanged("Website");
                }
            }
        }
        private string _Website;

        public virtual byte[] Image
        {
            get
            {
                return _Image;
            }
            set
            {
                if (!StructuralComparisons.StructuralEqualityComparer.Equals(_Image, value))
                {
                    this.OnImageChanging(value);
                    OnPropertyChanging("Image");
                    _Image = value;
                    this.OnImageChanged();
                    OnPropertyChanged("Image");
                }
            }
        }
        private byte[] _Image;

        [StringLength(32)]
        public virtual string RepresentativeName
        {
            get
            {
                return _RepresentativeName;
            }
            set
            {
                if (_RepresentativeName != value)
                {
                    this.OnRepresentativeNameChanging(value);
                    OnPropertyChanging("RepresentativeName");
                    _RepresentativeName = value;
                    this.OnRepresentativeNameChanged();
                    OnPropertyChanged("RepresentativeName");
                }
            }
        }
        private string _RepresentativeName;

        [StringLength(32)]
        public virtual string RepresentativePosition
        {
            get
            {
                return _RepresentativePosition;
            }
            set
            {
                if (_RepresentativePosition != value)
                {
                    this.OnRepresentativePositionChanging(value);
                    OnPropertyChanging("RepresentativePosition");
                    _RepresentativePosition = value;
                    this.OnRepresentativePositionChanged();
                    OnPropertyChanged("RepresentativePosition");
                }
            }
        }
        private string _RepresentativePosition;

        [StringLength(32)]
        public virtual string ContactName
        {
            get
            {
                return _ContactName;
            }
            set
            {
                if (_ContactName != value)
                {
                    this.OnContactNameChanging(value);
                    OnPropertyChanging("ContactName");
                    _ContactName = value;
                    this.OnContactNameChanged();
                    OnPropertyChanged("ContactName");
                }
            }
        }
        private string _ContactName;

        [StringLength(32)]
        public virtual string Mobilephone
        {
            get
            {
                return _Mobilephone;
            }
            set
            {
                if (_Mobilephone != value)
                {
                    this.OnMobilephoneChanging(value);
                    OnPropertyChanging("Mobilephone");
                    _Mobilephone = value;
                    this.OnMobilephoneChanged();
                    OnPropertyChanged("Mobilephone");
                }
            }
        }
        private string _Mobilephone;

        public virtual long? TaxAuthoritiesId
        {
            get
            {
                return _TaxAuthoritiesId;
            }
            set
            {
                if (_TaxAuthoritiesId != value)
                {
                    this.OnTaxAuthoritiesIdChanging(value);
                    OnPropertyChanging("TaxAuthoritiesId");
                    _TaxAuthoritiesId = value;
                    this.OnTaxAuthoritiesIdChanged();
                    OnPropertyChanged("TaxAuthoritiesId");
                }
            }
        }
        private long? _TaxAuthoritiesId;

        public virtual long? RecCreatedBy
        {
            get
            {
                return _RecCreatedBy;
            }
            set
            {
                if (_RecCreatedBy != value)
                {
                    this.OnRecCreatedByChanging(value);
                    OnPropertyChanging("RecCreatedBy");
                    _RecCreatedBy = value;
                    this.OnRecCreatedByChanged();
                    OnPropertyChanged("RecCreatedBy");
                }
            }
        }
        private long? _RecCreatedBy;

        [Required()]
        public virtual global::System.DateTime RecCreatedAt
        {
            get
            {
                return _RecCreatedAt;
            }
            set
            {
                if (_RecCreatedAt != value)
                {
                    this.OnRecCreatedAtChanging(value);
                    OnPropertyChanging("RecCreatedAt");
                    _RecCreatedAt = value;
                    this.OnRecCreatedAtChanged();
                    OnPropertyChanged("RecCreatedAt");
                }
            }
        }
        private global::System.DateTime _RecCreatedAt;

        public virtual long? RecModifiedBy
        {
            get
            {
                return _RecModifiedBy;
            }
            set
            {
                if (_RecModifiedBy != value)
                {
                    this.OnRecModifiedByChanging(value);
                    OnPropertyChanging("RecModifiedBy");
                    _RecModifiedBy = value;
                    this.OnRecModifiedByChanged();
                    OnPropertyChanged("RecModifiedBy");
                }
            }
        }
        private long? _RecModifiedBy;

        [Required()]
        public virtual global::System.DateTime RecModifiedAt
        {
            get
            {
                return _RecModifiedAt;
            }
            set
            {
                if (_RecModifiedAt != value)
                {
                    this.OnRecModifiedAtChanging(value);
                    OnPropertyChanging("RecModifiedAt");
                    _RecModifiedAt = value;
                    this.OnRecModifiedAtChanged();
                    OnPropertyChanged("RecModifiedAt");
                }
            }
        }
        private global::System.DateTime _RecModifiedAt;

        [Required()]
        public virtual long Version
        {
            get
            {
                return _Version;
            }
            set
            {
                if (_Version != value)
                {
                    this.OnVersionChanging(value);
                    OnPropertyChanging("Version");
                    _Version = value;
                    this.OnVersionChanged();
                    OnPropertyChanged("Version");
                }
            }
        }
        private long _Version;

        #endregion

        #region Navigation Properties

        public virtual User RecCreatedByUser
        {
            get
            {
                return _RecCreatedByUser;
            }
            set
            {
                if (_RecCreatedByUser != value)
                {
                    this.OnRecCreatedByUserChanging(value);
                    OnPropertyChanging("RecCreatedByUser");
                    _RecCreatedByUser = value;
                    this.OnRecCreatedByUserChanged();
                    OnPropertyChanged("RecCreatedByUser");
                }
            }
        }
        private User _RecCreatedByUser;
        public virtual User RecModifiedByUser
        {
            get
            {
                return _RecModifiedByUser;
            }
            set
            {
                if (_RecModifiedByUser != value)
                {
                    this.OnRecModifiedByUserChanging(value);
                    OnPropertyChanging("RecModifiedByUser");
                    _RecModifiedByUser = value;
                    this.OnRecModifiedByUserChanged();
                    OnPropertyChanged("RecModifiedByUser");
                }
            }
        }
        private User _RecModifiedByUser;
        public virtual ICollection<Organization> Organizations { get; set; }
        public virtual Currency CurrencyLcy
        {
            get
            {
                return _CurrencyLcy;
            }
            set
            {
                if (_CurrencyLcy != value)
                {
                    this.OnCurrencyLcyChanging(value);
                    OnPropertyChanging("CurrencyLcy");
                    _CurrencyLcy = value;
                    this.OnCurrencyLcyChanged();
                    OnPropertyChanged("CurrencyLcy");
                }
            }
        }
        private Currency _CurrencyLcy;

        #endregion

        #region Extensibility Method Definitions

        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnUUIDChanging(string value);
        partial void OnUUIDChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnIsActivatedChanging(bool value);
        partial void OnIsActivatedChanged();
        partial void OnCultureIdChanging(string value);
        partial void OnCultureIdChanged();
        partial void OnAmountDecimalPlacesChanging(short value);
        partial void OnAmountDecimalPlacesChanged();
        partial void OnAmountRoundingPrecisionChanging(decimal value);
        partial void OnAmountRoundingPrecisionChanged();
        partial void OnUnitAmountDecimalPlacesChanging(short value);
        partial void OnUnitAmountDecimalPlacesChanged();
        partial void OnUnitAmountRoundingPrecisionChanging(decimal value);
        partial void OnUnitAmountRoundingPrecisionChanged();
        partial void OnCurrencyLcyIdChanging(long? value);
        partial void OnCurrencyLcyIdChanged();
        partial void OnTaxCodeChanging(string value);
        partial void OnTaxCodeChanged();
        partial void OnAddressChanging(string value);
        partial void OnAddressChanged();
        partial void OnAddressTransitionChanging(string value);
        partial void OnAddressTransitionChanged();
        partial void OnTelephoneChanging(string value);
        partial void OnTelephoneChanged();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnWebsiteChanging(string value);
        partial void OnWebsiteChanged();
        partial void OnImageChanging(byte[] value);
        partial void OnImageChanged();
        partial void OnRepresentativeNameChanging(string value);
        partial void OnRepresentativeNameChanged();
        partial void OnRepresentativePositionChanging(string value);
        partial void OnRepresentativePositionChanged();
        partial void OnContactNameChanging(string value);
        partial void OnContactNameChanged();
        partial void OnMobilephoneChanging(string value);
        partial void OnMobilephoneChanged();
        partial void OnTaxAuthoritiesIdChanging(long? value);
        partial void OnTaxAuthoritiesIdChanged();
        partial void OnRecCreatedByChanging(long? value);
        partial void OnRecCreatedByChanged();
        partial void OnRecCreatedAtChanging(global::System.DateTime value);
        partial void OnRecCreatedAtChanged();
        partial void OnRecModifiedByChanging(long? value);
        partial void OnRecModifiedByChanged();
        partial void OnRecModifiedAtChanging(global::System.DateTime value);
        partial void OnRecModifiedAtChanged();
        partial void OnVersionChanging(long value);
        partial void OnVersionChanged();
        partial void OnRecCreatedByUserChanging(User value);
        partial void OnRecCreatedByUserChanged();
        partial void OnRecModifiedByUserChanging(User value);
        partial void OnRecModifiedByUserChanged();
        partial void OnCurrencyLcyChanging(Currency value);
        partial void OnCurrencyLcyChanged();

        #endregion

        #region INotifyPropertyChanging Members

        public event PropertyChangingEventHandler PropertyChanging;

        protected void OnPropertyChanging(string propertyName) {

          if (PropertyChanging != null)
            PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
