//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 04/21/2021 10:23:24 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace MyERP.DataAccess
{
    public partial class CashHeader : INotifyPropertyChanging, INotifyPropertyChanged
    {

        public CashHeader()
        {
            OnCreated();
        }

        #region Properties

        [Key]
        [Required()]
        public virtual long Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    this.OnIdChanging(value);
                    OnPropertyChanging("Id");
                    _Id = value;
                    this.OnIdChanged();
                    OnPropertyChanged("Id");
                }
            }
        }
        private long _Id;

        [Required()]
        public virtual byte DocumentType
        {
            get
            {
                return _DocumentType;
            }
            set
            {
                if (_DocumentType != value)
                {
                    this.OnDocumentTypeChanging(value);
                    OnPropertyChanging("DocumentType");
                    _DocumentType = value;
                    this.OnDocumentTypeChanged();
                    OnPropertyChanged("DocumentType");
                }
            }
        }
        private byte _DocumentType;

        [Required()]
        public virtual byte DocSubType
        {
            get
            {
                return _DocSubType;
            }
            set
            {
                if (_DocSubType != value)
                {
                    this.OnDocSubTypeChanging(value);
                    OnPropertyChanging("DocSubType");
                    _DocSubType = value;
                    this.OnDocSubTypeChanged();
                    OnPropertyChanged("DocSubType");
                }
            }
        }
        private byte _DocSubType;

        [Required()]
        public virtual long DocSequenceId
        {
            get
            {
                return _DocSequenceId;
            }
            set
            {
                if (_DocSequenceId != value)
                {
                    this.OnDocSequenceIdChanging(value);
                    OnPropertyChanging("DocSequenceId");
                    _DocSequenceId = value;
                    this.OnDocSequenceIdChanged();
                    OnPropertyChanged("DocSequenceId");
                }
            }
        }
        private long _DocSequenceId;

        [StringLength(32)]
        [Required()]
        public virtual string DocumentNo
        {
            get
            {
                return _DocumentNo;
            }
            set
            {
                if (_DocumentNo != value)
                {
                    this.OnDocumentNoChanging(value);
                    OnPropertyChanging("DocumentNo");
                    _DocumentNo = value;
                    this.OnDocumentNoChanged();
                    OnPropertyChanged("DocumentNo");
                }
            }
        }
        private string _DocumentNo;

        [Required()]
        public virtual global::System.DateTime DocumentDate
        {
            get
            {
                return _DocumentDate;
            }
            set
            {
                if (_DocumentDate != value)
                {
                    this.OnDocumentDateChanging(value);
                    OnPropertyChanging("DocumentDate");
                    _DocumentDate = value;
                    this.OnDocumentDateChanged();
                    OnPropertyChanged("DocumentDate");
                }
            }
        }
        private global::System.DateTime _DocumentDate;

        [Required()]
        public virtual global::System.DateTime PostingDate
        {
            get
            {
                return _PostingDate;
            }
            set
            {
                if (_PostingDate != value)
                {
                    this.OnPostingDateChanging(value);
                    OnPropertyChanging("PostingDate");
                    _PostingDate = value;
                    this.OnPostingDateChanged();
                    OnPropertyChanged("PostingDate");
                }
            }
        }
        private global::System.DateTime _PostingDate;

        [Required()]
        public virtual long BusinessPartnerId
        {
            get
            {
                return _BusinessPartnerId;
            }
            set
            {
                if (_BusinessPartnerId != value)
                {
                    this.OnBusinessPartnerIdChanging(value);
                    OnPropertyChanging("BusinessPartnerId");
                    _BusinessPartnerId = value;
                    this.OnBusinessPartnerIdChanged();
                    OnPropertyChanged("BusinessPartnerId");
                }
            }
        }
        private long _BusinessPartnerId;

        [StringLength(256)]
        [Required()]
        public virtual string BusinessPartnerName
        {
            get
            {
                return _BusinessPartnerName;
            }
            set
            {
                if (_BusinessPartnerName != value)
                {
                    this.OnBusinessPartnerNameChanging(value);
                    OnPropertyChanging("BusinessPartnerName");
                    _BusinessPartnerName = value;
                    this.OnBusinessPartnerNameChanged();
                    OnPropertyChanged("BusinessPartnerName");
                }
            }
        }
        private string _BusinessPartnerName;

        [StringLength(256)]
        public virtual string BusinessPartnerAddress
        {
            get
            {
                return _BusinessPartnerAddress;
            }
            set
            {
                if (_BusinessPartnerAddress != value)
                {
                    this.OnBusinessPartnerAddressChanging(value);
                    OnPropertyChanging("BusinessPartnerAddress");
                    _BusinessPartnerAddress = value;
                    this.OnBusinessPartnerAddressChanged();
                    OnPropertyChanged("BusinessPartnerAddress");
                }
            }
        }
        private string _BusinessPartnerAddress;

        public virtual long? BusinessPartnerContactId
        {
            get
            {
                return _BusinessPartnerContactId;
            }
            set
            {
                if (_BusinessPartnerContactId != value)
                {
                    this.OnBusinessPartnerContactIdChanging(value);
                    OnPropertyChanging("BusinessPartnerContactId");
                    _BusinessPartnerContactId = value;
                    this.OnBusinessPartnerContactIdChanged();
                    OnPropertyChanged("BusinessPartnerContactId");
                }
            }
        }
        private long? _BusinessPartnerContactId;

        [StringLength(256)]
        public virtual string BusinessPartnerContactName
        {
            get
            {
                return _BusinessPartnerContactName;
            }
            set
            {
                if (_BusinessPartnerContactName != value)
                {
                    this.OnBusinessPartnerContactNameChanging(value);
                    OnPropertyChanging("BusinessPartnerContactName");
                    _BusinessPartnerContactName = value;
                    this.OnBusinessPartnerContactNameChanged();
                    OnPropertyChanged("BusinessPartnerContactName");
                }
            }
        }
        private string _BusinessPartnerContactName;

        [StringLength(256)]
        [Required()]
        public virtual string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    this.OnDescriptionChanging(value);
                    OnPropertyChanging("Description");
                    _Description = value;
                    this.OnDescriptionChanged();
                    OnPropertyChanged("Description");
                }
            }
        }
        private string _Description;

        [Required()]
        public virtual long AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                if (_AccountId != value)
                {
                    this.OnAccountIdChanging(value);
                    OnPropertyChanging("AccountId");
                    _AccountId = value;
                    this.OnAccountIdChanged();
                    OnPropertyChanged("AccountId");
                }
            }
        }
        private long _AccountId;

        [Required()]
        public virtual long CurrencyId
        {
            get
            {
                return _CurrencyId;
            }
            set
            {
                if (_CurrencyId != value)
                {
                    this.OnCurrencyIdChanging(value);
                    OnPropertyChanging("CurrencyId");
                    _CurrencyId = value;
                    this.OnCurrencyIdChanged();
                    OnPropertyChanged("CurrencyId");
                }
            }
        }
        private long _CurrencyId;

        [Required()]
        public virtual decimal CurrencyFactor
        {
            get
            {
                return _CurrencyFactor;
            }
            set
            {
                if (_CurrencyFactor != value)
                {
                    this.OnCurrencyFactorChanging(value);
                    OnPropertyChanging("CurrencyFactor");
                    _CurrencyFactor = value;
                    this.OnCurrencyFactorChanged();
                    OnPropertyChanged("CurrencyFactor");
                }
            }
        }
        private decimal _CurrencyFactor;

        [Required()]
        public virtual decimal TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                if (_TotalAmount != value)
                {
                    this.OnTotalAmountChanging(value);
                    OnPropertyChanging("TotalAmount");
                    _TotalAmount = value;
                    this.OnTotalAmountChanged();
                    OnPropertyChanged("TotalAmount");
                }
            }
        }
        private decimal _TotalAmount;

        [Required()]
        public virtual decimal TotalVatAmount
        {
            get
            {
                return _TotalVatAmount;
            }
            set
            {
                if (_TotalVatAmount != value)
                {
                    this.OnTotalVatAmountChanging(value);
                    OnPropertyChanging("TotalVatAmount");
                    _TotalVatAmount = value;
                    this.OnTotalVatAmountChanged();
                    OnPropertyChanged("TotalVatAmount");
                }
            }
        }
        private decimal _TotalVatAmount;

        [Required()]
        public virtual decimal TotalPayment
        {
            get
            {
                return _TotalPayment;
            }
            set
            {
                if (_TotalPayment != value)
                {
                    this.OnTotalPaymentChanging(value);
                    OnPropertyChanging("TotalPayment");
                    _TotalPayment = value;
                    this.OnTotalPaymentChanged();
                    OnPropertyChanged("TotalPayment");
                }
            }
        }
        private decimal _TotalPayment;

        [Required()]
        public virtual decimal TotalAmountLCY
        {
            get
            {
                return _TotalAmountLCY;
            }
            set
            {
                if (_TotalAmountLCY != value)
                {
                    this.OnTotalAmountLCYChanging(value);
                    OnPropertyChanging("TotalAmountLCY");
                    _TotalAmountLCY = value;
                    this.OnTotalAmountLCYChanged();
                    OnPropertyChanged("TotalAmountLCY");
                }
            }
        }
        private decimal _TotalAmountLCY;

        [Required()]
        public virtual decimal TotalVatAmountLCY
        {
            get
            {
                return _TotalVatAmountLCY;
            }
            set
            {
                if (_TotalVatAmountLCY != value)
                {
                    this.OnTotalVatAmountLCYChanging(value);
                    OnPropertyChanging("TotalVatAmountLCY");
                    _TotalVatAmountLCY = value;
                    this.OnTotalVatAmountLCYChanged();
                    OnPropertyChanged("TotalVatAmountLCY");
                }
            }
        }
        private decimal _TotalVatAmountLCY;

        [Required()]
        public virtual decimal TotalPaymentLCY
        {
            get
            {
                return _TotalPaymentLCY;
            }
            set
            {
                if (_TotalPaymentLCY != value)
                {
                    this.OnTotalPaymentLCYChanging(value);
                    OnPropertyChanging("TotalPaymentLCY");
                    _TotalPaymentLCY = value;
                    this.OnTotalPaymentLCYChanged();
                    OnPropertyChanged("TotalPaymentLCY");
                }
            }
        }
        private decimal _TotalPaymentLCY;

        public virtual int? NoPrinted
        {
            get
            {
                return _NoPrinted;
            }
            set
            {
                if (_NoPrinted != value)
                {
                    this.OnNoPrintedChanging(value);
                    OnPropertyChanging("NoPrinted");
                    _NoPrinted = value;
                    this.OnNoPrintedChanged();
                    OnPropertyChanged("NoPrinted");
                }
            }
        }
        private int? _NoPrinted;

        [Required()]
        public virtual long OrganizationId
        {
            get
            {
                return _OrganizationId;
            }
            set
            {
                if (_OrganizationId != value)
                {
                    this.OnOrganizationIdChanging(value);
                    OnPropertyChanging("OrganizationId");
                    _OrganizationId = value;
                    this.OnOrganizationIdChanged();
                    OnPropertyChanged("OrganizationId");
                }
            }
        }
        private long _OrganizationId;

        [Required()]
        public virtual long ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                if (_ClientId != value)
                {
                    this.OnClientIdChanging(value);
                    OnPropertyChanging("ClientId");
                    _ClientId = value;
                    this.OnClientIdChanged();
                    OnPropertyChanged("ClientId");
                }
            }
        }
        private long _ClientId;

        [Required()]
        public virtual global::System.DateTime RecCreatedAt
        {
            get
            {
                return _RecCreatedAt;
            }
            set
            {
                if (_RecCreatedAt != value)
                {
                    this.OnRecCreatedAtChanging(value);
                    OnPropertyChanging("RecCreatedAt");
                    _RecCreatedAt = value;
                    this.OnRecCreatedAtChanged();
                    OnPropertyChanged("RecCreatedAt");
                }
            }
        }
        private global::System.DateTime _RecCreatedAt;

        [Required()]
        public virtual long RecCreatedBy
        {
            get
            {
                return _RecCreatedBy;
            }
            set
            {
                if (_RecCreatedBy != value)
                {
                    this.OnRecCreatedByChanging(value);
                    OnPropertyChanging("RecCreatedBy");
                    _RecCreatedBy = value;
                    this.OnRecCreatedByChanged();
                    OnPropertyChanged("RecCreatedBy");
                }
            }
        }
        private long _RecCreatedBy;

        [Required()]
        public virtual global::System.DateTime RecModifiedAt
        {
            get
            {
                return _RecModifiedAt;
            }
            set
            {
                if (_RecModifiedAt != value)
                {
                    this.OnRecModifiedAtChanging(value);
                    OnPropertyChanging("RecModifiedAt");
                    _RecModifiedAt = value;
                    this.OnRecModifiedAtChanged();
                    OnPropertyChanged("RecModifiedAt");
                }
            }
        }
        private global::System.DateTime _RecModifiedAt;

        [Required()]
        public virtual long RecModifiedBy
        {
            get
            {
                return _RecModifiedBy;
            }
            set
            {
                if (_RecModifiedBy != value)
                {
                    this.OnRecModifiedByChanging(value);
                    OnPropertyChanging("RecModifiedBy");
                    _RecModifiedBy = value;
                    this.OnRecModifiedByChanged();
                    OnPropertyChanged("RecModifiedBy");
                }
            }
        }
        private long _RecModifiedBy;

        [Required()]
        public virtual MyERP.DataAccess.Enum.DefaultDocumentStatusType Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    this.OnStatusChanging(value);
                    OnPropertyChanging("Status");
                    _Status = value;
                    this.OnStatusChanged();
                    OnPropertyChanged("Status");
                }
            }
        }
        private MyERP.DataAccess.Enum.DefaultDocumentStatusType _Status;

        [Required()]
        public virtual long Version
        {
            get
            {
                return _Version;
            }
            set
            {
                if (_Version != value)
                {
                    this.OnVersionChanging(value);
                    OnPropertyChanging("Version");
                    _Version = value;
                    this.OnVersionChanged();
                    OnPropertyChanged("Version");
                }
            }
        }
        private long _Version;

        #endregion

        #region Navigation Properties

        public virtual ICollection<CashLine> CashLines { get; set; }
        public virtual BusinessPartner BusinessPartner
        {
            get
            {
                return _BusinessPartner;
            }
            set
            {
                if (_BusinessPartner != value)
                {
                    this.OnBusinessPartnerChanging(value);
                    OnPropertyChanging("BusinessPartner");
                    _BusinessPartner = value;
                    this.OnBusinessPartnerChanged();
                    OnPropertyChanged("BusinessPartner");
                }
            }
        }
        private BusinessPartner _BusinessPartner;
        public virtual User RecCreatedByUser
        {
            get
            {
                return _RecCreatedByUser;
            }
            set
            {
                if (_RecCreatedByUser != value)
                {
                    this.OnRecCreatedByUserChanging(value);
                    OnPropertyChanging("RecCreatedByUser");
                    _RecCreatedByUser = value;
                    this.OnRecCreatedByUserChanged();
                    OnPropertyChanged("RecCreatedByUser");
                }
            }
        }
        private User _RecCreatedByUser;
        public virtual User RecModifiedByUser
        {
            get
            {
                return _RecModifiedByUser;
            }
            set
            {
                if (_RecModifiedByUser != value)
                {
                    this.OnRecModifiedByUserChanging(value);
                    OnPropertyChanging("RecModifiedByUser");
                    _RecModifiedByUser = value;
                    this.OnRecModifiedByUserChanged();
                    OnPropertyChanged("RecModifiedByUser");
                }
            }
        }
        private User _RecModifiedByUser;
        public virtual Currency Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                if (_Currency != value)
                {
                    this.OnCurrencyChanging(value);
                    OnPropertyChanging("Currency");
                    _Currency = value;
                    this.OnCurrencyChanged();
                    OnPropertyChanged("Currency");
                }
            }
        }
        private Currency _Currency;
        public virtual Client Client
        {
            get
            {
                return _Client;
            }
            set
            {
                if (_Client != value)
                {
                    this.OnClientChanging(value);
                    OnPropertyChanging("Client");
                    _Client = value;
                    this.OnClientChanged();
                    OnPropertyChanged("Client");
                }
            }
        }
        private Client _Client;
        public virtual Organization Organization
        {
            get
            {
                return _Organization;
            }
            set
            {
                if (_Organization != value)
                {
                    this.OnOrganizationChanging(value);
                    OnPropertyChanging("Organization");
                    _Organization = value;
                    this.OnOrganizationChanged();
                    OnPropertyChanged("Organization");
                }
            }
        }
        private Organization _Organization;
        public virtual Account Account
        {
            get
            {
                return _Account;
            }
            set
            {
                if (_Account != value)
                {
                    this.OnAccountChanging(value);
                    OnPropertyChanging("Account");
                    _Account = value;
                    this.OnAccountChanged();
                    OnPropertyChanged("Account");
                }
            }
        }
        private Account _Account;
        public virtual ICollection<VatEntry> VatEntries { get; set; }

        #endregion

        #region Extensibility Method Definitions

        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnDocumentTypeChanging(byte value);
        partial void OnDocumentTypeChanged();
        partial void OnDocSubTypeChanging(byte value);
        partial void OnDocSubTypeChanged();
        partial void OnDocSequenceIdChanging(long value);
        partial void OnDocSequenceIdChanged();
        partial void OnDocumentNoChanging(string value);
        partial void OnDocumentNoChanged();
        partial void OnDocumentDateChanging(global::System.DateTime value);
        partial void OnDocumentDateChanged();
        partial void OnPostingDateChanging(global::System.DateTime value);
        partial void OnPostingDateChanged();
        partial void OnBusinessPartnerIdChanging(long value);
        partial void OnBusinessPartnerIdChanged();
        partial void OnBusinessPartnerNameChanging(string value);
        partial void OnBusinessPartnerNameChanged();
        partial void OnBusinessPartnerAddressChanging(string value);
        partial void OnBusinessPartnerAddressChanged();
        partial void OnBusinessPartnerContactIdChanging(long? value);
        partial void OnBusinessPartnerContactIdChanged();
        partial void OnBusinessPartnerContactNameChanging(string value);
        partial void OnBusinessPartnerContactNameChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnAccountIdChanging(long value);
        partial void OnAccountIdChanged();
        partial void OnCurrencyIdChanging(long value);
        partial void OnCurrencyIdChanged();
        partial void OnCurrencyFactorChanging(decimal value);
        partial void OnCurrencyFactorChanged();
        partial void OnTotalAmountChanging(decimal value);
        partial void OnTotalAmountChanged();
        partial void OnTotalVatAmountChanging(decimal value);
        partial void OnTotalVatAmountChanged();
        partial void OnTotalPaymentChanging(decimal value);
        partial void OnTotalPaymentChanged();
        partial void OnTotalAmountLCYChanging(decimal value);
        partial void OnTotalAmountLCYChanged();
        partial void OnTotalVatAmountLCYChanging(decimal value);
        partial void OnTotalVatAmountLCYChanged();
        partial void OnTotalPaymentLCYChanging(decimal value);
        partial void OnTotalPaymentLCYChanged();
        partial void OnNoPrintedChanging(int? value);
        partial void OnNoPrintedChanged();
        partial void OnOrganizationIdChanging(long value);
        partial void OnOrganizationIdChanged();
        partial void OnClientIdChanging(long value);
        partial void OnClientIdChanged();
        partial void OnRecCreatedAtChanging(global::System.DateTime value);
        partial void OnRecCreatedAtChanged();
        partial void OnRecCreatedByChanging(long value);
        partial void OnRecCreatedByChanged();
        partial void OnRecModifiedAtChanging(global::System.DateTime value);
        partial void OnRecModifiedAtChanged();
        partial void OnRecModifiedByChanging(long value);
        partial void OnRecModifiedByChanged();
        partial void OnStatusChanging(MyERP.DataAccess.Enum.DefaultDocumentStatusType value);
        partial void OnStatusChanged();
        partial void OnVersionChanging(long value);
        partial void OnVersionChanged();
        partial void OnBusinessPartnerChanging(BusinessPartner value);
        partial void OnBusinessPartnerChanged();
        partial void OnRecCreatedByUserChanging(User value);
        partial void OnRecCreatedByUserChanged();
        partial void OnRecModifiedByUserChanging(User value);
        partial void OnRecModifiedByUserChanged();
        partial void OnCurrencyChanging(Currency value);
        partial void OnCurrencyChanged();
        partial void OnClientChanging(Client value);
        partial void OnClientChanged();
        partial void OnOrganizationChanging(Organization value);
        partial void OnOrganizationChanged();
        partial void OnAccountChanging(Account value);
        partial void OnAccountChanged();

        #endregion

        #region INotifyPropertyChanging Members

        public event PropertyChangingEventHandler PropertyChanging;

        protected void OnPropertyChanging(string propertyName) {

          if (PropertyChanging != null)
            PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
