//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 04/21/2021 10:23:24 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace MyERP.DataAccess
{
    public partial class NoSequenceLine : INotifyPropertyChanging, INotifyPropertyChanged
    {

        public NoSequenceLine()
        {
            OnCreated();
        }

        #region Properties

        [Key]
        [Required()]
        public virtual long Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    this.OnIdChanging(value);
                    OnPropertyChanging("Id");
                    _Id = value;
                    this.OnIdChanged();
                    OnPropertyChanged("Id");
                }
            }
        }
        private long _Id;

        [Required()]
        public virtual long NoSequenceId
        {
            get
            {
                return _NoSequenceId;
            }
            set
            {
                if (_NoSequenceId != value)
                {
                    this.OnNoSequenceIdChanging(value);
                    OnPropertyChanging("NoSequenceId");
                    _NoSequenceId = value;
                    this.OnNoSequenceIdChanged();
                    OnPropertyChanged("NoSequenceId");
                }
            }
        }
        private long _NoSequenceId;

        [Required()]
        public virtual long LineNo
        {
            get
            {
                return _LineNo;
            }
            set
            {
                if (_LineNo != value)
                {
                    this.OnLineNoChanging(value);
                    OnPropertyChanging("LineNo");
                    _LineNo = value;
                    this.OnLineNoChanged();
                    OnPropertyChanged("LineNo");
                }
            }
        }
        private long _LineNo;

        [Required()]
        public virtual global::System.DateTime StartingDate
        {
            get
            {
                return _StartingDate;
            }
            set
            {
                if (_StartingDate != value)
                {
                    this.OnStartingDateChanging(value);
                    OnPropertyChanging("StartingDate");
                    _StartingDate = value;
                    this.OnStartingDateChanged();
                    OnPropertyChanged("StartingDate");
                }
            }
        }
        private global::System.DateTime _StartingDate;

        [Required()]
        public virtual int StartingNo
        {
            get
            {
                return _StartingNo;
            }
            set
            {
                if (_StartingNo != value)
                {
                    this.OnStartingNoChanging(value);
                    OnPropertyChanging("StartingNo");
                    _StartingNo = value;
                    this.OnStartingNoChanged();
                    OnPropertyChanged("StartingNo");
                }
            }
        }
        private int _StartingNo;

        [Required()]
        public virtual int EndingNo
        {
            get
            {
                return _EndingNo;
            }
            set
            {
                if (_EndingNo != value)
                {
                    this.OnEndingNoChanging(value);
                    OnPropertyChanging("EndingNo");
                    _EndingNo = value;
                    this.OnEndingNoChanged();
                    OnPropertyChanged("EndingNo");
                }
            }
        }
        private int _EndingNo;

        [Required()]
        public virtual int CurrentNo
        {
            get
            {
                return _CurrentNo;
            }
            set
            {
                if (_CurrentNo != value)
                {
                    this.OnCurrentNoChanging(value);
                    OnPropertyChanging("CurrentNo");
                    _CurrentNo = value;
                    this.OnCurrentNoChanged();
                    OnPropertyChanged("CurrentNo");
                }
            }
        }
        private int _CurrentNo;

        [StringLength(32)]
        [Required()]
        public virtual string FormatNo
        {
            get
            {
                return _FormatNo;
            }
            set
            {
                if (_FormatNo != value)
                {
                    this.OnFormatNoChanging(value);
                    OnPropertyChanging("FormatNo");
                    _FormatNo = value;
                    this.OnFormatNoChanged();
                    OnPropertyChanged("FormatNo");
                }
            }
        }
        private string _FormatNo;

        [Required()]
        public virtual int WarningNo
        {
            get
            {
                return _WarningNo;
            }
            set
            {
                if (_WarningNo != value)
                {
                    this.OnWarningNoChanging(value);
                    OnPropertyChanging("WarningNo");
                    _WarningNo = value;
                    this.OnWarningNoChanged();
                    OnPropertyChanged("WarningNo");
                }
            }
        }
        private int _WarningNo;

        public virtual global::System.DateTime? LastDateUsed
        {
            get
            {
                return _LastDateUsed;
            }
            set
            {
                if (_LastDateUsed != value)
                {
                    this.OnLastDateUsedChanging(value);
                    OnPropertyChanging("LastDateUsed");
                    _LastDateUsed = value;
                    this.OnLastDateUsedChanged();
                    OnPropertyChanged("LastDateUsed");
                }
            }
        }
        private global::System.DateTime? _LastDateUsed;

        [Required()]
        public virtual long ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                if (_ClientId != value)
                {
                    this.OnClientIdChanging(value);
                    OnPropertyChanging("ClientId");
                    _ClientId = value;
                    this.OnClientIdChanged();
                    OnPropertyChanged("ClientId");
                }
            }
        }
        private long _ClientId;

        [Required()]
        public virtual long OrganizationId
        {
            get
            {
                return _OrganizationId;
            }
            set
            {
                if (_OrganizationId != value)
                {
                    this.OnOrganizationIdChanging(value);
                    OnPropertyChanging("OrganizationId");
                    _OrganizationId = value;
                    this.OnOrganizationIdChanged();
                    OnPropertyChanged("OrganizationId");
                }
            }
        }
        private long _OrganizationId;

        [Required()]
        public virtual MyERP.DataAccess.Enum.DefaultMasterStatusType Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    this.OnStatusChanging(value);
                    OnPropertyChanging("Status");
                    _Status = value;
                    this.OnStatusChanged();
                    OnPropertyChanged("Status");
                }
            }
        }
        private MyERP.DataAccess.Enum.DefaultMasterStatusType _Status;

        [Required()]
        public virtual long Version
        {
            get
            {
                return _Version;
            }
            set
            {
                if (_Version != value)
                {
                    this.OnVersionChanging(value);
                    OnPropertyChanging("Version");
                    _Version = value;
                    this.OnVersionChanged();
                    OnPropertyChanged("Version");
                }
            }
        }
        private long _Version;

        [Required()]
        public virtual long RecCreatedBy
        {
            get
            {
                return _RecCreatedBy;
            }
            set
            {
                if (_RecCreatedBy != value)
                {
                    this.OnRecCreatedByChanging(value);
                    OnPropertyChanging("RecCreatedBy");
                    _RecCreatedBy = value;
                    this.OnRecCreatedByChanged();
                    OnPropertyChanged("RecCreatedBy");
                }
            }
        }
        private long _RecCreatedBy;

        [Required()]
        public virtual global::System.DateTime RecCreatedAt
        {
            get
            {
                return _RecCreatedAt;
            }
            set
            {
                if (_RecCreatedAt != value)
                {
                    this.OnRecCreatedAtChanging(value);
                    OnPropertyChanging("RecCreatedAt");
                    _RecCreatedAt = value;
                    this.OnRecCreatedAtChanged();
                    OnPropertyChanged("RecCreatedAt");
                }
            }
        }
        private global::System.DateTime _RecCreatedAt;

        [Required()]
        public virtual long RecModifiedBy
        {
            get
            {
                return _RecModifiedBy;
            }
            set
            {
                if (_RecModifiedBy != value)
                {
                    this.OnRecModifiedByChanging(value);
                    OnPropertyChanging("RecModifiedBy");
                    _RecModifiedBy = value;
                    this.OnRecModifiedByChanged();
                    OnPropertyChanged("RecModifiedBy");
                }
            }
        }
        private long _RecModifiedBy;

        [Required()]
        public virtual global::System.DateTime RecModifiedAt
        {
            get
            {
                return _RecModifiedAt;
            }
            set
            {
                if (_RecModifiedAt != value)
                {
                    this.OnRecModifiedAtChanging(value);
                    OnPropertyChanging("RecModifiedAt");
                    _RecModifiedAt = value;
                    this.OnRecModifiedAtChanged();
                    OnPropertyChanged("RecModifiedAt");
                }
            }
        }
        private global::System.DateTime _RecModifiedAt;

        #endregion

        #region Navigation Properties

        public virtual NoSequence NoSequence
        {
            get
            {
                return _NoSequence;
            }
            set
            {
                if (_NoSequence != value)
                {
                    this.OnNoSequenceChanging(value);
                    OnPropertyChanging("NoSequence");
                    _NoSequence = value;
                    this.OnNoSequenceChanged();
                    OnPropertyChanged("NoSequence");
                }
            }
        }
        private NoSequence _NoSequence;
        public virtual Client Client
        {
            get
            {
                return _Client;
            }
            set
            {
                if (_Client != value)
                {
                    this.OnClientChanging(value);
                    OnPropertyChanging("Client");
                    _Client = value;
                    this.OnClientChanged();
                    OnPropertyChanged("Client");
                }
            }
        }
        private Client _Client;
        public virtual Organization Organization
        {
            get
            {
                return _Organization;
            }
            set
            {
                if (_Organization != value)
                {
                    this.OnOrganizationChanging(value);
                    OnPropertyChanging("Organization");
                    _Organization = value;
                    this.OnOrganizationChanged();
                    OnPropertyChanged("Organization");
                }
            }
        }
        private Organization _Organization;
        public virtual User RecCreatedByUser
        {
            get
            {
                return _RecCreatedByUser;
            }
            set
            {
                if (_RecCreatedByUser != value)
                {
                    this.OnRecCreatedByUserChanging(value);
                    OnPropertyChanging("RecCreatedByUser");
                    _RecCreatedByUser = value;
                    this.OnRecCreatedByUserChanged();
                    OnPropertyChanged("RecCreatedByUser");
                }
            }
        }
        private User _RecCreatedByUser;
        public virtual User RecModifiedByUser
        {
            get
            {
                return _RecModifiedByUser;
            }
            set
            {
                if (_RecModifiedByUser != value)
                {
                    this.OnRecModifiedByUserChanging(value);
                    OnPropertyChanging("RecModifiedByUser");
                    _RecModifiedByUser = value;
                    this.OnRecModifiedByUserChanged();
                    OnPropertyChanged("RecModifiedByUser");
                }
            }
        }
        private User _RecModifiedByUser;

        #endregion

        #region Extensibility Method Definitions

        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnNoSequenceIdChanging(long value);
        partial void OnNoSequenceIdChanged();
        partial void OnLineNoChanging(long value);
        partial void OnLineNoChanged();
        partial void OnStartingDateChanging(global::System.DateTime value);
        partial void OnStartingDateChanged();
        partial void OnStartingNoChanging(int value);
        partial void OnStartingNoChanged();
        partial void OnEndingNoChanging(int value);
        partial void OnEndingNoChanged();
        partial void OnCurrentNoChanging(int value);
        partial void OnCurrentNoChanged();
        partial void OnFormatNoChanging(string value);
        partial void OnFormatNoChanged();
        partial void OnWarningNoChanging(int value);
        partial void OnWarningNoChanged();
        partial void OnLastDateUsedChanging(global::System.DateTime? value);
        partial void OnLastDateUsedChanged();
        partial void OnClientIdChanging(long value);
        partial void OnClientIdChanged();
        partial void OnOrganizationIdChanging(long value);
        partial void OnOrganizationIdChanged();
        partial void OnStatusChanging(MyERP.DataAccess.Enum.DefaultMasterStatusType value);
        partial void OnStatusChanged();
        partial void OnVersionChanging(long value);
        partial void OnVersionChanged();
        partial void OnRecCreatedByChanging(long value);
        partial void OnRecCreatedByChanged();
        partial void OnRecCreatedAtChanging(global::System.DateTime value);
        partial void OnRecCreatedAtChanged();
        partial void OnRecModifiedByChanging(long value);
        partial void OnRecModifiedByChanged();
        partial void OnRecModifiedAtChanging(global::System.DateTime value);
        partial void OnRecModifiedAtChanged();
        partial void OnNoSequenceChanging(NoSequence value);
        partial void OnNoSequenceChanged();
        partial void OnClientChanging(Client value);
        partial void OnClientChanged();
        partial void OnOrganizationChanging(Organization value);
        partial void OnOrganizationChanged();
        partial void OnRecCreatedByUserChanging(User value);
        partial void OnRecCreatedByUserChanged();
        partial void OnRecModifiedByUserChanging(User value);
        partial void OnRecModifiedByUserChanged();

        #endregion

        #region INotifyPropertyChanging Members

        public event PropertyChangingEventHandler PropertyChanging;

        protected void OnPropertyChanging(string propertyName) {

          if (PropertyChanging != null)
            PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
