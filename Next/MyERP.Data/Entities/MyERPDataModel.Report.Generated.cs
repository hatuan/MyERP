//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 04/21/2021 10:23:24 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace MyERP.DataAccess
{
    public partial class Report : INotifyPropertyChanging, INotifyPropertyChanged
    {

        public Report()
        {
            OnCreated();
        }

        #region Properties

        [Key]
        [Required()]
        public virtual long Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    this.OnIdChanging(value);
                    OnPropertyChanging("Id");
                    _Id = value;
                    this.OnIdChanged();
                    OnPropertyChanged("Id");
                }
            }
        }
        private long _Id;

        [StringLength(256)]
        [Required()]
        public virtual string RepId
        {
            get
            {
                return _RepId;
            }
            set
            {
                if (_RepId != value)
                {
                    this.OnRepIdChanging(value);
                    OnPropertyChanging("RepId");
                    _RepId = value;
                    this.OnRepIdChanged();
                    OnPropertyChanged("RepId");
                }
            }
        }
        private string _RepId;

        [StringLength(3)]
        [Required()]
        public virtual string RepNo
        {
            get
            {
                return _RepNo;
            }
            set
            {
                if (_RepNo != value)
                {
                    this.OnRepNoChanging(value);
                    OnPropertyChanging("RepNo");
                    _RepNo = value;
                    this.OnRepNoChanged();
                    OnPropertyChanged("RepNo");
                }
            }
        }
        private string _RepNo;

        [StringLength(256)]
        [Required()]
        public virtual string Text
        {
            get
            {
                return _Text;
            }
            set
            {
                if (_Text != value)
                {
                    this.OnTextChanging(value);
                    OnPropertyChanging("Text");
                    _Text = value;
                    this.OnTextChanged();
                    OnPropertyChanged("Text");
                }
            }
        }
        private string _Text;

        [StringLength(256)]
        [Required()]
        public virtual string Title
        {
            get
            {
                return _Title;
            }
            set
            {
                if (_Title != value)
                {
                    this.OnTitleChanging(value);
                    OnPropertyChanging("Title");
                    _Title = value;
                    this.OnTitleChanged();
                    OnPropertyChanged("Title");
                }
            }
        }
        private string _Title;

        [StringLength(256)]
        public virtual string FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                if (_FileName != value)
                {
                    this.OnFileNameChanging(value);
                    OnPropertyChanging("FileName");
                    _FileName = value;
                    this.OnFileNameChanged();
                    OnPropertyChanged("FileName");
                }
            }
        }
        private string _FileName;

        public virtual string Blob
        {
            get
            {
                return _Blob;
            }
            set
            {
                if (_Blob != value)
                {
                    this.OnBlobChanging(value);
                    OnPropertyChanging("Blob");
                    _Blob = value;
                    this.OnBlobChanged();
                    OnPropertyChanged("Blob");
                }
            }
        }
        private string _Blob;

        #endregion

        #region Extensibility Method Definitions

        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnRepIdChanging(string value);
        partial void OnRepIdChanged();
        partial void OnRepNoChanging(string value);
        partial void OnRepNoChanged();
        partial void OnTextChanging(string value);
        partial void OnTextChanged();
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
        partial void OnFileNameChanging(string value);
        partial void OnFileNameChanged();
        partial void OnBlobChanging(string value);
        partial void OnBlobChanged();

        #endregion

        #region INotifyPropertyChanging Members

        public event PropertyChangingEventHandler PropertyChanging;

        protected void OnPropertyChanging(string propertyName) {

          if (PropertyChanging != null)
            PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
