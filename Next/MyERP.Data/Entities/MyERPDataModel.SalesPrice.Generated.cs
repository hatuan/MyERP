//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 04/21/2021 10:23:24 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace MyERP.DataAccess
{
    public partial class SalesPrice : INotifyPropertyChanging, INotifyPropertyChanged
    {

        public SalesPrice()
        {
            OnCreated();
        }

        #region Properties

        [Key]
        [Required()]
        public virtual long Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    this.OnIdChanging(value);
                    OnPropertyChanging("Id");
                    _Id = value;
                    this.OnIdChanged();
                    OnPropertyChanged("Id");
                }
            }
        }
        private long _Id;

        [Required()]
        public virtual long SalesPriceGroupId
        {
            get
            {
                return _SalesPriceGroupId;
            }
            set
            {
                if (_SalesPriceGroupId != value)
                {
                    this.OnSalesPriceGroupIdChanging(value);
                    OnPropertyChanging("SalesPriceGroupId");
                    _SalesPriceGroupId = value;
                    this.OnSalesPriceGroupIdChanged();
                    OnPropertyChanged("SalesPriceGroupId");
                }
            }
        }
        private long _SalesPriceGroupId;

        /// <summary>
        /// 1-Customer
        /// 2-Customer Price Group
        /// 3-All Customers
        /// 4-Campaign
        /// </summary>
        [Required()]
        public virtual short SalesType
        {
            get
            {
                return _SalesType;
            }
            set
            {
                if (_SalesType != value)
                {
                    this.OnSalesTypeChanging(value);
                    OnPropertyChanging("SalesType");
                    _SalesType = value;
                    this.OnSalesTypeChanged();
                    OnPropertyChanged("SalesType");
                }
            }
        }
        private short _SalesType;

        public virtual long? BusinessPartnerId
        {
            get
            {
                return _BusinessPartnerId;
            }
            set
            {
                if (_BusinessPartnerId != value)
                {
                    this.OnBusinessPartnerIdChanging(value);
                    OnPropertyChanging("BusinessPartnerId");
                    _BusinessPartnerId = value;
                    this.OnBusinessPartnerIdChanged();
                    OnPropertyChanged("BusinessPartnerId");
                }
            }
        }
        private long? _BusinessPartnerId;

        public virtual long? BusPartnerPriceGroupId
        {
            get
            {
                return _BusPartnerPriceGroupId;
            }
            set
            {
                if (_BusPartnerPriceGroupId != value)
                {
                    this.OnBusPartnerPriceGroupIdChanging(value);
                    OnPropertyChanging("BusPartnerPriceGroupId");
                    _BusPartnerPriceGroupId = value;
                    this.OnBusPartnerPriceGroupIdChanged();
                    OnPropertyChanged("BusPartnerPriceGroupId");
                }
            }
        }
        private long? _BusPartnerPriceGroupId;

        public virtual long? CampaignId
        {
            get
            {
                return _CampaignId;
            }
            set
            {
                if (_CampaignId != value)
                {
                    this.OnCampaignIdChanging(value);
                    OnPropertyChanging("CampaignId");
                    _CampaignId = value;
                    this.OnCampaignIdChanged();
                    OnPropertyChanged("CampaignId");
                }
            }
        }
        private long? _CampaignId;

        [Required()]
        public virtual long ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                if (_ItemId != value)
                {
                    this.OnItemIdChanging(value);
                    OnPropertyChanging("ItemId");
                    _ItemId = value;
                    this.OnItemIdChanged();
                    OnPropertyChanged("ItemId");
                }
            }
        }
        private long _ItemId;

        public virtual long? UomId
        {
            get
            {
                return _UomId;
            }
            set
            {
                if (_UomId != value)
                {
                    this.OnUomIdChanging(value);
                    OnPropertyChanging("UomId");
                    _UomId = value;
                    this.OnUomIdChanged();
                    OnPropertyChanged("UomId");
                }
            }
        }
        private long? _UomId;

        [Required()]
        public virtual global::System.DateTime StartingDate
        {
            get
            {
                return _StartingDate;
            }
            set
            {
                if (_StartingDate != value)
                {
                    this.OnStartingDateChanging(value);
                    OnPropertyChanging("StartingDate");
                    _StartingDate = value;
                    this.OnStartingDateChanged();
                    OnPropertyChanged("StartingDate");
                }
            }
        }
        private global::System.DateTime _StartingDate;

        [Required()]
        public virtual decimal MinQty
        {
            get
            {
                return _MinQty;
            }
            set
            {
                if (_MinQty != value)
                {
                    this.OnMinQtyChanging(value);
                    OnPropertyChanging("MinQty");
                    _MinQty = value;
                    this.OnMinQtyChanged();
                    OnPropertyChanged("MinQty");
                }
            }
        }
        private decimal _MinQty;

        [Required()]
        public virtual decimal UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                if (_UnitPrice != value)
                {
                    this.OnUnitPriceChanging(value);
                    OnPropertyChanging("UnitPrice");
                    _UnitPrice = value;
                    this.OnUnitPriceChanged();
                    OnPropertyChanged("UnitPrice");
                }
            }
        }
        private decimal _UnitPrice;

        public virtual global::System.DateTime? EndingDate
        {
            get
            {
                return _EndingDate;
            }
            set
            {
                if (_EndingDate != value)
                {
                    this.OnEndingDateChanging(value);
                    OnPropertyChanging("EndingDate");
                    _EndingDate = value;
                    this.OnEndingDateChanged();
                    OnPropertyChanged("EndingDate");
                }
            }
        }
        private global::System.DateTime? _EndingDate;

        [Required()]
        public virtual byte Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    this.OnStatusChanging(value);
                    OnPropertyChanging("Status");
                    _Status = value;
                    this.OnStatusChanged();
                    OnPropertyChanged("Status");
                }
            }
        }
        private byte _Status;

        [Required()]
        public virtual long Version
        {
            get
            {
                return _Version;
            }
            set
            {
                if (_Version != value)
                {
                    this.OnVersionChanging(value);
                    OnPropertyChanging("Version");
                    _Version = value;
                    this.OnVersionChanged();
                    OnPropertyChanged("Version");
                }
            }
        }
        private long _Version;

        [Required()]
        public virtual long OrganizationId
        {
            get
            {
                return _OrganizationId;
            }
            set
            {
                if (_OrganizationId != value)
                {
                    this.OnOrganizationIdChanging(value);
                    OnPropertyChanging("OrganizationId");
                    _OrganizationId = value;
                    this.OnOrganizationIdChanged();
                    OnPropertyChanged("OrganizationId");
                }
            }
        }
        private long _OrganizationId;

        [Required()]
        public virtual long ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                if (_ClientId != value)
                {
                    this.OnClientIdChanging(value);
                    OnPropertyChanging("ClientId");
                    _ClientId = value;
                    this.OnClientIdChanged();
                    OnPropertyChanged("ClientId");
                }
            }
        }
        private long _ClientId;

        [Required()]
        public virtual global::System.DateTime RecCreatedAt
        {
            get
            {
                return _RecCreatedAt;
            }
            set
            {
                if (_RecCreatedAt != value)
                {
                    this.OnRecCreatedAtChanging(value);
                    OnPropertyChanging("RecCreatedAt");
                    _RecCreatedAt = value;
                    this.OnRecCreatedAtChanged();
                    OnPropertyChanged("RecCreatedAt");
                }
            }
        }
        private global::System.DateTime _RecCreatedAt;

        [Required()]
        public virtual long RecCreatedBy
        {
            get
            {
                return _RecCreatedBy;
            }
            set
            {
                if (_RecCreatedBy != value)
                {
                    this.OnRecCreatedByChanging(value);
                    OnPropertyChanging("RecCreatedBy");
                    _RecCreatedBy = value;
                    this.OnRecCreatedByChanged();
                    OnPropertyChanged("RecCreatedBy");
                }
            }
        }
        private long _RecCreatedBy;

        [Required()]
        public virtual global::System.DateTime RecModifiedAt
        {
            get
            {
                return _RecModifiedAt;
            }
            set
            {
                if (_RecModifiedAt != value)
                {
                    this.OnRecModifiedAtChanging(value);
                    OnPropertyChanging("RecModifiedAt");
                    _RecModifiedAt = value;
                    this.OnRecModifiedAtChanged();
                    OnPropertyChanged("RecModifiedAt");
                }
            }
        }
        private global::System.DateTime _RecModifiedAt;

        [Required()]
        public virtual long RecModifiedBy
        {
            get
            {
                return _RecModifiedBy;
            }
            set
            {
                if (_RecModifiedBy != value)
                {
                    this.OnRecModifiedByChanging(value);
                    OnPropertyChanging("RecModifiedBy");
                    _RecModifiedBy = value;
                    this.OnRecModifiedByChanged();
                    OnPropertyChanged("RecModifiedBy");
                }
            }
        }
        private long _RecModifiedBy;

        #endregion

        #region Navigation Properties

        public virtual SalesPriceGroup SalesPriceGroup
        {
            get
            {
                return _SalesPriceGroup;
            }
            set
            {
                if (_SalesPriceGroup != value)
                {
                    this.OnSalesPriceGroupChanging(value);
                    OnPropertyChanging("SalesPriceGroup");
                    _SalesPriceGroup = value;
                    this.OnSalesPriceGroupChanged();
                    OnPropertyChanged("SalesPriceGroup");
                }
            }
        }
        private SalesPriceGroup _SalesPriceGroup;
        public virtual Item Item
        {
            get
            {
                return _Item;
            }
            set
            {
                if (_Item != value)
                {
                    this.OnItemChanging(value);
                    OnPropertyChanging("Item");
                    _Item = value;
                    this.OnItemChanged();
                    OnPropertyChanged("Item");
                }
            }
        }
        private Item _Item;
        public virtual Uom Uom
        {
            get
            {
                return _Uom;
            }
            set
            {
                if (_Uom != value)
                {
                    this.OnUomChanging(value);
                    OnPropertyChanging("Uom");
                    _Uom = value;
                    this.OnUomChanged();
                    OnPropertyChanged("Uom");
                }
            }
        }
        private Uom _Uom;
        public virtual BusinessPartnerPriceGroup BusPartnerPriceGroup
        {
            get
            {
                return _BusPartnerPriceGroup;
            }
            set
            {
                if (_BusPartnerPriceGroup != value)
                {
                    this.OnBusPartnerPriceGroupChanging(value);
                    OnPropertyChanging("BusPartnerPriceGroup");
                    _BusPartnerPriceGroup = value;
                    this.OnBusPartnerPriceGroupChanged();
                    OnPropertyChanged("BusPartnerPriceGroup");
                }
            }
        }
        private BusinessPartnerPriceGroup _BusPartnerPriceGroup;
        public virtual BusinessPartner BusinessPartner
        {
            get
            {
                return _BusinessPartner;
            }
            set
            {
                if (_BusinessPartner != value)
                {
                    this.OnBusinessPartnerChanging(value);
                    OnPropertyChanging("BusinessPartner");
                    _BusinessPartner = value;
                    this.OnBusinessPartnerChanged();
                    OnPropertyChanged("BusinessPartner");
                }
            }
        }
        private BusinessPartner _BusinessPartner;

        #endregion

        #region Extensibility Method Definitions

        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnSalesPriceGroupIdChanging(long value);
        partial void OnSalesPriceGroupIdChanged();
        partial void OnSalesTypeChanging(short value);
        partial void OnSalesTypeChanged();
        partial void OnBusinessPartnerIdChanging(long? value);
        partial void OnBusinessPartnerIdChanged();
        partial void OnBusPartnerPriceGroupIdChanging(long? value);
        partial void OnBusPartnerPriceGroupIdChanged();
        partial void OnCampaignIdChanging(long? value);
        partial void OnCampaignIdChanged();
        partial void OnItemIdChanging(long value);
        partial void OnItemIdChanged();
        partial void OnUomIdChanging(long? value);
        partial void OnUomIdChanged();
        partial void OnStartingDateChanging(global::System.DateTime value);
        partial void OnStartingDateChanged();
        partial void OnMinQtyChanging(decimal value);
        partial void OnMinQtyChanged();
        partial void OnUnitPriceChanging(decimal value);
        partial void OnUnitPriceChanged();
        partial void OnEndingDateChanging(global::System.DateTime? value);
        partial void OnEndingDateChanged();
        partial void OnStatusChanging(byte value);
        partial void OnStatusChanged();
        partial void OnVersionChanging(long value);
        partial void OnVersionChanged();
        partial void OnOrganizationIdChanging(long value);
        partial void OnOrganizationIdChanged();
        partial void OnClientIdChanging(long value);
        partial void OnClientIdChanged();
        partial void OnRecCreatedAtChanging(global::System.DateTime value);
        partial void OnRecCreatedAtChanged();
        partial void OnRecCreatedByChanging(long value);
        partial void OnRecCreatedByChanged();
        partial void OnRecModifiedAtChanging(global::System.DateTime value);
        partial void OnRecModifiedAtChanged();
        partial void OnRecModifiedByChanging(long value);
        partial void OnRecModifiedByChanged();
        partial void OnSalesPriceGroupChanging(SalesPriceGroup value);
        partial void OnSalesPriceGroupChanged();
        partial void OnItemChanging(Item value);
        partial void OnItemChanged();
        partial void OnUomChanging(Uom value);
        partial void OnUomChanged();
        partial void OnBusPartnerPriceGroupChanging(BusinessPartnerPriceGroup value);
        partial void OnBusPartnerPriceGroupChanged();
        partial void OnBusinessPartnerChanging(BusinessPartner value);
        partial void OnBusinessPartnerChanged();

        #endregion

        #region INotifyPropertyChanging Members

        public event PropertyChangingEventHandler PropertyChanging;

        protected void OnPropertyChanging(string propertyName) {

          if (PropertyChanging != null)
            PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
