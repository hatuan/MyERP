//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 04/21/2021 10:23:24 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace MyERP.DataAccess
{
    public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
    {

        public User()
        {
            OnCreated();
        }

        #region Properties

        [Key]
        [Required()]
        public virtual long Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    this.OnIdChanging(value);
                    OnPropertyChanging("Id");
                    _Id = value;
                    this.OnIdChanged();
                    OnPropertyChanged("Id");
                }
            }
        }
        private long _Id;

        [StringLength(32)]
        [Required()]
        public virtual string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    this.OnNameChanging(value);
                    OnPropertyChanging("Name");
                    _Name = value;
                    this.OnNameChanged();
                    OnPropertyChanged("Name");
                }
            }
        }
        private string _Name;

        [StringLength(256)]
        [Required()]
        public virtual string FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                if (_FullName != value)
                {
                    this.OnFullNameChanging(value);
                    OnPropertyChanging("FullName");
                    _FullName = value;
                    this.OnFullNameChanged();
                    OnPropertyChanged("FullName");
                }
            }
        }
        private string _FullName;

        [StringLength(256)]
        [Required()]
        public virtual string Email
        {
            get
            {
                return _Email;
            }
            set
            {
                if (_Email != value)
                {
                    this.OnEmailChanging(value);
                    OnPropertyChanging("Email");
                    _Email = value;
                    this.OnEmailChanged();
                    OnPropertyChanged("Email");
                }
            }
        }
        private string _Email;

        [Required()]
        public virtual bool IsActivated
        {
            get
            {
                return _IsActivated;
            }
            set
            {
                if (_IsActivated != value)
                {
                    this.OnIsActivatedChanging(value);
                    OnPropertyChanging("IsActivated");
                    _IsActivated = value;
                    this.OnIsActivatedChanged();
                    OnPropertyChanged("IsActivated");
                }
            }
        }
        private bool _IsActivated;

        [Required()]
        public virtual bool IsEmailConfirmed
        {
            get
            {
                return _IsEmailConfirmed;
            }
            set
            {
                if (_IsEmailConfirmed != value)
                {
                    this.OnIsEmailConfirmedChanging(value);
                    OnPropertyChanging("IsEmailConfirmed");
                    _IsEmailConfirmed = value;
                    this.OnIsEmailConfirmedChanged();
                    OnPropertyChanged("IsEmailConfirmed");
                }
            }
        }
        private bool _IsEmailConfirmed;

        [StringLength(512)]
        public virtual string EmailConfirmationCode
        {
            get
            {
                return _EmailConfirmationCode;
            }
            set
            {
                if (_EmailConfirmationCode != value)
                {
                    this.OnEmailConfirmationCodeChanging(value);
                    OnPropertyChanging("EmailConfirmationCode");
                    _EmailConfirmationCode = value;
                    this.OnEmailConfirmationCodeChanged();
                    OnPropertyChanged("EmailConfirmationCode");
                }
            }
        }
        private string _EmailConfirmationCode;

        [StringLength(512)]
        public virtual string PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                if (_PasswordQuestion != value)
                {
                    this.OnPasswordQuestionChanging(value);
                    OnPropertyChanging("PasswordQuestion");
                    _PasswordQuestion = value;
                    this.OnPasswordQuestionChanged();
                    OnPropertyChanged("PasswordQuestion");
                }
            }
        }
        private string _PasswordQuestion;

        [StringLength(512)]
        public virtual string PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                if (_PasswordAnswer != value)
                {
                    this.OnPasswordAnswerChanging(value);
                    OnPropertyChanging("PasswordAnswer");
                    _PasswordAnswer = value;
                    this.OnPasswordAnswerChanged();
                    OnPropertyChanged("PasswordAnswer");
                }
            }
        }
        private string _PasswordAnswer;

        [StringLength(128)]
        [Required()]
        public virtual string Password
        {
            get
            {
                return _Password;
            }
            set
            {
                if (_Password != value)
                {
                    this.OnPasswordChanging(value);
                    OnPropertyChanging("Password");
                    _Password = value;
                    this.OnPasswordChanged();
                    OnPropertyChanged("Password");
                }
            }
        }
        private string _Password;

        [StringLength(32)]
        [Required()]
        public virtual string Salt
        {
            get
            {
                return _Salt;
            }
            set
            {
                if (_Salt != value)
                {
                    this.OnSaltChanging(value);
                    OnPropertyChanging("Salt");
                    _Salt = value;
                    this.OnSaltChanged();
                    OnPropertyChanged("Salt");
                }
            }
        }
        private string _Salt;

        public virtual long? OrganizationId
        {
            get
            {
                return _OrganizationId;
            }
            set
            {
                if (_OrganizationId != value)
                {
                    this.OnOrganizationIdChanging(value);
                    OnPropertyChanging("OrganizationId");
                    _OrganizationId = value;
                    this.OnOrganizationIdChanged();
                    OnPropertyChanged("OrganizationId");
                }
            }
        }
        private long? _OrganizationId;

        public virtual long? ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                if (_ClientId != value)
                {
                    this.OnClientIdChanging(value);
                    OnPropertyChanging("ClientId");
                    _ClientId = value;
                    this.OnClientIdChanged();
                    OnPropertyChanged("ClientId");
                }
            }
        }
        private long? _ClientId;

        [StringLength(8)]
        public virtual string CultureUiId
        {
            get
            {
                return _CultureUiId;
            }
            set
            {
                if (_CultureUiId != value)
                {
                    this.OnCultureUiIdChanging(value);
                    OnPropertyChanging("CultureUiId");
                    _CultureUiId = value;
                    this.OnCultureUiIdChanged();
                    OnPropertyChanged("CultureUiId");
                }
            }
        }
        private string _CultureUiId;

        [StringLength(512)]
        public virtual string Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                if (_Comment != value)
                {
                    this.OnCommentChanging(value);
                    OnPropertyChanging("Comment");
                    _Comment = value;
                    this.OnCommentChanged();
                    OnPropertyChanged("Comment");
                }
            }
        }
        private string _Comment;

        [Required()]
        public virtual global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                if (_CreatedDate != value)
                {
                    this.OnCreatedDateChanging(value);
                    OnPropertyChanging("CreatedDate");
                    _CreatedDate = value;
                    this.OnCreatedDateChanged();
                    OnPropertyChanged("CreatedDate");
                }
            }
        }
        private global::System.DateTime _CreatedDate;

        public virtual global::System.DateTime? LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                if (_LastModifiedDate != value)
                {
                    this.OnLastModifiedDateChanging(value);
                    OnPropertyChanging("LastModifiedDate");
                    _LastModifiedDate = value;
                    this.OnLastModifiedDateChanged();
                    OnPropertyChanged("LastModifiedDate");
                }
            }
        }
        private global::System.DateTime? _LastModifiedDate;

        [StringLength(32)]
        [Required()]
        public virtual string LastLoginIp
        {
            get
            {
                return _LastLoginIp;
            }
            set
            {
                if (_LastLoginIp != value)
                {
                    this.OnLastLoginIpChanging(value);
                    OnPropertyChanging("LastLoginIp");
                    _LastLoginIp = value;
                    this.OnLastLoginIpChanged();
                    OnPropertyChanged("LastLoginIp");
                }
            }
        }
        private string _LastLoginIp;

        [Required()]
        public virtual global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                if (_LastLoginDate != value)
                {
                    this.OnLastLoginDateChanging(value);
                    OnPropertyChanging("LastLoginDate");
                    _LastLoginDate = value;
                    this.OnLastLoginDateChanged();
                    OnPropertyChanged("LastLoginDate");
                }
            }
        }
        private global::System.DateTime _LastLoginDate;

        [Required()]
        public virtual bool IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                if (_IsLockedOut != value)
                {
                    this.OnIsLockedOutChanging(value);
                    OnPropertyChanging("IsLockedOut");
                    _IsLockedOut = value;
                    this.OnIsLockedOutChanged();
                    OnPropertyChanged("IsLockedOut");
                }
            }
        }
        private bool _IsLockedOut;

        [StringLength(512)]
        public virtual string LastLockedOutReason
        {
            get
            {
                return _LastLockedOutReason;
            }
            set
            {
                if (_LastLockedOutReason != value)
                {
                    this.OnLastLockedOutReasonChanging(value);
                    OnPropertyChanging("LastLockedOutReason");
                    _LastLockedOutReason = value;
                    this.OnLastLockedOutReasonChanged();
                    OnPropertyChanged("LastLockedOutReason");
                }
            }
        }
        private string _LastLockedOutReason;

        [Required()]
        public virtual global::System.DateTime LastLockedOutDate
        {
            get
            {
                return _LastLockedOutDate;
            }
            set
            {
                if (_LastLockedOutDate != value)
                {
                    this.OnLastLockedOutDateChanging(value);
                    OnPropertyChanging("LastLockedOutDate");
                    _LastLockedOutDate = value;
                    this.OnLastLockedOutDateChanged();
                    OnPropertyChanged("LastLockedOutDate");
                }
            }
        }
        private global::System.DateTime _LastLockedOutDate;

        [Required()]
        public virtual global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                if (_LastPasswordChangedDate != value)
                {
                    this.OnLastPasswordChangedDateChanging(value);
                    OnPropertyChanging("LastPasswordChangedDate");
                    _LastPasswordChangedDate = value;
                    this.OnLastPasswordChangedDateChanged();
                    OnPropertyChanged("LastPasswordChangedDate");
                }
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;

        [Required()]
        public virtual long Version
        {
            get
            {
                return _Version;
            }
            set
            {
                if (_Version != value)
                {
                    this.OnVersionChanging(value);
                    OnPropertyChanging("Version");
                    _Version = value;
                    this.OnVersionChanged();
                    OnPropertyChanged("Version");
                }
            }
        }
        private long _Version = 1;

        #endregion

        #region Navigation Properties

        public virtual ICollection<UserInRole> Roles { get; set; }
        public virtual Organization Organization
        {
            get
            {
                return _Organization;
            }
            set
            {
                if (_Organization != value)
                {
                    this.OnOrganizationChanging(value);
                    OnPropertyChanging("Organization");
                    _Organization = value;
                    this.OnOrganizationChanged();
                    OnPropertyChanged("Organization");
                }
            }
        }
        private Organization _Organization;
        public virtual Client Client
        {
            get
            {
                return _Client;
            }
            set
            {
                if (_Client != value)
                {
                    this.OnClientChanging(value);
                    OnPropertyChanging("Client");
                    _Client = value;
                    this.OnClientChanged();
                    OnPropertyChanged("Client");
                }
            }
        }
        private Client _Client;

        #endregion

        #region Extensibility Method Definitions

        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnFullNameChanging(string value);
        partial void OnFullNameChanged();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnIsActivatedChanging(bool value);
        partial void OnIsActivatedChanged();
        partial void OnIsEmailConfirmedChanging(bool value);
        partial void OnIsEmailConfirmedChanged();
        partial void OnEmailConfirmationCodeChanging(string value);
        partial void OnEmailConfirmationCodeChanged();
        partial void OnPasswordQuestionChanging(string value);
        partial void OnPasswordQuestionChanged();
        partial void OnPasswordAnswerChanging(string value);
        partial void OnPasswordAnswerChanged();
        partial void OnPasswordChanging(string value);
        partial void OnPasswordChanged();
        partial void OnSaltChanging(string value);
        partial void OnSaltChanged();
        partial void OnOrganizationIdChanging(long? value);
        partial void OnOrganizationIdChanged();
        partial void OnClientIdChanging(long? value);
        partial void OnClientIdChanged();
        partial void OnCultureUiIdChanging(string value);
        partial void OnCultureUiIdChanged();
        partial void OnCommentChanging(string value);
        partial void OnCommentChanged();
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
        partial void OnLastModifiedDateChanging(global::System.DateTime? value);
        partial void OnLastModifiedDateChanged();
        partial void OnLastLoginIpChanging(string value);
        partial void OnLastLoginIpChanged();
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
        partial void OnIsLockedOutChanging(bool value);
        partial void OnIsLockedOutChanged();
        partial void OnLastLockedOutReasonChanging(string value);
        partial void OnLastLockedOutReasonChanged();
        partial void OnLastLockedOutDateChanging(global::System.DateTime value);
        partial void OnLastLockedOutDateChanged();
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
        partial void OnVersionChanging(long value);
        partial void OnVersionChanged();
        partial void OnOrganizationChanging(Organization value);
        partial void OnOrganizationChanged();
        partial void OnClientChanging(Client value);
        partial void OnClientChanged();

        #endregion

        #region INotifyPropertyChanging Members

        public event PropertyChangingEventHandler PropertyChanging;

        protected void OnPropertyChanging(string propertyName) {

          if (PropertyChanging != null)
            PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
