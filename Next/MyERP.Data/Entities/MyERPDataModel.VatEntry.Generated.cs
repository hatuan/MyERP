//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 04/21/2021 10:23:24 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace MyERP.DataAccess
{
    public partial class VatEntry : INotifyPropertyChanging, INotifyPropertyChanged
    {

        public VatEntry()
        {
            OnCreated();
        }

        #region Properties

        [Key]
        [Required()]
        public virtual long Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    this.OnIdChanging(value);
                    OnPropertyChanging("Id");
                    _Id = value;
                    this.OnIdChanged();
                    OnPropertyChanged("Id");
                }
            }
        }
        private long _Id;

        public virtual long? PurchHeaderId
        {
            get
            {
                return _PurchHeaderId;
            }
            set
            {
                if (_PurchHeaderId != value)
                {
                    this.OnPurchHeaderIdChanging(value);
                    OnPropertyChanging("PurchHeaderId");
                    _PurchHeaderId = value;
                    this.OnPurchHeaderIdChanged();
                    OnPropertyChanged("PurchHeaderId");
                }
            }
        }
        private long? _PurchHeaderId;

        public virtual long? CashHeaderId
        {
            get
            {
                return _CashHeaderId;
            }
            set
            {
                if (_CashHeaderId != value)
                {
                    this.OnCashHeaderIdChanging(value);
                    OnPropertyChanging("CashHeaderId");
                    _CashHeaderId = value;
                    this.OnCashHeaderIdChanged();
                    OnPropertyChanged("CashHeaderId");
                }
            }
        }
        private long? _CashHeaderId;

        [Required()]
        public virtual byte DocumentType
        {
            get
            {
                return _DocumentType;
            }
            set
            {
                if (_DocumentType != value)
                {
                    this.OnDocumentTypeChanging(value);
                    OnPropertyChanging("DocumentType");
                    _DocumentType = value;
                    this.OnDocumentTypeChanged();
                    OnPropertyChanged("DocumentType");
                }
            }
        }
        private byte _DocumentType;

        [Required()]
        public virtual byte DocumentSubType
        {
            get
            {
                return _DocumentSubType;
            }
            set
            {
                if (_DocumentSubType != value)
                {
                    this.OnDocumentSubTypeChanging(value);
                    OnPropertyChanging("DocumentSubType");
                    _DocumentSubType = value;
                    this.OnDocumentSubTypeChanged();
                    OnPropertyChanged("DocumentSubType");
                }
            }
        }
        private byte _DocumentSubType;

        [StringLength(32)]
        [Required()]
        public virtual string DocumentNo
        {
            get
            {
                return _DocumentNo;
            }
            set
            {
                if (_DocumentNo != value)
                {
                    this.OnDocumentNoChanging(value);
                    OnPropertyChanging("DocumentNo");
                    _DocumentNo = value;
                    this.OnDocumentNoChanged();
                    OnPropertyChanged("DocumentNo");
                }
            }
        }
        private string _DocumentNo;

        [Required()]
        public virtual global::System.DateTime DocumentDate
        {
            get
            {
                return _DocumentDate;
            }
            set
            {
                if (_DocumentDate != value)
                {
                    this.OnDocumentDateChanging(value);
                    OnPropertyChanging("DocumentDate");
                    _DocumentDate = value;
                    this.OnDocumentDateChanged();
                    OnPropertyChanged("DocumentDate");
                }
            }
        }
        private global::System.DateTime _DocumentDate;

        [Required()]
        public virtual global::System.DateTime PostingDate
        {
            get
            {
                return _PostingDate;
            }
            set
            {
                if (_PostingDate != value)
                {
                    this.OnPostingDateChanging(value);
                    OnPropertyChanging("PostingDate");
                    _PostingDate = value;
                    this.OnPostingDateChanged();
                    OnPropertyChanged("PostingDate");
                }
            }
        }
        private global::System.DateTime _PostingDate;

        [Required()]
        public virtual global::System.DateTime InvoiceIssuedDate
        {
            get
            {
                return _InvoiceIssuedDate;
            }
            set
            {
                if (_InvoiceIssuedDate != value)
                {
                    this.OnInvoiceIssuedDateChanging(value);
                    OnPropertyChanging("InvoiceIssuedDate");
                    _InvoiceIssuedDate = value;
                    this.OnInvoiceIssuedDateChanged();
                    OnPropertyChanged("InvoiceIssuedDate");
                }
            }
        }
        private global::System.DateTime _InvoiceIssuedDate;

        [StringLength(32)]
        [Required()]
        public virtual string InvoiceNumber
        {
            get
            {
                return _InvoiceNumber;
            }
            set
            {
                if (_InvoiceNumber != value)
                {
                    this.OnInvoiceNumberChanging(value);
                    OnPropertyChanging("InvoiceNumber");
                    _InvoiceNumber = value;
                    this.OnInvoiceNumberChanged();
                    OnPropertyChanged("InvoiceNumber");
                }
            }
        }
        private string _InvoiceNumber;

        [StringLength(32)]
        [Required()]
        public virtual string InvoiceSeries
        {
            get
            {
                return _InvoiceSeries;
            }
            set
            {
                if (_InvoiceSeries != value)
                {
                    this.OnInvoiceSeriesChanging(value);
                    OnPropertyChanging("InvoiceSeries");
                    _InvoiceSeries = value;
                    this.OnInvoiceSeriesChanged();
                    OnPropertyChanged("InvoiceSeries");
                }
            }
        }
        private string _InvoiceSeries;

        [Required()]
        public virtual long LineNo
        {
            get
            {
                return _LineNo;
            }
            set
            {
                if (_LineNo != value)
                {
                    this.OnLineNoChanging(value);
                    OnPropertyChanging("LineNo");
                    _LineNo = value;
                    this.OnLineNoChanged();
                    OnPropertyChanged("LineNo");
                }
            }
        }
        private long _LineNo;

        [Required()]
        public virtual long BusinessPartnerId
        {
            get
            {
                return _BusinessPartnerId;
            }
            set
            {
                if (_BusinessPartnerId != value)
                {
                    this.OnBusinessPartnerIdChanging(value);
                    OnPropertyChanging("BusinessPartnerId");
                    _BusinessPartnerId = value;
                    this.OnBusinessPartnerIdChanged();
                    OnPropertyChanged("BusinessPartnerId");
                }
            }
        }
        private long _BusinessPartnerId;

        [StringLength(256)]
        [Required()]
        public virtual string BusinessPartnerName
        {
            get
            {
                return _BusinessPartnerName;
            }
            set
            {
                if (_BusinessPartnerName != value)
                {
                    this.OnBusinessPartnerNameChanging(value);
                    OnPropertyChanging("BusinessPartnerName");
                    _BusinessPartnerName = value;
                    this.OnBusinessPartnerNameChanged();
                    OnPropertyChanged("BusinessPartnerName");
                }
            }
        }
        private string _BusinessPartnerName;

        [StringLength(256)]
        [Required()]
        public virtual string BusinessPartnerAddress
        {
            get
            {
                return _BusinessPartnerAddress;
            }
            set
            {
                if (_BusinessPartnerAddress != value)
                {
                    this.OnBusinessPartnerAddressChanging(value);
                    OnPropertyChanging("BusinessPartnerAddress");
                    _BusinessPartnerAddress = value;
                    this.OnBusinessPartnerAddressChanged();
                    OnPropertyChanged("BusinessPartnerAddress");
                }
            }
        }
        private string _BusinessPartnerAddress;

        [StringLength(32)]
        [Required()]
        public virtual string TaxCode
        {
            get
            {
                return _TaxCode;
            }
            set
            {
                if (_TaxCode != value)
                {
                    this.OnTaxCodeChanging(value);
                    OnPropertyChanging("TaxCode");
                    _TaxCode = value;
                    this.OnTaxCodeChanged();
                    OnPropertyChanged("TaxCode");
                }
            }
        }
        private string _TaxCode;

        [StringLength(256)]
        [Required()]
        public virtual string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    this.OnDescriptionChanging(value);
                    OnPropertyChanging("Description");
                    _Description = value;
                    this.OnDescriptionChanged();
                    OnPropertyChanged("Description");
                }
            }
        }
        private string _Description;

        [Required()]
        public virtual long CurrencyId
        {
            get
            {
                return _CurrencyId;
            }
            set
            {
                if (_CurrencyId != value)
                {
                    this.OnCurrencyIdChanging(value);
                    OnPropertyChanging("CurrencyId");
                    _CurrencyId = value;
                    this.OnCurrencyIdChanged();
                    OnPropertyChanged("CurrencyId");
                }
            }
        }
        private long _CurrencyId;

        [Required()]
        public virtual decimal CurrencyFactor
        {
            get
            {
                return _CurrencyFactor;
            }
            set
            {
                if (_CurrencyFactor != value)
                {
                    this.OnCurrencyFactorChanging(value);
                    OnPropertyChanging("CurrencyFactor");
                    _CurrencyFactor = value;
                    this.OnCurrencyFactorChanged();
                    OnPropertyChanged("CurrencyFactor");
                }
            }
        }
        private decimal _CurrencyFactor;

        [Required()]
        public virtual decimal VatBaseAmount
        {
            get
            {
                return _VatBaseAmount;
            }
            set
            {
                if (_VatBaseAmount != value)
                {
                    this.OnVatBaseAmountChanging(value);
                    OnPropertyChanging("VatBaseAmount");
                    _VatBaseAmount = value;
                    this.OnVatBaseAmountChanged();
                    OnPropertyChanged("VatBaseAmount");
                }
            }
        }
        private decimal _VatBaseAmount;

        [Required()]
        public virtual decimal VatBaseAmountLCY
        {
            get
            {
                return _VatBaseAmountLCY;
            }
            set
            {
                if (_VatBaseAmountLCY != value)
                {
                    this.OnVatBaseAmountLCYChanging(value);
                    OnPropertyChanging("VatBaseAmountLCY");
                    _VatBaseAmountLCY = value;
                    this.OnVatBaseAmountLCYChanged();
                    OnPropertyChanged("VatBaseAmountLCY");
                }
            }
        }
        private decimal _VatBaseAmountLCY;

        [Required()]
        public virtual long VatId
        {
            get
            {
                return _VatId;
            }
            set
            {
                if (_VatId != value)
                {
                    this.OnVatIdChanging(value);
                    OnPropertyChanging("VatId");
                    _VatId = value;
                    this.OnVatIdChanged();
                    OnPropertyChanged("VatId");
                }
            }
        }
        private long _VatId;

        [Required()]
        public virtual short VatPercentage
        {
            get
            {
                return _VatPercentage;
            }
            set
            {
                if (_VatPercentage != value)
                {
                    this.OnVatPercentageChanging(value);
                    OnPropertyChanging("VatPercentage");
                    _VatPercentage = value;
                    this.OnVatPercentageChanged();
                    OnPropertyChanged("VatPercentage");
                }
            }
        }
        private short _VatPercentage;

        [Required()]
        public virtual decimal VatAmount
        {
            get
            {
                return _VatAmount;
            }
            set
            {
                if (_VatAmount != value)
                {
                    this.OnVatAmountChanging(value);
                    OnPropertyChanging("VatAmount");
                    _VatAmount = value;
                    this.OnVatAmountChanged();
                    OnPropertyChanged("VatAmount");
                }
            }
        }
        private decimal _VatAmount;

        [Required()]
        public virtual decimal VatAmountLCY
        {
            get
            {
                return _VatAmountLCY;
            }
            set
            {
                if (_VatAmountLCY != value)
                {
                    this.OnVatAmountLCYChanging(value);
                    OnPropertyChanging("VatAmountLCY");
                    _VatAmountLCY = value;
                    this.OnVatAmountLCYChanged();
                    OnPropertyChanged("VatAmountLCY");
                }
            }
        }
        private decimal _VatAmountLCY;

        [Required()]
        public virtual long AccountVatId
        {
            get
            {
                return _AccountVatId;
            }
            set
            {
                if (_AccountVatId != value)
                {
                    this.OnAccountVatIdChanging(value);
                    OnPropertyChanging("AccountVatId");
                    _AccountVatId = value;
                    this.OnAccountVatIdChanged();
                    OnPropertyChanged("AccountVatId");
                }
            }
        }
        private long _AccountVatId;

        [Required()]
        public virtual long CorrespAccountId
        {
            get
            {
                return _CorrespAccountId;
            }
            set
            {
                if (_CorrespAccountId != value)
                {
                    this.OnCorrespAccountIdChanging(value);
                    OnPropertyChanging("CorrespAccountId");
                    _CorrespAccountId = value;
                    this.OnCorrespAccountIdChanged();
                    OnPropertyChanged("CorrespAccountId");
                }
            }
        }
        private long _CorrespAccountId;

        public virtual long? JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                if (_JobId != value)
                {
                    this.OnJobIdChanging(value);
                    OnPropertyChanging("JobId");
                    _JobId = value;
                    this.OnJobIdChanged();
                    OnPropertyChanged("JobId");
                }
            }
        }
        private long? _JobId;

        [Required()]
        public virtual long OrganizationId
        {
            get
            {
                return _OrganizationId;
            }
            set
            {
                if (_OrganizationId != value)
                {
                    this.OnOrganizationIdChanging(value);
                    OnPropertyChanging("OrganizationId");
                    _OrganizationId = value;
                    this.OnOrganizationIdChanged();
                    OnPropertyChanged("OrganizationId");
                }
            }
        }
        private long _OrganizationId;

        [Required()]
        public virtual long ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                if (_ClientId != value)
                {
                    this.OnClientIdChanging(value);
                    OnPropertyChanging("ClientId");
                    _ClientId = value;
                    this.OnClientIdChanged();
                    OnPropertyChanged("ClientId");
                }
            }
        }
        private long _ClientId;

        #endregion

        #region Navigation Properties

        public virtual BusinessPartner BusinessPartner
        {
            get
            {
                return _BusinessPartner;
            }
            set
            {
                if (_BusinessPartner != value)
                {
                    this.OnBusinessPartnerChanging(value);
                    OnPropertyChanging("BusinessPartner");
                    _BusinessPartner = value;
                    this.OnBusinessPartnerChanged();
                    OnPropertyChanged("BusinessPartner");
                }
            }
        }
        private BusinessPartner _BusinessPartner;
        public virtual Vat Vat
        {
            get
            {
                return _Vat;
            }
            set
            {
                if (_Vat != value)
                {
                    this.OnVatChanging(value);
                    OnPropertyChanging("Vat");
                    _Vat = value;
                    this.OnVatChanged();
                    OnPropertyChanged("Vat");
                }
            }
        }
        private Vat _Vat;
        public virtual Client Client
        {
            get
            {
                return _Client;
            }
            set
            {
                if (_Client != value)
                {
                    this.OnClientChanging(value);
                    OnPropertyChanging("Client");
                    _Client = value;
                    this.OnClientChanged();
                    OnPropertyChanged("Client");
                }
            }
        }
        private Client _Client;
        public virtual Organization Organization
        {
            get
            {
                return _Organization;
            }
            set
            {
                if (_Organization != value)
                {
                    this.OnOrganizationChanging(value);
                    OnPropertyChanging("Organization");
                    _Organization = value;
                    this.OnOrganizationChanged();
                    OnPropertyChanged("Organization");
                }
            }
        }
        private Organization _Organization;
        public virtual Account AccountVat
        {
            get
            {
                return _AccountVat;
            }
            set
            {
                if (_AccountVat != value)
                {
                    this.OnAccountVatChanging(value);
                    OnPropertyChanging("AccountVat");
                    _AccountVat = value;
                    this.OnAccountVatChanged();
                    OnPropertyChanged("AccountVat");
                }
            }
        }
        private Account _AccountVat;
        public virtual Account CorrespAccount
        {
            get
            {
                return _CorrespAccount;
            }
            set
            {
                if (_CorrespAccount != value)
                {
                    this.OnCorrespAccountChanging(value);
                    OnPropertyChanging("CorrespAccount");
                    _CorrespAccount = value;
                    this.OnCorrespAccountChanged();
                    OnPropertyChanged("CorrespAccount");
                }
            }
        }
        private Account _CorrespAccount;
        public virtual Job Job
        {
            get
            {
                return _Job;
            }
            set
            {
                if (_Job != value)
                {
                    this.OnJobChanging(value);
                    OnPropertyChanging("Job");
                    _Job = value;
                    this.OnJobChanged();
                    OnPropertyChanged("Job");
                }
            }
        }
        private Job _Job;
        public virtual Currency Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                if (_Currency != value)
                {
                    this.OnCurrencyChanging(value);
                    OnPropertyChanging("Currency");
                    _Currency = value;
                    this.OnCurrencyChanged();
                    OnPropertyChanged("Currency");
                }
            }
        }
        private Currency _Currency;

        #endregion

        #region Extensibility Method Definitions

        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnPurchHeaderIdChanging(long? value);
        partial void OnPurchHeaderIdChanged();
        partial void OnCashHeaderIdChanging(long? value);
        partial void OnCashHeaderIdChanged();
        partial void OnDocumentTypeChanging(byte value);
        partial void OnDocumentTypeChanged();
        partial void OnDocumentSubTypeChanging(byte value);
        partial void OnDocumentSubTypeChanged();
        partial void OnDocumentNoChanging(string value);
        partial void OnDocumentNoChanged();
        partial void OnDocumentDateChanging(global::System.DateTime value);
        partial void OnDocumentDateChanged();
        partial void OnPostingDateChanging(global::System.DateTime value);
        partial void OnPostingDateChanged();
        partial void OnInvoiceIssuedDateChanging(global::System.DateTime value);
        partial void OnInvoiceIssuedDateChanged();
        partial void OnInvoiceNumberChanging(string value);
        partial void OnInvoiceNumberChanged();
        partial void OnInvoiceSeriesChanging(string value);
        partial void OnInvoiceSeriesChanged();
        partial void OnLineNoChanging(long value);
        partial void OnLineNoChanged();
        partial void OnBusinessPartnerIdChanging(long value);
        partial void OnBusinessPartnerIdChanged();
        partial void OnBusinessPartnerNameChanging(string value);
        partial void OnBusinessPartnerNameChanged();
        partial void OnBusinessPartnerAddressChanging(string value);
        partial void OnBusinessPartnerAddressChanged();
        partial void OnTaxCodeChanging(string value);
        partial void OnTaxCodeChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnCurrencyIdChanging(long value);
        partial void OnCurrencyIdChanged();
        partial void OnCurrencyFactorChanging(decimal value);
        partial void OnCurrencyFactorChanged();
        partial void OnVatBaseAmountChanging(decimal value);
        partial void OnVatBaseAmountChanged();
        partial void OnVatBaseAmountLCYChanging(decimal value);
        partial void OnVatBaseAmountLCYChanged();
        partial void OnVatIdChanging(long value);
        partial void OnVatIdChanged();
        partial void OnVatPercentageChanging(short value);
        partial void OnVatPercentageChanged();
        partial void OnVatAmountChanging(decimal value);
        partial void OnVatAmountChanged();
        partial void OnVatAmountLCYChanging(decimal value);
        partial void OnVatAmountLCYChanged();
        partial void OnAccountVatIdChanging(long value);
        partial void OnAccountVatIdChanged();
        partial void OnCorrespAccountIdChanging(long value);
        partial void OnCorrespAccountIdChanged();
        partial void OnJobIdChanging(long? value);
        partial void OnJobIdChanged();
        partial void OnOrganizationIdChanging(long value);
        partial void OnOrganizationIdChanged();
        partial void OnClientIdChanging(long value);
        partial void OnClientIdChanged();
        partial void OnBusinessPartnerChanging(BusinessPartner value);
        partial void OnBusinessPartnerChanged();
        partial void OnVatChanging(Vat value);
        partial void OnVatChanged();
        partial void OnClientChanging(Client value);
        partial void OnClientChanged();
        partial void OnOrganizationChanging(Organization value);
        partial void OnOrganizationChanged();
        partial void OnAccountVatChanging(Account value);
        partial void OnAccountVatChanged();
        partial void OnCorrespAccountChanging(Account value);
        partial void OnCorrespAccountChanged();
        partial void OnJobChanging(Job value);
        partial void OnJobChanged();
        partial void OnCurrencyChanging(Currency value);
        partial void OnCurrencyChanged();

        #endregion

        #region INotifyPropertyChanging Members

        public event PropertyChangingEventHandler PropertyChanging;

        protected void OnPropertyChanging(string propertyName) {

          if (PropertyChanging != null)
            PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
